2024-08-25 12:58:46 INFO  o.p.PositionAggregationApplication - Starting PositionAggregationApplication using Java 21.0.4 with PID 23722 (/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 12:58:46 INFO  o.p.PositionAggregationApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-25 12:58:48 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 12:58:48 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 160 ms. Found 4 JPA repository interfaces.
2024-08-25 12:58:49 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-08-25 12:58:49 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-25 12:58:49 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-25 12:58:49 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-08-25 12:58:50 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-25 12:58:50 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3455 ms
2024-08-25 12:58:50 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.positionAggregation.entity.Account
		org.positionAggregation.entity.Position
		org.positionAggregation.entity.Product
		org.positionAggregation.entity.Transaction]
	Mapping files names []
	Properties []
2024-08-25 12:58:50 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-08-25 12:58:50 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-08-25 12:58:50 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 12:58:50 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-08-25 12:58:50 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-08-25 12:58:50 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-08-25 12:58:50 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-08-25 12:58:50 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@35adf623
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@35adf623
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@35adf623
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@8f40022
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@8f40022
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5232e3f1
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5232e3f1
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5232e3f1
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2047981
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2047981
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2ad99cf3
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5d7911d5
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1b3ab4f9
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1b3ab4f9
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5c6a5192
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5c6a5192
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@552cede7
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b7f06c7
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b7f06c7
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@151732fb
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@729c8063
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@729c8063
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@729c8063
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@40ed1802
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@23c767e6
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@feb098f
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@19e21f89
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@19e21f89
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@31e739bf
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@31e739bf
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@29079032
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7e7743ec
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@776015fc
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f42e06e
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6ad179b4
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2efd2f21
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@59c500f7
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@59c500f7
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@316cda31
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@316cda31
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@50110971
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@50110971
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@17d2b075
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@17d2b075
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6661d8c0
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6661d8c0
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@310b2b6f
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6909f6be
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b5ab2f2
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b5ab2f2
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@315c081
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b2dd3df
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4db77402
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@73c48264
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@73c48264
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5ef85555
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5bcec67e
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2dafae61
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2dafae61
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7a2fce12
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7a2fce12
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@66e17eff
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@66e17eff
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@66e17eff
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1bbddada
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1f66d8e1
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@721d5b74
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@721d5b74
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@41bfa9e9
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@68b7d0ef
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7069f076
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7069f076
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@202d9236
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@202d9236
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1f782c05
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1f782c05
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6d6ac396
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6d6ac396
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@432af457
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@432af457
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@f5a7226
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@f5a7226
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@519c6fcc
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3292d91a
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3292d91a
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ad9b8d3
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@168ad26f
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f93bf0a
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@322204dc
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@656a3d6b
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@25b38203
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@778a1250
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@55acec99
2024-08-25 12:58:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@61191222
2024-08-25 12:58:51 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3fcbc766] into BootstrapContext; was [null]
2024-08-25 12:58:51 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3fcbc766) [was null]
2024-08-25 12:58:51 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1d4f5506] into BootstrapContext; was [null]
2024-08-25 12:58:51 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7dee835] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b57c345]
2024-08-25 12:58:51 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 12:58:52 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 12:58:52 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3fcbc766]
2024-08-25 12:58:52 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3fcbc766]
2024-08-25 12:58:52 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 12:58:54 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 12:58:54 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 12:58:54 DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2024-08-25 12:58:54 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 12:58:54 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 12:58:54 INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-25 12:58:54 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 12:58:54 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 16 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 31 common frames omitted
2024-08-25 12:59:23 INFO  IntegrationTest - Starting IntegrationTest using Java 21.0.4 with PID 23755 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 12:59:23 INFO  IntegrationTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 12:59:24 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 12:59:24 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 4 JPA repository interfaces.
2024-08-25 12:59:25 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 12:59:25 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 12:59:25 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 12:59:25 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 12:59:25 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 12:59:25 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 12:59:27 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 12:59:27 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 12:59:27 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 12:59:27 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 12:59:27 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 12:59:27 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 12:59:27 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [IntegrationTest@6f6c8d45]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@63bca84d testClass = IntegrationTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7894f09b, [ImportsContextCustomizer@6141647f key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@557a1e2d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@31e75d13, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d098f9b, org.springframework.boot.test.context.SpringBootTestAnnotation@39a406a7], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 12:59:28 INFO  o.p.c.PositionControllerTest - Starting PositionControllerTest using Java 21.0.4 with PID 23755 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 12:59:28 INFO  o.p.c.PositionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 12:59:28 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 12:59:28 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 4 JPA repository interfaces.
2024-08-25 12:59:29 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 12:59:29 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 12:59:29 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 12:59:29 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2024-08-25 12:59:30 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 12:59:30 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 12:59:30 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 12:59:30 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 12:59:30 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 12:59:30 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 12:59:30 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [org.positionAggregation.controllers.PositionControllerTest@7d1cdeb1]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@2d73767e testClass = org.positionAggregation.controllers.PositionControllerTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7894f09b, [ImportsContextCustomizer@5e6522a6 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@557a1e2d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@31e75d13, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d098f9b, org.springframework.boot.test.context.SpringBootTestAnnotation@39a406a7], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 12:59:30 INFO  o.p.c.TransactionControllerTest - Starting TransactionControllerTest using Java 21.0.4 with PID 23755 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 12:59:30 INFO  o.p.c.TransactionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 12:59:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 12:59:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 4 JPA repository interfaces.
2024-08-25 12:59:30 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 12:59:30 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 12:59:30 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 12:59:30 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2024-08-25 12:59:31 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 12:59:31 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 12:59:31 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 12:59:31 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 12:59:31 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 12:59:31 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 12:59:32 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [org.positionAggregation.controllers.TransactionControllerTest@7be62956]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7210f559 testClass = org.positionAggregation.controllers.TransactionControllerTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7894f09b, [ImportsContextCustomizer@49b9ba6a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@557a1e2d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@31e75d13, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d098f9b, org.springframework.boot.test.context.SpringBootTestAnnotation@39a406a7], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 13:29:09 INFO  IntegrationTest - Starting IntegrationTest using Java 21.0.4 with PID 25777 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 13:29:09 INFO  IntegrationTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 13:29:11 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 13:29:11 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 4 JPA repository interfaces.
2024-08-25 13:29:11 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 13:29:11 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 13:29:11 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 13:29:12 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 13:29:12 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 13:29:12 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 13:29:14 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 13:29:14 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 13:29:14 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 13:29:14 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 13:29:14 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 13:29:14 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 13:29:14 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [IntegrationTest@79d49790]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@6f6c8d45 testClass = IntegrationTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@47605f2f, [ImportsContextCustomizer@7f2ca6f8 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bc10d84, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7e38a7fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@56f6d40b, org.springframework.boot.test.context.SpringBootTestAnnotation@605642f9], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 13:29:14 INFO  o.p.c.PositionControllerTest - Starting PositionControllerTest using Java 21.0.4 with PID 25777 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 13:29:14 INFO  o.p.c.PositionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 13:29:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 13:29:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 4 JPA repository interfaces.
2024-08-25 13:29:15 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 13:29:15 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 13:29:15 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 13:29:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2024-08-25 13:29:16 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 13:29:16 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 13:29:16 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 13:29:16 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 13:29:16 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 13:29:16 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 13:29:16 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [org.positionAggregation.controllers.PositionControllerTest@c4551c6]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@5e6522a6 testClass = org.positionAggregation.controllers.PositionControllerTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@47605f2f, [ImportsContextCustomizer@7d1cdeb1 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bc10d84, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7e38a7fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@56f6d40b, org.springframework.boot.test.context.SpringBootTestAnnotation@605642f9], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 13:29:16 INFO  o.p.c.TransactionControllerTest - Starting TransactionControllerTest using Java 21.0.4 with PID 25777 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 13:29:16 INFO  o.p.c.TransactionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 13:29:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 13:29:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 4 JPA repository interfaces.
2024-08-25 13:29:17 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 13:29:17 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 13:29:17 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 13:29:17 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2024-08-25 13:29:18 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 13:29:18 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'positiondb'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2024-08-25 13:29:18 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 13:29:18 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-08-25 13:29:18 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 13:29:18 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 13:29:18 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [org.positionAggregation.controllers.TransactionControllerTest@30e143ff]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@49b9ba6a testClass = org.positionAggregation.controllers.TransactionControllerTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@47605f2f, [ImportsContextCustomizer@7be62956 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bc10d84, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7e38a7fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@56f6d40b, org.springframework.boot.test.context.SpringBootTestAnnotation@605642f9], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 105 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 120 common frames omitted
2024-08-25 13:30:46 INFO  o.p.c.PositionControllerTest - Starting PositionControllerTest using Java 21.0.4 with PID 25883 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 13:30:46 INFO  o.p.c.PositionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 13:30:46 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 13:30:47 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 4 JPA repository interfaces.
2024-08-25 13:30:47 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
2024-08-25 13:30:47 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 13:30:47 ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine a suitable driver class


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2024-08-25 13:30:47 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [org.positionAggregation.controllers.PositionControllerTest@15d0d6c9]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@3fbe503c testClass = org.positionAggregation.controllers.PositionControllerTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4bff1903, [ImportsContextCustomizer@3c232051 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2611b9a3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7829b776, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f2613d1, org.springframework.boot.test.context.SpringBootTestAnnotation@1df0ad4a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:659)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 110 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine a suitable driver class
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	... 124 common frames omitted
Caused by: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine a suitable driver class
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:186)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getDriverClassName(PropertiesJdbcConnectionDetails.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:55)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	... 125 common frames omitted
2024-08-25 13:32:15 INFO  o.p.c.PositionControllerTest - Starting PositionControllerTest using Java 21.0.4 with PID 25972 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 13:32:15 INFO  o.p.c.PositionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 13:32:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 13:32:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 4 JPA repository interfaces.
2024-08-25 13:32:16 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
2024-08-25 13:32:16 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 13:32:16 ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine suitable jdbc url


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2024-08-25 13:32:16 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [org.positionAggregation.controllers.PositionControllerTest@61a2aeb7]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7a682d35 testClass = org.positionAggregation.controllers.PositionControllerTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4bff1903, [ImportsContextCustomizer@ee8e7ff key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2611b9a3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7829b776, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f2613d1, org.springframework.boot.test.context.SpringBootTestAnnotation@1df0ad4a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:659)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 110 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	... 124 common frames omitted
Caused by: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine suitable jdbc url
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineUrl(DataSourceProperties.java:232)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getJdbcUrl(PropertiesJdbcConnectionDetails.java:44)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:56)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	... 125 common frames omitted
2024-08-25 13:33:09 INFO  o.p.c.PositionControllerTest - Starting PositionControllerTest using Java 21.0.4 with PID 26007 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 13:33:09 INFO  o.p.c.PositionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 13:33:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 13:33:10 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 4 JPA repository interfaces.
2024-08-25 13:33:10 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
2024-08-25 13:33:10 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 13:33:10 ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine suitable jdbc url


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2024-08-25 13:33:10 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [org.positionAggregation.controllers.PositionControllerTest@38f981b6]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@2287395 testClass = org.positionAggregation.controllers.PositionControllerTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4bff1903, [ImportsContextCustomizer@535a518c key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2611b9a3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7829b776, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f2613d1, org.springframework.boot.test.context.SpringBootTestAnnotation@1df0ad4a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:659)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 110 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	... 124 common frames omitted
Caused by: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine suitable jdbc url
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineUrl(DataSourceProperties.java:232)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getJdbcUrl(PropertiesJdbcConnectionDetails.java:44)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:56)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	... 125 common frames omitted
2024-08-25 18:59:57 INFO  o.p.c.PositionControllerTest - Starting PositionControllerTest using Java 21.0.4 with PID 29024 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 18:59:57 INFO  o.p.c.PositionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 18:59:58 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 18:59:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 125 ms. Found 4 JPA repository interfaces.
2024-08-25 19:00:00 WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
2024-08-25 19:00:00 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 19:00:01 ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.

Reason: Failed to determine suitable jdbc url


Action:

Consider the following:
	If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.
	If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).

2024-08-25 19:00:01 ERROR o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [org.positionAggregation.controllers.PositionControllerTest@3a4aadf8]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@535a518c testClass = org.positionAggregation.controllers.PositionControllerTest, locations = [], classes = [org.positionAggregation.PositionAggregationApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceLocations = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4bff1903, [ImportsContextCustomizer@38f981b6 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2611b9a3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7829b776, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f2613d1, org.springframework.boot.test.context.SpringBootTestAnnotation@1df0ad4a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:143)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:550)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1406)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:187)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:119)
	... 84 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:659)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 110 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to determine suitable jdbc url
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:171)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	... 124 common frames omitted
Caused by: org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$DataSourceBeanCreationException: Failed to determine suitable jdbc url
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineUrl(DataSourceProperties.java:232)
	at org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails.getJdbcUrl(PropertiesJdbcConnectionDetails.java:44)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:56)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:139)
	... 125 common frames omitted
2024-08-25 19:01:44 INFO  o.p.c.PositionControllerTest - Starting PositionControllerTest using Java 21.0.4 with PID 29114 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 19:01:44 INFO  o.p.c.PositionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 19:01:45 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 19:01:45 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 4 JPA repository interfaces.
2024-08-25 19:01:45 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 19:01:45 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 19:01:45 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 19:01:46 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:01:46 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 19:01:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 19:01:47 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d1cb59f
2024-08-25 19:01:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-25 19:01:48 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:01:49 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-08-25 19:01:50 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:01:50 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-25 19:01:51 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-08-25 19:01:51 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-08-25 19:01:51 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2024-08-25 19:01:51 INFO  o.p.c.PositionControllerTest - Started PositionControllerTest in 7.373 seconds (process running for 9.353)
2024-08-25 19:01:51 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:01:52 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:01:53 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:01:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-25 19:01:53 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-25 19:02:29 INFO  o.p.c.TransactionControllerTest - Starting TransactionControllerTest using Java 21.0.4 with PID 29143 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 19:02:29 INFO  o.p.c.TransactionControllerTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 19:02:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 19:02:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 164 ms. Found 4 JPA repository interfaces.
2024-08-25 19:02:32 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 19:02:32 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 19:02:32 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 19:02:32 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:02:32 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 19:02:32 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 19:02:33 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@9e50283
2024-08-25 19:02:33 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-25 19:02:33 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:02:35 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-08-25 19:02:35 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:02:36 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-25 19:02:36 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-08-25 19:02:36 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-08-25 19:02:36 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2024-08-25 19:02:36 INFO  o.p.c.TransactionControllerTest - Started TransactionControllerTest in 7.961 seconds (process running for 10.148)
2024-08-25 19:02:37 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:02:37 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:02:37 INFO  o.p.c.TransactionControllerTest - transaction = Transaction{id=1, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=123, source=PLANNING, positionAggregated=PENDING, status=PM_DECISION, fromDt=2024-08-25T19:02:37.602986, toDt=null}
2024-08-25 19:02:37 INFO  o.p.c.TransactionControllerTest - transaction = Transaction{id=2, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=456, source=PLANNING, positionAggregated=PENDING, status=PM_DECISION, fromDt=2024-08-25T19:02:37.602986, toDt=null}
2024-08-25 19:02:38 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:02:38 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-25 19:02:38 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-25 19:02:48 INFO  IntegrationTest - Starting IntegrationTest using Java 21.0.4 with PID 29169 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 19:02:48 INFO  IntegrationTest - No active profile set, falling back to 1 default profile: "default"
2024-08-25 19:02:49 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 19:02:49 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88 ms. Found 4 JPA repository interfaces.
2024-08-25 19:02:50 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-25 19:02:50 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 19:02:50 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 19:02:50 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:02:50 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 19:02:50 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 19:02:51 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5368e981
2024-08-25 19:02:51 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-25 19:02:51 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:02:52 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-08-25 19:02:52 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:02:53 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-25 19:02:53 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-08-25 19:02:53 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-08-25 19:02:53 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2024-08-25 19:02:53 INFO  IntegrationTest - Started IntegrationTest in 5.85 seconds (process running for 8.463)
2024-08-25 19:02:54 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:02:54 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:02:55 INFO  o.p.service.AggregationService - New transactions not yet processed = [Transaction{id=1, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=123, source=PLANNING, positionAggregated=PENDING, status=PM_DECISION, fromDt=2024-08-25T19:02:55.202252, toDt=null}, Transaction{id=2, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=234, source=PLANNING, positionAggregated=PENDING, status=PM_DECISION, fromDt=2024-08-25T19:02:55.202252, toDt=null}]
2024-08-25 19:02:56 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:02:56 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-25 19:02:56 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-25 19:04:34 INFO  o.p.PositionAggregationApplication - Starting PositionAggregationApplication using Java 21.0.4 with PID 29232 (/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 19:04:34 INFO  o.p.PositionAggregationApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-25 19:04:35 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 19:04:35 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 4 JPA repository interfaces.
2024-08-25 19:04:36 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-08-25 19:04:36 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-25 19:04:36 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-25 19:04:36 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-08-25 19:04:36 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-25 19:04:36 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1781 ms
2024-08-25 19:04:36 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.positionAggregation.entity.Account
		org.positionAggregation.entity.Position
		org.positionAggregation.entity.Product
		org.positionAggregation.entity.Transaction]
	Mapping files names []
	Properties []
2024-08-25 19:04:36 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-08-25 19:04:36 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-08-25 19:04:36 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 19:04:36 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-08-25 19:04:36 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-08-25 19:04:36 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-08-25 19:04:36 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-08-25 19:04:36 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@8f40022
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@8f40022
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5232e3f1
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5232e3f1
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2047981
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2047981
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2047981
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2ad99cf3
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2ad99cf3
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5d7911d5
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1b3ab4f9
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1b3ab4f9
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1b3ab4f9
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c6a5192
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c6a5192
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@552cede7
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@552cede7
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@552cede7
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b7f06c7
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@151732fb
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@151732fb
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@729c8063
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@40ed1802
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@40ed1802
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@40ed1802
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23c767e6
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@feb098f
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@19e21f89
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@31e739bf
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@31e739bf
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@29079032
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@29079032
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7e7743ec
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@776015fc
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7f42e06e
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6ad179b4
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2efd2f21
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59c500f7
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@316cda31
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@316cda31
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@50110971
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@50110971
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@17d2b075
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@17d2b075
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6661d8c0
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6661d8c0
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@310b2b6f
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@310b2b6f
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6909f6be
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b5ab2f2
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@315c081
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@315c081
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6b2dd3df
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4db77402
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@73c48264
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5ef85555
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5ef85555
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5bcec67e
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2dafae61
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7a2fce12
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7a2fce12
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@66e17eff
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@66e17eff
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1bbddada
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1bbddada
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1bbddada
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1f66d8e1
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@721d5b74
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@41bfa9e9
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@41bfa9e9
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@41bfa9e9
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68b7d0ef
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7069f076
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@764b14b8
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@764b14b8
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@764b14b8
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1f782c05
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1f782c05
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d6ac396
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d6ac396
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@432af457
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@432af457
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f5a7226
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f5a7226
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@519c6fcc
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@519c6fcc
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6ad1701a
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5921b93c
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5921b93c
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@168ad26f
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4f93bf0a
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@322204dc
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@656a3d6b
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@25b38203
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@778a1250
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@55acec99
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@61191222
2024-08-25 19:04:36 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@58833798
2024-08-25 19:04:36 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@28cd2c2] into BootstrapContext; was [null]
2024-08-25 19:04:36 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@28cd2c2) [was null]
2024-08-25 19:04:36 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7dee835] into BootstrapContext; was [null]
2024-08-25 19:04:36 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b57c345] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6e02721d]
2024-08-25 19:04:37 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:04:37 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 19:04:37 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@28cd2c2]
2024-08-25 19:04:37 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@28cd2c2]
2024-08-25 19:04:37 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 19:04:37 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37c2f0b4
2024-08-25 19:04:37 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-25 19:04:37 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
2024-08-25 19:04:37 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2024-08-25 19:04:37 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-08-25 19:04:37 DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.16
2024-08-25 19:04:37 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-08-25 19:04:37 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23396fc0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c11332b)
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7e5e6573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3005623b)
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58aa5c94) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d27b4c1)
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50df37eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b508371)
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41143873) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21f50d2c)
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8bc0696) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@473847fb)
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f28cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e1add6f)
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@467af68c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@43786627)
2024-08-25 19:04:37 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d6f77d7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65e620b0)
2024-08-25 19:04:37 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-25 19:04:37 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-25 19:04:37 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-25 19:04:37 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-25 19:04:37 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-25 19:04:37 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@63553e9f
2024-08-25 19:04:37 DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@168ad26f`
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:04:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:04:38 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@708dfe10] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18989e0]
2024-08-25 19:04:38 DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Account
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Account
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Account on table account
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Account] is safe
2024-08-25 19:04:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Account
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Account:accountId]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_id
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(account_id)]), accountId, assigned, , ...)
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountDesc with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Account:accountDesc]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountDesc
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_desc
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountDesc
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Position
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Position
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Position on table position
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Position] is safe
2024-08-25 19:04:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Position
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:id]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.id
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:accountId]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.account_id
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bd with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:bd]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bd
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.bd
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property bd
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:fromDt]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.from_dt
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:productId]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.product_id
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:quantity]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.quantity
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toDt with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:toDt]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toDt
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.to_dt
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property toDt
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Product
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Product
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Product on table product
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Product] is safe
2024-08-25 19:04:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Product
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Product:productId]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_id
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(product_id)]), productId, assigned, , ...)
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productDesc with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Product:productDesc]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productDesc
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_desc
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property productDesc
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Transaction
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Transaction on table transaction
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Transaction] is safe
2024-08-25 19:04:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Transaction
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:id]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.id
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2024-08-25 19:04:38 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:accountId]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.account_id
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property positionAggregated with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:positionAggregated]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for positionAggregated
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.aggregation_status
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property positionAggregated
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property direction with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:direction]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for direction
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.direction
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property direction
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:fromDt]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.from_dt
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:productId]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.product_id
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:quantity]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.quantity
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property source with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:source]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for source
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.source
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property source
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:status]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.status
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property status
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toDt with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:toDt]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toDt
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.to_dt
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property toDt
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property tradeDt with lazy=false
2024-08-25 19:04:38 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:tradeDt]
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for tradeDt
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.trade_dt
2024-08-25 19:04:38 DEBUG o.h.b.model.internal.PropertyBinder - Building property tradeDt
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountDesc
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bd
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toDt
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productDesc
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for positionAggregated
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for direction
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for source
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toDt
2024-08-25 19:04:38 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for tradeDt
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [account]
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [position]
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
2024-08-25 19:04:38 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [transaction]
2024-08-25 19:04:38 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:04:38 DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-08-25 19:04:38 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-08-25 19:04:38 DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@336d28a1, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main:/Users/aniamritapc/IdeaProjects/positonAggregation/build/resources/main:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/3.1.1/f2c2d9e35430e4b4a98ad91780bb9b2d1deec08/spring-boot-starter-web-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-data-jpa/3.1.1/f129ea070d7d7152c984189301dc751be45f9a38/spring-boot-starter-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.mysql/mysql-connector-j/8.0.33/9e64d997873abc4318620264703d3fdb6b02dd5a/mysql-connector-j-8.0.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/3.1.1/8dc99860536a6a858de6caaeb67f84d7af8a30a3/spring-boot-starter-json-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-aop/3.1.1/f72362878ded668b8c3a12f8465ced98ef3fb188/spring-boot-starter-aop-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-jdbc/3.1.1/8e6bdc511fc9ade17c09fcc20a0f6a44fa39a876/spring-boot-starter-jdbc-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/3.1.1/cf74eeaef5a265c75dd89fea829391bf08efdb6c/spring-boot-starter-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/3.1.1/927f80fb9d8816209420223d1a1a09e730ea78e6/spring-boot-starter-tomcat-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/6.0.10/af3f040747f4bfbcdb96140f8c9d252d3a6a4ef1/spring-webmvc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/6.0.10/e61defa7908bf7a499f000dab8ef7691c2aa75c1/spring-web-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.orm/hibernate-core/6.2.5.Final/3c0d24dd2f66920aeeee666779ca7391f20bc69c/hibernate-core-6.2.5.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/3.1.1/815665072b1cfa83aa3175228539e3e468db15e0/spring-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/6.0.10/4a6a423ce6fdc474a327f7b7a7818dedc33c504f/spring-aspects-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/3.1.1/618ec717eef4ba2ff347c7713150aac8e73fe233/spring-boot-autoconfigure-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.1.1/f8f80c1453c8fe0e08a6235f983d8daf571d3e3/spring-boot-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/3.1.1/53bb456e4bf8f751de5a6ce154707b052946fd43/spring-boot-starter-logging-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/2.1.1/48b9bda22b091b1f48b13af03fe36db3be6e1ae3/jakarta.annotation-api-2.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/6.0.10/e2bd59f05c95647a274b7719d419cf8fde6f25a0/spring-context-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/6.0.10/cc309a306fa759018b107dea9a208c758af0297/spring-aop-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/6.0.10/321d8f382fad673d8b4d4047b4370176561c5a60/spring-orm-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/6.0.10/5179c98c5eba511cdd31852d1f74063aa17bf3da/spring-jdbc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/3.1.1/cfc10ccc41910b7b6e83cf27debaac73229572e0/spring-data-commons-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/6.0.10/459698d22aadc881afe425934cca79cc1f6bce91/spring-tx-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/6.0.10/8fc0684773cc1598edd810660f57d9e9c8ae6055/spring-beans-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/6.0.10/bd8c93e473e713fe9150a772487507a8e600d5f1/spring-expression-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/6.0.10/889aa214b6607763ddeb6bd391d682cd71681b36/spring-core-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.33/2cd0a87ff7df953f810c344bdf2fe3340b954c69/snakeyaml-1.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.15.2/30d16ec2aef6d8094c5e2dce1d95034ca8b6cb42/jackson-datatype-jsr310-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.15.2/75f8d2788db20f6c587c7a19e94fb6248c314241/jackson-module-parameter-names-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.15.2/4724a65ac8e8d156a24898d50fd5dbd3642870b8/jackson-annotations-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.15.2/a6fe1836469a69b3ff66037c324d75fc66ef137c/jackson-core-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.15.2/66a50e089cfd2f93896b9b6f7a734cea7bcf2f31/jackson-datatype-jdk8-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.15.2/9353b021f10c307c00328f52090de2bdb4b6ff9c/jackson-databind-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/10.1.10/10604119402bcaa8490b638698ad177f8df4c50c/tomcat-embed-websocket-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/10.1.10/7423236b34aa78d6f36592b2aa294d7c8469f219/tomcat-embed-core-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/10.1.10/717033c0417fdc7e794b382c066b7e78f6029268/tomcat-embed-el-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-observation/1.11.1/9027a35892c7e08ea8affce87b3662b6ceca122c/micrometer-observation-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.19/afbffb1210239fbba5cad73093c5b216d515838f/aspectjweaver-1.9.19.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/5.0.1/a74c7f0a37046846e88d54f7cb6ea6d565c65f9c/HikariCP-5.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.1.0/66901fa1c373c6aff65c13791cc11da72060a8d6/jakarta.persistence-api-3.1.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/2.0.1/51a520e3fae406abb84e2e1148e6746ce3f80a1a/jakarta.transaction-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.5.1.Final/a5c340a92c6efeaa0d495047ee9aab38a86bb107/jboss-logging-3.5.1.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/6.0.6.Final/77a5f94b56d49508e0ee334751db5b78e5ccd50c/hibernate-commons-annotations-6.0.6.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.smallrye/jandex/3.0.5/c548a4871b552292dbdd65409d3fda145c8925c1/jandex-3.0.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.14.5/28a424c0c4f362568e904d992c239c996cf7adc7/byte-buddy-1.14.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/4.0.3/93af25be25b2c92c83e0ce61cb8b3ed23568f316/jaxb-runtime-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-core/4.0.3/e9093b4a82069a1d78ee9a3233ca387bca88861f/jaxb-core-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/4.0.0/bbb399208d288b15ec101fa4fcfc4bd77cedc97a/jakarta.xml.bind-api-4.0.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.inject/jakarta.inject-api/2.0.1/4c28afe1991a941d7702fe1362c365f0a8641d1e/jakarta.inject-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.10.1/10839f875928f59c622d675091d51a43ea0dc5f7/antlr4-runtime-4.10.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.4.8/f00ba91d993e4d14301b11968d3cacc3be7ef3e1/logback-classic-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.20.0/d37f81f8978e2672bc32c82712ab4b3f66624adc/log4j-to-slf4j-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/2.0.7/a48f44aeaa8a5ddc347007298a28173ac1fbbd8b/jul-to-slf4j-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.7/41eb7184ea9d556f23e18b5cb99cad1f8581fc00/slf4j-api-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/6.0.10/cba44e98dab40a506c50978a0e5f11ceaa90b3ff/spring-jcl-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-commons/1.11.1/45bc0f2aa4d6180f1a783f1930f307a4efbb12e8/micrometer-commons-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.eclipse.angus/angus-activation/2.0.1/eaafaf4eb71b400e4136fc3a286f50e34a68ecb7/angus-activation-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/2.1.2/640c0d5aff45dbff1e1a1bc09673ff3a02b1ba12/jakarta.activation-api-2.1.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.4.8/3fba9c105e0efc5ffdcda701379687917d5286f7/logback-core-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.20.0/1fe6082e660daf07c689a89c94dc0f49c26b44bb/log4j-api-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/4.0.3/47b8fe31c6d1a3382203af919400527389e01e9c/txw2-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/4.1.2/18ec117c85f3ba0ac65409136afa8e42bc74e739/istack-commons-runtime-4.1.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=21, os.name=Mac OS X, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=SG, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/lib, sun.java.command=org.positionAggregation.PositionAggregationApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@738a39cc, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/Users/aniamritapc, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-07-16, java.home=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, apple.awt.application.name=PositionAggregationApplication, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=21.0.4+8-LTS-274, user.name=aniamritapc, stdout.encoding=US-ASCII, path.separator=:, os.version=10.15.7, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/, catalina.home=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.5794782617551559848, java.version=21.0.4, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/Users/aniamritapc/IdeaProjects/positonAggregation, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=29232, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.5794782617551559848, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@42e202d7, native.encoding=US-ASCII, java.library.path=/Users/aniamritapc/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=US-ASCII, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.4+8-LTS-274, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=65.0}
2024-08-25 19:04:38 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3fe98084] under count; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@47c81e89] under every; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@49bb808f] under any; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6bc25ac2] under sinh; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b29cdea] under cosh; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f08d676] under tanh; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eedd0e3] under pi; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@478089b6] under log; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1dcca426] under position; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6f65aa58] under overlay; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2838eb] under trim; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2676d96a] under cast; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12266084] under collate; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1b4ba615] under extract; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7be3abaa] under ifnull; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5aac6f9f] under pad; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3a5ce4b8] under str; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@511d5e6e] under format; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@18e8eb59] under timestampadd; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@76b05c0] under timestampdiff; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2382b2f] under current_date; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13374ca6] under current_time; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@71734463] under current_timestamp; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f1d6a13] under local_date; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7cbf4f8c] under local_time; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55c46ec1] under local_datetime; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3eff6846] under offset_datetime; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ae6d078] under instant; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@326706d] under sql; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@478089b6
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@44a14de0] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@50fd739d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e1d1524] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1dcca426
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4a7db5a] under trunc; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56b66a26] under bitand; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@158e6fc2] under bitor; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54687fd0] under bitxor; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6eaf030c] under bitnot; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@b2da3a5] under format; prior registration was org.hibernate.dialect.function.FormatFunction@511d5e6e
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7cbf4f8c
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@55c46ec1
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6dbb3d7d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3eedd0e3
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a3a49e5] under chr; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c1b82cd] under sysdate; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@210d3a42] under rank; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@356f20b7] under dense_rank; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6f4adaab] under percent_rank; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@69de72ec] under cume_dist; prior registration was null
2024-08-25 19:04:38 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@4e1a3d5a] under listagg; prior registration was null
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double avg(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - basicType@6(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-08-25 19:04:38 DEBUG org.hibernate.orm.query.plan.cache - Starting QueryPlanCache(2048)
2024-08-25 19:04:39 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Position] is safe
2024-08-25 19:04:39 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Position
2024-08-25 19:04:39 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Position]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:39 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Product] is safe
2024-08-25 19:04:39 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Product
2024-08-25 19:04:39 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [productDesc]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:39 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Account] is safe
2024-08-25 19:04:39 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Account
2024-08-25 19:04:39 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Account]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountDesc]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:39 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Transaction] is safe
2024-08-25 19:04:39 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Transaction
2024-08-25 19:04:39 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Transaction]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:39 DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-08-25 19:04:39 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Position) `staticFetchableList` generator
2024-08-25 19:04:39 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Product) `staticFetchableList` generator
2024-08-25 19:04:39 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Account) `staticFetchableList` generator
2024-08-25 19:04:39 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Transaction) `staticFetchableList` generator
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Position
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from position where id=?
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into position (account_id,bd,from_dt,product_id,quantity,to_dt) values (?,?,?,?,?,?)
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update position set account_id=?,bd=?,from_dt=?,product_id=?,quantity=?,to_dt=? where id=?
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from position where id=?
2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Position)] with identifierForTableGroup [org.positionAggregation.entity.Position] for NavigablePath [org.positionAggregation.entity.Position] 
2024-08-25 19:04:39 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Position]
 |  +-BasicFetch [org.positionAggregation.entity.Position.accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Position.bd]
 |  +-BasicFetch [org.positionAggregation.entity.Position.fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Position.productId]
 |  +-BasicFetch [org.positionAggregation.entity.Position.quantity]
 |  \-BasicFetch [org.positionAggregation.entity.Position.toDt]

2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.positionAggregation.entity.Position) {
          primaryTableReference : position as p1_0
        }
      }
    }

2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Product
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select product_id from product where product_id=?
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into product (product_desc,product_id) values (?,?)
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update product set product_desc=? where product_id=?
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from product where product_id=?
2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Product)] with identifierForTableGroup [org.positionAggregation.entity.Product] for NavigablePath [org.positionAggregation.entity.Product] 
2024-08-25 19:04:39 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Product]
 |  \-BasicFetch [org.positionAggregation.entity.Product.productDesc]

2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.positionAggregation.entity.Product) {
          primaryTableReference : product as p1_0
        }
      }
    }

2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Account
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select account_id from account where account_id=?
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into account (account_desc,account_id) values (?,?)
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update account set account_desc=? where account_id=?
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from account where account_id=?
2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Account)] with identifierForTableGroup [org.positionAggregation.entity.Account] for NavigablePath [org.positionAggregation.entity.Account] 
2024-08-25 19:04:39 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Account]
 |  \-BasicFetch [org.positionAggregation.entity.Account.accountDesc]

2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.positionAggregation.entity.Account) {
          primaryTableReference : account as a1_0
        }
      }
    }

2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Transaction
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from transaction where id=?
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into transaction (account_id,aggregation_status,direction,from_dt,product_id,quantity,source,status,to_dt,trade_dt) values (?,?,?,?,?,?,?,?,?,?)
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update transaction set account_id=?,aggregation_status=?,direction=?,from_dt=?,product_id=?,quantity=?,source=?,status=?,to_dt=?,trade_dt=? where id=?
2024-08-25 19:04:39 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from transaction where id=?
2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction)] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:39 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.positionAggregatedd]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction.tradeDt]

2024-08-25 19:04:39 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:39 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-08-25 19:04:39 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-08-25 19:04:39 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-08-25 19:04:39 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@708dfe10] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@52325940]
2024-08-25 19:04:39 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-08-25 19:04:39 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-08-25 19:04:39 DEBUG org.hibernate.SQL - drop table if exists account
2024-08-25 19:04:40 DEBUG org.hibernate.SQL - drop table if exists position
2024-08-25 19:04:40 DEBUG org.hibernate.SQL - drop table if exists product
2024-08-25 19:04:40 DEBUG org.hibernate.SQL - drop table if exists transaction
2024-08-25 19:04:40 DEBUG org.hibernate.SQL - create table account (account_id integer not null, account_desc varchar(255), primary key (account_id)) engine=InnoDB
2024-08-25 19:04:40 DEBUG org.hibernate.SQL - create table position (account_id integer, product_id integer, quantity integer, bd datetime(6), from_dt datetime(6), id bigint not null auto_increment, to_dt datetime(6), primary key (id)) engine=InnoDB
2024-08-25 19:04:40 DEBUG org.hibernate.SQL - create table product (product_id integer not null, product_desc varchar(255), primary key (product_id)) engine=InnoDB
2024-08-25 19:04:40 DEBUG org.hibernate.SQL - create table transaction (account_id integer, aggregation_status tinyint check (aggregation_status between 0 and 1), product_id integer, quantity integer, source tinyint check (source between 0 and 1), status tinyint check (status between 0 and 2), from_dt datetime(6), id bigint not null auto_increment, to_dt datetime(6), trade_dt datetime(6), direction varchar(255), primary key (id)) engine=InnoDB
2024-08-25 19:04:40 DEBUG o.h.t.s.i.e.GenerationTargetToDatabase - HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
2024-08-25 19:04:40 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6167c42f
2024-08-25 19:04:40 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: eb3f91d1-6f77-40e1-bc9c-47fc33dd463d (<unnamed>)
2024-08-25 19:04:40 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-08-25 19:04:40 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@52325940] for TypeConfiguration
2024-08-25 19:04:40 DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2024-08-25 19:04:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:04:40 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-08-25 19:04:40 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:40 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:40 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:40 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:40 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:40 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:04:40 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-25 19:04:41 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-25 19:04:41 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-08-25 19:04:41 INFO  o.p.PositionAggregationApplication - Started PositionAggregationApplication in 7.639 seconds (process running for 8.645)
2024-08-25 19:04:41 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:41 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:41 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ff5ce86
2024-08-25 19:04:41 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:41 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:41 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:41 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:41 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:41 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@156967573 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:41 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:41 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:42 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:42 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:42 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3e3538f0
2024-08-25 19:04:42 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:42 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:42 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:42 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:42 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:42 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@67455801 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:42 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:42 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:43 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:43 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:43 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c1e1f3c
2024-08-25 19:04:43 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:43 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:43 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:43 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:43 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:43 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@427180346 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:43 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:43 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:44 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:44 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:44 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@135f9638
2024-08-25 19:04:44 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:44 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:44 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:44 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:44 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:44 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@588634992 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:44 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:44 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:45 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:45 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:45 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1ca8ecf7
2024-08-25 19:04:45 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:45 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:45 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:45 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:45 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:45 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@129054691 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:45 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:45 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:46 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:46 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:46 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@746fb63a
2024-08-25 19:04:46 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:46 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:46 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:46 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:46 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:46 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@67334905 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:46 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:46 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:47 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:47 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:47 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@403f7400
2024-08-25 19:04:47 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:47 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:47 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:47 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:47 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:47 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@2083156537 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:47 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:47 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:48 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:48 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:48 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6e7476d0
2024-08-25 19:04:48 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:48 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:48 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:48 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:48 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:48 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@844494861 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:48 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:48 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:49 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:49 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:49 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3cb92eae
2024-08-25 19:04:49 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:49 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:49 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:49 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:49 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:49 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@1624715084 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:49 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:49 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:50 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:50 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:50 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a7104d5
2024-08-25 19:04:50 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:50 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:50 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:50 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:50 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:50 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@609470711 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:50 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:50 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:51 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:51 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:51 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2c9bc5fc
2024-08-25 19:04:51 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:51 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:51 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:51 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:51 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:51 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@1115383900 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:51 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:51 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:52 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:52 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:52 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4a4db958
2024-08-25 19:04:52 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:52 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:52 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:52 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:52 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:52 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@1196123947 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:52 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:52 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:53 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:53 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:53 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@276b5c1a
2024-08-25 19:04:53 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:53 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:53 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:53 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:53 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:53 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@1992233338 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:53 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:53 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:54 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:54 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:54 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17601990
2024-08-25 19:04:54 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:54 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:54 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:54 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:54 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:54 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@604619443 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:54 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:54 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:55 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:55 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:55 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@71557734
2024-08-25 19:04:55 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:55 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:55 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:55 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:55 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:55 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@1415081482 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:55 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:55 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:56 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:56 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:56 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bdf52b5
2024-08-25 19:04:56 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:56 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:56 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:56 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:56 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:56 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@1191461340 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:56 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:56 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:57 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@449d1230
2024-08-25 19:04:57 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:57 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:57 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:57 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:57 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:57 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@201546278 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:57 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:57 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:58 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@385229f7
2024-08-25 19:04:58 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:58 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:58 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:58 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:58 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:58 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@896525699 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:58 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:58 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:04:59 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:04:59 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:04:59 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1eb317ba
2024-08-25 19:04:59 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:04:59 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:04:59 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:04:59 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:04:59 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:04:59 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@1770533719 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:04:59 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:04:59 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:05:00 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:05:00 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:05:00 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3bd26a41
2024-08-25 19:05:00 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:05:00 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:05:00 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:05:00 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:05:00 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:05:00 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@2111508091 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:05:00 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:05:00 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:05:01 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:05:01 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:05:01 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@77aff636
2024-08-25 19:05:01 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:05:01 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:05:01 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:05:01 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:05:01 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:05:01 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@960755238 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:05:01 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:05:01 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:05:02 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:05:02 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:05:02 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@fb268b
2024-08-25 19:05:02 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:05:02 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:05:02 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:05:02 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:05:02 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:05:02 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@484410493 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:05:02 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:05:02 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:05:03 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:05:03 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(155649032026383))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:05:03 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3b63f991
2024-08-25 19:05:03 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(155649032026383).positionAggregated)
2024-08-25 19:05:03 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(155649032026383)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(155649032026383).tradeDt]

2024-08-25 19:05:03 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(155649032026383)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:05:03 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:05:03 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:05:03 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(155649032026383) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(155649032026383))@168246029 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:05:03 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:05:03 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:05:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:05:03 DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-08-25 19:05:03 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@52325940] for TypeConfiguration
2024-08-25 19:05:03 DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@290f730c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@52325940]
2024-08-25 19:05:03 DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-08-25 19:05:03 DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-08-25 19:05:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-25 19:05:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-25 19:20:35 INFO  o.p.PositionAggregationApplication - Starting PositionAggregationApplication using Java 21.0.4 with PID 30016 (/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 19:20:35 INFO  o.p.PositionAggregationApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-25 19:20:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 19:20:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 4 JPA repository interfaces.
2024-08-25 19:20:37 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-08-25 19:20:37 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-25 19:20:37 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-25 19:20:37 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-08-25 19:20:37 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-25 19:20:37 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2029 ms
2024-08-25 19:20:37 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.positionAggregation.entity.Account
		org.positionAggregation.entity.Position
		org.positionAggregation.entity.Product
		org.positionAggregation.entity.Transaction]
	Mapping files names []
	Properties []
2024-08-25 19:20:37 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-08-25 19:20:37 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-08-25 19:20:38 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 19:20:38 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-08-25 19:20:38 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-08-25 19:20:38 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-08-25 19:20:38 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-08-25 19:20:38 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@c8f97a7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@c8f97a7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@c8f97a7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2b736fee
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2b736fee
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3249e278
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3249e278
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@35adf623
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@35adf623
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@8f40022
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@8f40022
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5232e3f1
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2047981
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2ad99cf3
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5d7911d5
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5d7911d5
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5d7911d5
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b3ab4f9
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5c6a5192
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5c6a5192
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@552cede7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@552cede7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@552cede7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1b7f06c7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@151732fb
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@729c8063
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@40ed1802
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@40ed1802
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@23c767e6
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@23c767e6
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@feb098f
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@19e21f89
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@31e739bf
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29079032
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7e7743ec
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@776015fc
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f42e06e
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f42e06e
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6ad179b4
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6ad179b4
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2efd2f21
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2efd2f21
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@59c500f7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@59c500f7
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@316cda31
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@316cda31
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@50110971
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17d2b075
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6661d8c0
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6661d8c0
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@310b2b6f
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6909f6be
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b5ab2f2
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@315c081
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@315c081
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b2dd3df
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4db77402
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@73c48264
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@73c48264
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5ef85555
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5ef85555
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5bcec67e
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5bcec67e
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5bcec67e
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2dafae61
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2dafae61
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2dafae61
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7a2fce12
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66e17eff
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1bbddada
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1bbddada
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1bbddada
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1f66d8e1
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@721d5b74
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@41bfa9e9
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@41bfa9e9
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@41bfa9e9
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7069f076
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7069f076
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@764b14b8
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@764b14b8
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@202d9236
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@202d9236
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1f782c05
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1f782c05
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d6ac396
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@182e7eda
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@182e7eda
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@45292ec1
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3a7c678b
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@28babeca
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1ad9b8d3
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@168ad26f
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4f93bf0a
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@322204dc
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@656a3d6b
2024-08-25 19:20:38 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25b38203
2024-08-25 19:20:38 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@67fb5025] into BootstrapContext; was [null]
2024-08-25 19:20:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@67fb5025) [was null]
2024-08-25 19:20:38 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@8e25d3f] into BootstrapContext; was [null]
2024-08-25 19:20:38 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@18a096b5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@79b18230]
2024-08-25 19:20:38 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:20:38 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 19:20:38 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@67fb5025]
2024-08-25 19:20:38 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@67fb5025]
2024-08-25 19:20:38 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 19:20:40 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@47f2c722
2024-08-25 19:20:40 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-25 19:20:40 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
2024-08-25 19:20:40 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2024-08-25 19:20:40 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-08-25 19:20:40 DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.16
2024-08-25 19:20:40 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-08-25 19:20:40 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39a7eca5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45bd4753)
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@156cfa20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25fd6d1e)
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23396fc0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c11332b)
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e5e6573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3005623b)
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58aa5c94) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d27b4c1)
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50df37eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b508371)
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41143873) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21f50d2c)
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8bc0696) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@473847fb)
2024-08-25 19:20:40 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f28cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e1add6f)
2024-08-25 19:20:40 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-25 19:20:40 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-25 19:20:40 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-25 19:20:40 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-25 19:20:40 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@165d1d54
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@45292ec1`
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:20:41 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:20:41 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bfa17b0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@625264ed]
2024-08-25 19:20:41 DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Account
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Account
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Account on table account
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Account] is safe
2024-08-25 19:20:41 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Account
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Account:accountId]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_id
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(account_id)]), accountId, assigned, , ...)
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountDesc with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Account:accountDesc]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountDesc
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_desc
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountDesc
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Position
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Position
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Position on table position
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Position] is safe
2024-08-25 19:20:41 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Position
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:id]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.id
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:accountId]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.account_id
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bd with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:bd]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bd
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.bd
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property bd
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:fromDt]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.from_dt
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:productId]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.product_id
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:quantity]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.quantity
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toDt with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:toDt]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toDt
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.to_dt
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property toDt
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Product
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Product
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Product on table product
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Product] is safe
2024-08-25 19:20:41 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Product
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Product:productId]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_id
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(product_id)]), productId, assigned, , ...)
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productDesc with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Product:productDesc]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productDesc
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_desc
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property productDesc
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Transaction
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Transaction on table transaction
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Transaction] is safe
2024-08-25 19:20:41 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Transaction
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:id]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.id
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2024-08-25 19:20:41 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:accountId]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.account_id
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property direction with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:direction]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for direction
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.direction
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property direction
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:fromDt]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.from_dt
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property positionAggregated with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:positionAggregated]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for positionAggregated
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.position_aggregated
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property positionAggregated
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:productId]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.product_id
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:quantity]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.quantity
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property source with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:source]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for source
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.source
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property source
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:status]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.status
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property status
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toDt with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:toDt]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toDt
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.to_dt
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property toDt
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property tradeDt with lazy=false
2024-08-25 19:20:41 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:tradeDt]
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for tradeDt
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.trade_dt
2024-08-25 19:20:41 DEBUG o.h.b.model.internal.PropertyBinder - Building property tradeDt
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountDesc
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bd
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toDt
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productDesc
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for direction
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for positionAggregated
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for source
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toDt
2024-08-25 19:20:41 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for tradeDt
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [account]
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [position]
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
2024-08-25 19:20:41 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [transaction]
2024-08-25 19:20:41 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:20:41 DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-08-25 19:20:41 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-08-25 19:20:41 DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4491eaeb, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main:/Users/aniamritapc/IdeaProjects/positonAggregation/build/resources/main:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/3.1.1/f2c2d9e35430e4b4a98ad91780bb9b2d1deec08/spring-boot-starter-web-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-data-jpa/3.1.1/f129ea070d7d7152c984189301dc751be45f9a38/spring-boot-starter-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.mysql/mysql-connector-j/8.0.33/9e64d997873abc4318620264703d3fdb6b02dd5a/mysql-connector-j-8.0.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/3.1.1/8dc99860536a6a858de6caaeb67f84d7af8a30a3/spring-boot-starter-json-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-aop/3.1.1/f72362878ded668b8c3a12f8465ced98ef3fb188/spring-boot-starter-aop-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-jdbc/3.1.1/8e6bdc511fc9ade17c09fcc20a0f6a44fa39a876/spring-boot-starter-jdbc-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/3.1.1/cf74eeaef5a265c75dd89fea829391bf08efdb6c/spring-boot-starter-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/3.1.1/927f80fb9d8816209420223d1a1a09e730ea78e6/spring-boot-starter-tomcat-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/6.0.10/af3f040747f4bfbcdb96140f8c9d252d3a6a4ef1/spring-webmvc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/6.0.10/e61defa7908bf7a499f000dab8ef7691c2aa75c1/spring-web-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.orm/hibernate-core/6.2.5.Final/3c0d24dd2f66920aeeee666779ca7391f20bc69c/hibernate-core-6.2.5.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/3.1.1/815665072b1cfa83aa3175228539e3e468db15e0/spring-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/6.0.10/4a6a423ce6fdc474a327f7b7a7818dedc33c504f/spring-aspects-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/3.1.1/618ec717eef4ba2ff347c7713150aac8e73fe233/spring-boot-autoconfigure-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.1.1/f8f80c1453c8fe0e08a6235f983d8daf571d3e3/spring-boot-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/3.1.1/53bb456e4bf8f751de5a6ce154707b052946fd43/spring-boot-starter-logging-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/2.1.1/48b9bda22b091b1f48b13af03fe36db3be6e1ae3/jakarta.annotation-api-2.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/6.0.10/e2bd59f05c95647a274b7719d419cf8fde6f25a0/spring-context-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/6.0.10/cc309a306fa759018b107dea9a208c758af0297/spring-aop-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/6.0.10/321d8f382fad673d8b4d4047b4370176561c5a60/spring-orm-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/6.0.10/5179c98c5eba511cdd31852d1f74063aa17bf3da/spring-jdbc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/3.1.1/cfc10ccc41910b7b6e83cf27debaac73229572e0/spring-data-commons-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/6.0.10/459698d22aadc881afe425934cca79cc1f6bce91/spring-tx-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/6.0.10/8fc0684773cc1598edd810660f57d9e9c8ae6055/spring-beans-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/6.0.10/bd8c93e473e713fe9150a772487507a8e600d5f1/spring-expression-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/6.0.10/889aa214b6607763ddeb6bd391d682cd71681b36/spring-core-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.33/2cd0a87ff7df953f810c344bdf2fe3340b954c69/snakeyaml-1.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.15.2/30d16ec2aef6d8094c5e2dce1d95034ca8b6cb42/jackson-datatype-jsr310-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.15.2/75f8d2788db20f6c587c7a19e94fb6248c314241/jackson-module-parameter-names-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.15.2/4724a65ac8e8d156a24898d50fd5dbd3642870b8/jackson-annotations-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.15.2/a6fe1836469a69b3ff66037c324d75fc66ef137c/jackson-core-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.15.2/66a50e089cfd2f93896b9b6f7a734cea7bcf2f31/jackson-datatype-jdk8-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.15.2/9353b021f10c307c00328f52090de2bdb4b6ff9c/jackson-databind-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/10.1.10/10604119402bcaa8490b638698ad177f8df4c50c/tomcat-embed-websocket-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/10.1.10/7423236b34aa78d6f36592b2aa294d7c8469f219/tomcat-embed-core-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/10.1.10/717033c0417fdc7e794b382c066b7e78f6029268/tomcat-embed-el-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-observation/1.11.1/9027a35892c7e08ea8affce87b3662b6ceca122c/micrometer-observation-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.19/afbffb1210239fbba5cad73093c5b216d515838f/aspectjweaver-1.9.19.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/5.0.1/a74c7f0a37046846e88d54f7cb6ea6d565c65f9c/HikariCP-5.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.1.0/66901fa1c373c6aff65c13791cc11da72060a8d6/jakarta.persistence-api-3.1.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/2.0.1/51a520e3fae406abb84e2e1148e6746ce3f80a1a/jakarta.transaction-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.5.1.Final/a5c340a92c6efeaa0d495047ee9aab38a86bb107/jboss-logging-3.5.1.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/6.0.6.Final/77a5f94b56d49508e0ee334751db5b78e5ccd50c/hibernate-commons-annotations-6.0.6.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.smallrye/jandex/3.0.5/c548a4871b552292dbdd65409d3fda145c8925c1/jandex-3.0.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.14.5/28a424c0c4f362568e904d992c239c996cf7adc7/byte-buddy-1.14.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/4.0.3/93af25be25b2c92c83e0ce61cb8b3ed23568f316/jaxb-runtime-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-core/4.0.3/e9093b4a82069a1d78ee9a3233ca387bca88861f/jaxb-core-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/4.0.0/bbb399208d288b15ec101fa4fcfc4bd77cedc97a/jakarta.xml.bind-api-4.0.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.inject/jakarta.inject-api/2.0.1/4c28afe1991a941d7702fe1362c365f0a8641d1e/jakarta.inject-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.10.1/10839f875928f59c622d675091d51a43ea0dc5f7/antlr4-runtime-4.10.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.4.8/f00ba91d993e4d14301b11968d3cacc3be7ef3e1/logback-classic-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.20.0/d37f81f8978e2672bc32c82712ab4b3f66624adc/log4j-to-slf4j-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/2.0.7/a48f44aeaa8a5ddc347007298a28173ac1fbbd8b/jul-to-slf4j-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.7/41eb7184ea9d556f23e18b5cb99cad1f8581fc00/slf4j-api-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/6.0.10/cba44e98dab40a506c50978a0e5f11ceaa90b3ff/spring-jcl-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-commons/1.11.1/45bc0f2aa4d6180f1a783f1930f307a4efbb12e8/micrometer-commons-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.eclipse.angus/angus-activation/2.0.1/eaafaf4eb71b400e4136fc3a286f50e34a68ecb7/angus-activation-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/2.1.2/640c0d5aff45dbff1e1a1bc09673ff3a02b1ba12/jakarta.activation-api-2.1.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.4.8/3fba9c105e0efc5ffdcda701379687917d5286f7/logback-core-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.20.0/1fe6082e660daf07c689a89c94dc0f49c26b44bb/log4j-api-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/4.0.3/47b8fe31c6d1a3382203af919400527389e01e9c/txw2-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/4.1.2/18ec117c85f3ba0ac65409136afa8e42bc74e739/istack-commons-runtime-4.1.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=21, os.name=Mac OS X, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=SG, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/lib, sun.java.command=org.positionAggregation.PositionAggregationApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@71262020, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/Users/aniamritapc, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-07-16, java.home=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, apple.awt.application.name=PositionAggregationApplication, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=21.0.4+8-LTS-274, user.name=aniamritapc, stdout.encoding=US-ASCII, path.separator=:, os.version=10.15.7, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/, catalina.home=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.2061753523993328967, java.version=21.0.4, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/Users/aniamritapc/IdeaProjects/positonAggregation, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=30016, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.2061753523993328967, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5f3ddc86, native.encoding=US-ASCII, java.library.path=/Users/aniamritapc/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=US-ASCII, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.4+8-LTS-274, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=65.0}
2024-08-25 19:20:41 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2e0fdc83] under count; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1c3d9e28] under every; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@a1cb94] under any; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@775c4054] under sinh; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b2e931] under cosh; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305881b8] under tanh; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e89eba7] under pi; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6bc25ac2] under log; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@77020328] under position; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1d556461] under overlay; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6f65aa58] under trim; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2d459bda] under cast; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ceb11f9] under collate; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@12266084] under extract; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1b4ba615] under ifnull; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7be3abaa] under pad; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5aac6f9f] under str; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1607d391] under format; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@511d5e6e] under timestampadd; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@54997f67] under timestampdiff; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76b05c0] under current_date; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b974137] under current_time; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7402c49f] under current_timestamp; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d22604e] under local_date; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2382b2f] under local_time; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13374ca6] under local_datetime; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@71734463] under offset_datetime; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f1d6a13] under instant; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6ae6d078] under sql; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6bc25ac2
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@326706d] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@76fc5687] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53fbb2b4] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@77020328
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1bb4c431] under trunc; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fd3b20a] under bitand; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@295d54d6] under bitor; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@398f0516] under bitxor; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a7db5a] under bitnot; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@56b66a26] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1607d391
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2382b2f
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@13374ca6
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@158e6fc2] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e89eba7
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54687fd0] under chr; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6eaf030c] under sysdate; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@69d7bc1a] under rank; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@cb318ac] under dense_rank; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6e668322] under percent_rank; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@75ee6f89] under cume_dist; prior registration was null
2024-08-25 19:20:41 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@69de72ec] under listagg; prior registration was null
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double avg(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - basicType@6(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-08-25 19:20:41 DEBUG org.hibernate.orm.query.plan.cache - Starting QueryPlanCache(2048)
2024-08-25 19:20:42 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Position] is safe
2024-08-25 19:20:42 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Position
2024-08-25 19:20:42 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Position]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:20:42 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Product] is safe
2024-08-25 19:20:42 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Product
2024-08-25 19:20:42 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [productDesc]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:20:42 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Account] is safe
2024-08-25 19:20:42 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Account
2024-08-25 19:20:42 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Account]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountDesc]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:20:42 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Transaction] is safe
2024-08-25 19:20:42 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Transaction
2024-08-25 19:20:42 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Transaction]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:20:42 DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-08-25 19:20:42 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Position) `staticFetchableList` generator
2024-08-25 19:20:42 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Product) `staticFetchableList` generator
2024-08-25 19:20:42 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Account) `staticFetchableList` generator
2024-08-25 19:20:42 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Transaction) `staticFetchableList` generator
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Position
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from position where id=?
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into position (account_id,bd,from_dt,product_id,quantity,to_dt) values (?,?,?,?,?,?)
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update position set account_id=?,bd=?,from_dt=?,product_id=?,quantity=?,to_dt=? where id=?
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from position where id=?
2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Position)] with identifierForTableGroup [org.positionAggregation.entity.Position] for NavigablePath [org.positionAggregation.entity.Position] 
2024-08-25 19:20:42 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Position]
 |  +-BasicFetch [org.positionAggregation.entity.Position.accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Position.bd]
 |  +-BasicFetch [org.positionAggregation.entity.Position.fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Position.productId]
 |  +-BasicFetch [org.positionAggregation.entity.Position.quantity]
 |  \-BasicFetch [org.positionAggregation.entity.Position.toDt]

2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.positionAggregation.entity.Position) {
          primaryTableReference : position as p1_0
        }
      }
    }

2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Product
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select product_id from product where product_id=?
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into product (product_desc,product_id) values (?,?)
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update product set product_desc=? where product_id=?
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from product where product_id=?
2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Product)] with identifierForTableGroup [org.positionAggregation.entity.Product] for NavigablePath [org.positionAggregation.entity.Product] 
2024-08-25 19:20:42 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Product]
 |  \-BasicFetch [org.positionAggregation.entity.Product.productDesc]

2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.positionAggregation.entity.Product) {
          primaryTableReference : product as p1_0
        }
      }
    }

2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Account
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select account_id from account where account_id=?
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into account (account_desc,account_id) values (?,?)
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update account set account_desc=? where account_id=?
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from account where account_id=?
2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Account)] with identifierForTableGroup [org.positionAggregation.entity.Account] for NavigablePath [org.positionAggregation.entity.Account] 
2024-08-25 19:20:42 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Account]
 |  \-BasicFetch [org.positionAggregation.entity.Account.accountDesc]

2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.positionAggregation.entity.Account) {
          primaryTableReference : account as a1_0
        }
      }
    }

2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Transaction
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from transaction where id=?
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into transaction (account_id,direction,from_dt,position_aggregated,product_id,quantity,source,status,to_dt,trade_dt) values (?,?,?,?,?,?,?,?,?,?)
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update transaction set account_id=?,direction=?,from_dt=?,position_aggregated=?,product_id=?,quantity=?,source=?,status=?,to_dt=?,trade_dt=? where id=?
2024-08-25 19:20:42 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from transaction where id=?
2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction)] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:20:42 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.positionAggregated]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction.tradeDt]

2024-08-25 19:20:42 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:20:42 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-08-25 19:20:42 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-08-25 19:20:42 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-08-25 19:20:42 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2bfa17b0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@71e2843b]
2024-08-25 19:20:42 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-08-25 19:20:42 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-08-25 19:20:42 DEBUG org.hibernate.SQL - drop table if exists account
2024-08-25 19:20:42 DEBUG org.hibernate.SQL - drop table if exists position
2024-08-25 19:20:42 DEBUG org.hibernate.SQL - drop table if exists product
2024-08-25 19:20:42 DEBUG org.hibernate.SQL - drop table if exists transaction
2024-08-25 19:20:43 DEBUG org.hibernate.SQL - create table account (account_id integer not null, account_desc varchar(255), primary key (account_id)) engine=InnoDB
2024-08-25 19:20:43 DEBUG org.hibernate.SQL - create table position (account_id integer, product_id integer, quantity integer, bd datetime(6), from_dt datetime(6), id bigint not null auto_increment, to_dt datetime(6), primary key (id)) engine=InnoDB
2024-08-25 19:20:43 DEBUG org.hibernate.SQL - create table product (product_id integer not null, product_desc varchar(255), primary key (product_id)) engine=InnoDB
2024-08-25 19:20:43 DEBUG org.hibernate.SQL - create table transaction (account_id integer, position_aggregated tinyint check (position_aggregated between 0 and 1), product_id integer, quantity integer, source tinyint check (source between 0 and 1), status tinyint check (status between 0 and 2), from_dt datetime(6), id bigint not null auto_increment, to_dt datetime(6), trade_dt datetime(6), direction varchar(255), primary key (id)) engine=InnoDB
2024-08-25 19:20:43 DEBUG o.h.t.s.i.e.GenerationTargetToDatabase - HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
2024-08-25 19:20:43 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@22846a1d
2024-08-25 19:20:43 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 8b41c50c-3439-40eb-bcbf-b87bbb4bc665 (<unnamed>)
2024-08-25 19:20:43 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-08-25 19:20:43 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@71e2843b] for TypeConfiguration
2024-08-25 19:20:43 DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2024-08-25 19:20:43 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:20:43 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-08-25 19:20:43 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:20:43 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:20:43 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:20:43 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:20:43 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionController': Unsatisfied dependency expressed through field 'transactionsRepository': Error creating bean with name 'transactionsRepository' defined in org.positionAggregation.repository.TransactionsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Reason: Failed to create query for method public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Unable to locate Attribute with the given name [aggregationStatus] on this ManagedType [org.positionAggregation.entity.Transaction]
2024-08-25 19:20:43 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:20:43 DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-08-25 19:20:43 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@71e2843b] for TypeConfiguration
2024-08-25 19:20:43 DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@78a34c47] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@71e2843b]
2024-08-25 19:20:43 DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-08-25 19:20:43 DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-08-25 19:20:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-25 19:20:43 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-25 19:20:43 INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-25 19:20:43 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-25 19:20:43 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'transactionController': Unsatisfied dependency expressed through field 'transactionsRepository': Error creating bean with name 'transactionsRepository' defined in org.positionAggregation.repository.TransactionsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Reason: Failed to create query for method public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Unable to locate Attribute with the given name [aggregationStatus] on this ManagedType [org.positionAggregation.entity.Transaction]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:714)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionsRepository' defined in org.positionAggregation.repository.TransactionsRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Reason: Failed to create query for method public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Unable to locate Attribute with the given name [aggregationStatus] on this ManagedType [org.positionAggregation.entity.Transaction]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	... 20 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Reason: Failed to create query for method public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Unable to locate Attribute with the given name [aggregationStatus] on this ManagedType [org.positionAggregation.entity.Transaction]
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional org.positionAggregation.repository.TransactionsRepository.findByAggregationStatus(org.positionAggregation.entity.PositionAggregated); Unable to locate Attribute with the given name [aggregationStatus] on this ManagedType [org.positionAggregation.entity.Transaction]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 42 common frames omitted
Caused by: java.lang.IllegalArgumentException: Unable to locate Attribute with the given name [aggregationStatus] on this ManagedType [org.positionAggregation.entity.Transaction]
	at org.hibernate.metamodel.model.domain.AbstractManagedType.checkNotNull(AbstractManagedType.java:287)
	at org.hibernate.metamodel.model.domain.AbstractManagedType.getAttribute(AbstractManagedType.java:160)
	at org.hibernate.metamodel.model.domain.AbstractManagedType.getAttribute(AbstractManagedType.java:51)
	at org.springframework.data.jpa.repository.query.QueryUtils.requiresOuterJoin(QueryUtils.java:835)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:776)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:755)
	at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:751)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:387)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:310)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:210)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:121)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:60)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:218)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:361)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:102)
	... 46 common frames omitted
2024-08-25 19:21:42 INFO  o.p.PositionAggregationApplication - Starting PositionAggregationApplication using Java 21.0.4 with PID 30065 (/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-08-25 19:21:42 INFO  o.p.PositionAggregationApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-25 19:21:43 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-25 19:21:44 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 4 JPA repository interfaces.
2024-08-25 19:21:44 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-08-25 19:21:44 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-25 19:21:44 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-25 19:21:44 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-08-25 19:21:44 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-25 19:21:44 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1997 ms
2024-08-25 19:21:45 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.positionAggregation.entity.Account
		org.positionAggregation.entity.Position
		org.positionAggregation.entity.Product
		org.positionAggregation.entity.Transaction]
	Mapping files names []
	Properties []
2024-08-25 19:21:45 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-08-25 19:21:45 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-08-25 19:21:45 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-08-25 19:21:45 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-08-25 19:21:45 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-08-25 19:21:45 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-08-25 19:21:45 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-08-25 19:21:45 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44286963
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44286963
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44286963
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@c8f97a7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@c8f97a7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b736fee
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b736fee
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3249e278
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3249e278
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@35adf623
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@35adf623
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@35adf623
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@456f7d9e
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@75d366c2
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@8f40022
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5232e3f1
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5232e3f1
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6c8fe7a4
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2047981
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2ad99cf3
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2ad99cf3
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2ad99cf3
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6f31df32
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7c90b7b7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5d7911d5
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5d7911d5
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5d7911d5
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3ba1308d
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a08b084
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@235c997d
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@36bed37a
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a9a878
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1b3ab4f9
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b3ab4f9
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5c6a5192
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1c8f6c66
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@552cede7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1b7f06c7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@151732fb
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@729c8063
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@729c8063
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@40ed1802
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@40ed1802
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@23c767e6
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@feb098f
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@19e21f89
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@31e739bf
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@29079032
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7e7743ec
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@776015fc
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@776015fc
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7f42e06e
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7f42e06e
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6ad179b4
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6ad179b4
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2efd2f21
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2efd2f21
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@59c500f7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@59c500f7
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@316cda31
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@50110971
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@17d2b075
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@17d2b075
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6661d8c0
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@310b2b6f
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6909f6be
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b5ab2f2
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6b5ab2f2
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@315c081
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b2dd3df
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4db77402
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4db77402
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@73c48264
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@73c48264
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5ef85555
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5ef85555
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5ef85555
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5bcec67e
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5bcec67e
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5bcec67e
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2dafae61
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7a2fce12
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@66e17eff
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@66e17eff
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4bb1b96b
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1bbddada
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1f66d8e1
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@721d5b74
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@721d5b74
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3421debd
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@68b7d0ef
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@68b7d0ef
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7069f076
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7069f076
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4a070cf0
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@764b14b8
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@764b14b8
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@202d9236
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@202d9236
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1f782c05
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@79a13920
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79a13920
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@b4732dc
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@45292ec1
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3a7c678b
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@28babeca
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1ad9b8d3
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@168ad26f
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4f93bf0a
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@322204dc
2024-08-25 19:21:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@656a3d6b
2024-08-25 19:21:46 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2233cac0] into BootstrapContext; was [null]
2024-08-25 19:21:46 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2233cac0) [was null]
2024-08-25 19:21:46 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@28cd2c2] into BootstrapContext; was [null]
2024-08-25 19:21:46 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@8e25d3f] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@18a096b5]
2024-08-25 19:21:46 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:21:46 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-25 19:21:46 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2233cac0]
2024-08-25 19:21:46 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2233cac0]
2024-08-25 19:21:46 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-25 19:21:47 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6598caab
2024-08-25 19:21:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-25 19:21:47 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
2024-08-25 19:21:47 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2024-08-25 19:21:47 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-08-25 19:21:47 DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.16
2024-08-25 19:21:47 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-08-25 19:21:47 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@30c01c37) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39a7eca5)
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45bd4753) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@156cfa20)
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25fd6d1e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23396fc0)
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c11332b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e5e6573)
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3005623b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58aa5c94)
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d27b4c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50df37eb)
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b508371) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41143873)
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21f50d2c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8bc0696)
2024-08-25 19:21:47 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@473847fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f28cf)
2024-08-25 19:21:47 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-25 19:21:47 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-25 19:21:47 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-25 19:21:47 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-25 19:21:47 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@59a2d756
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@b4732dc`
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:21:47 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-08-25 19:21:47 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7df4709e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2bfa17b0]
2024-08-25 19:21:47 DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-08-25 19:21:47 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Account
2024-08-25 19:21:47 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Account
2024-08-25 19:21:47 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Account on table account
2024-08-25 19:21:47 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:21:47 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:47 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Account] is safe
2024-08-25 19:21:47 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Account
2024-08-25 19:21:47 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:21:47 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Account:accountId]
2024-08-25 19:21:47 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:21:47 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_id
2024-08-25 19:21:47 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:21:47 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(account_id)]), accountId, assigned, , ...)
2024-08-25 19:21:47 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:47 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountDesc with lazy=false
2024-08-25 19:21:47 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Account:accountDesc]
2024-08-25 19:21:47 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountDesc
2024-08-25 19:21:47 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_desc
2024-08-25 19:21:47 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountDesc
2024-08-25 19:21:47 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Position
2024-08-25 19:21:47 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Position
2024-08-25 19:21:47 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Position on table position
2024-08-25 19:21:47 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Position] is safe
2024-08-25 19:21:48 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Position
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:id]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.id
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:accountId]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.account_id
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property bd with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:bd]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for bd
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.bd
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property bd
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:fromDt]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.from_dt
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:productId]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.product_id
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:quantity]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.quantity
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toDt with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Position:toDt]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toDt
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: position.to_dt
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property toDt
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Product
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Product
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Product on table product
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Product] is safe
2024-08-25 19:21:48 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Product
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Product:productId]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_id
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(product_id)]), productId, assigned, , ...)
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productDesc with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Product:productDesc]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productDesc
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_desc
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property productDesc
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.positionAggregation.entity.Transaction
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Transaction
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.positionAggregation.entity.Transaction on table transaction
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Transaction] is safe
2024-08-25 19:21:48 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Transaction
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property id with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:id]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for id
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.id
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property id
2024-08-25 19:21:48 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:accountId]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.account_id
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property aggregationStatus with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:aggregationStatus]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for aggregationStatus
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.aggregation_status
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property aggregationStatus
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property direction with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:direction]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for direction
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.direction
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property direction
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:fromDt]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.from_dt
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:productId]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.product_id
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:quantity]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.quantity
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property source with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:source]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for source
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.source
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property source
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property status with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:status]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for status
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.status
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property status
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property toDt with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:toDt]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for toDt
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.to_dt
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property toDt
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property tradeDt with lazy=false
2024-08-25 19:21:48 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.positionAggregation.entity.Transaction:tradeDt]
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for tradeDt
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: transaction.trade_dt
2024-08-25 19:21:48 DEBUG o.h.b.model.internal.PropertyBinder - Building property tradeDt
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountDesc
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for bd
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toDt
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productDesc
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for aggregationStatus
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for direction
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for source
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for status
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for toDt
2024-08-25 19:21:48 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for tradeDt
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [account]
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [position]
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
2024-08-25 19:21:48 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [transaction]
2024-08-25 19:21:48 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-08-25 19:21:48 DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-08-25 19:21:48 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-08-25 19:21:48 DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6ac9b66b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/aniamritapc/IdeaProjects/positonAggregation/build/classes/java/main:/Users/aniamritapc/IdeaProjects/positonAggregation/build/resources/main:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/3.1.1/f2c2d9e35430e4b4a98ad91780bb9b2d1deec08/spring-boot-starter-web-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-data-jpa/3.1.1/f129ea070d7d7152c984189301dc751be45f9a38/spring-boot-starter-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.mysql/mysql-connector-j/8.0.33/9e64d997873abc4318620264703d3fdb6b02dd5a/mysql-connector-j-8.0.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/3.1.1/8dc99860536a6a858de6caaeb67f84d7af8a30a3/spring-boot-starter-json-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-aop/3.1.1/f72362878ded668b8c3a12f8465ced98ef3fb188/spring-boot-starter-aop-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-jdbc/3.1.1/8e6bdc511fc9ade17c09fcc20a0f6a44fa39a876/spring-boot-starter-jdbc-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/3.1.1/cf74eeaef5a265c75dd89fea829391bf08efdb6c/spring-boot-starter-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/3.1.1/927f80fb9d8816209420223d1a1a09e730ea78e6/spring-boot-starter-tomcat-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/6.0.10/af3f040747f4bfbcdb96140f8c9d252d3a6a4ef1/spring-webmvc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/6.0.10/e61defa7908bf7a499f000dab8ef7691c2aa75c1/spring-web-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.orm/hibernate-core/6.2.5.Final/3c0d24dd2f66920aeeee666779ca7391f20bc69c/hibernate-core-6.2.5.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/3.1.1/815665072b1cfa83aa3175228539e3e468db15e0/spring-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/6.0.10/4a6a423ce6fdc474a327f7b7a7818dedc33c504f/spring-aspects-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/3.1.1/618ec717eef4ba2ff347c7713150aac8e73fe233/spring-boot-autoconfigure-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.1.1/f8f80c1453c8fe0e08a6235f983d8daf571d3e3/spring-boot-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/3.1.1/53bb456e4bf8f751de5a6ce154707b052946fd43/spring-boot-starter-logging-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/2.1.1/48b9bda22b091b1f48b13af03fe36db3be6e1ae3/jakarta.annotation-api-2.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/6.0.10/e2bd59f05c95647a274b7719d419cf8fde6f25a0/spring-context-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/6.0.10/cc309a306fa759018b107dea9a208c758af0297/spring-aop-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/6.0.10/321d8f382fad673d8b4d4047b4370176561c5a60/spring-orm-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/6.0.10/5179c98c5eba511cdd31852d1f74063aa17bf3da/spring-jdbc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/3.1.1/cfc10ccc41910b7b6e83cf27debaac73229572e0/spring-data-commons-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/6.0.10/459698d22aadc881afe425934cca79cc1f6bce91/spring-tx-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/6.0.10/8fc0684773cc1598edd810660f57d9e9c8ae6055/spring-beans-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/6.0.10/bd8c93e473e713fe9150a772487507a8e600d5f1/spring-expression-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/6.0.10/889aa214b6607763ddeb6bd391d682cd71681b36/spring-core-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.33/2cd0a87ff7df953f810c344bdf2fe3340b954c69/snakeyaml-1.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.15.2/30d16ec2aef6d8094c5e2dce1d95034ca8b6cb42/jackson-datatype-jsr310-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.15.2/75f8d2788db20f6c587c7a19e94fb6248c314241/jackson-module-parameter-names-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.15.2/4724a65ac8e8d156a24898d50fd5dbd3642870b8/jackson-annotations-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.15.2/a6fe1836469a69b3ff66037c324d75fc66ef137c/jackson-core-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.15.2/66a50e089cfd2f93896b9b6f7a734cea7bcf2f31/jackson-datatype-jdk8-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.15.2/9353b021f10c307c00328f52090de2bdb4b6ff9c/jackson-databind-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/10.1.10/10604119402bcaa8490b638698ad177f8df4c50c/tomcat-embed-websocket-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/10.1.10/7423236b34aa78d6f36592b2aa294d7c8469f219/tomcat-embed-core-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/10.1.10/717033c0417fdc7e794b382c066b7e78f6029268/tomcat-embed-el-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-observation/1.11.1/9027a35892c7e08ea8affce87b3662b6ceca122c/micrometer-observation-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.19/afbffb1210239fbba5cad73093c5b216d515838f/aspectjweaver-1.9.19.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/5.0.1/a74c7f0a37046846e88d54f7cb6ea6d565c65f9c/HikariCP-5.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.1.0/66901fa1c373c6aff65c13791cc11da72060a8d6/jakarta.persistence-api-3.1.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/2.0.1/51a520e3fae406abb84e2e1148e6746ce3f80a1a/jakarta.transaction-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.5.1.Final/a5c340a92c6efeaa0d495047ee9aab38a86bb107/jboss-logging-3.5.1.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/6.0.6.Final/77a5f94b56d49508e0ee334751db5b78e5ccd50c/hibernate-commons-annotations-6.0.6.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.smallrye/jandex/3.0.5/c548a4871b552292dbdd65409d3fda145c8925c1/jandex-3.0.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.14.5/28a424c0c4f362568e904d992c239c996cf7adc7/byte-buddy-1.14.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/4.0.3/93af25be25b2c92c83e0ce61cb8b3ed23568f316/jaxb-runtime-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-core/4.0.3/e9093b4a82069a1d78ee9a3233ca387bca88861f/jaxb-core-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/4.0.0/bbb399208d288b15ec101fa4fcfc4bd77cedc97a/jakarta.xml.bind-api-4.0.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.inject/jakarta.inject-api/2.0.1/4c28afe1991a941d7702fe1362c365f0a8641d1e/jakarta.inject-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.10.1/10839f875928f59c622d675091d51a43ea0dc5f7/antlr4-runtime-4.10.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.4.8/f00ba91d993e4d14301b11968d3cacc3be7ef3e1/logback-classic-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.20.0/d37f81f8978e2672bc32c82712ab4b3f66624adc/log4j-to-slf4j-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/2.0.7/a48f44aeaa8a5ddc347007298a28173ac1fbbd8b/jul-to-slf4j-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.7/41eb7184ea9d556f23e18b5cb99cad1f8581fc00/slf4j-api-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/6.0.10/cba44e98dab40a506c50978a0e5f11ceaa90b3ff/spring-jcl-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-commons/1.11.1/45bc0f2aa4d6180f1a783f1930f307a4efbb12e8/micrometer-commons-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.eclipse.angus/angus-activation/2.0.1/eaafaf4eb71b400e4136fc3a286f50e34a68ecb7/angus-activation-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/2.1.2/640c0d5aff45dbff1e1a1bc09673ff3a02b1ba12/jakarta.activation-api-2.1.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.4.8/3fba9c105e0efc5ffdcda701379687917d5286f7/logback-core-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.20.0/1fe6082e660daf07c689a89c94dc0f49c26b44bb/log4j-api-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/4.0.3/47b8fe31c6d1a3382203af919400527389e01e9c/txw2-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/4.1.2/18ec117c85f3ba0ac65409136afa8e42bc74e739/istack-commons-runtime-4.1.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=21, os.name=Mac OS X, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=SG, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/lib, sun.java.command=org.positionAggregation.PositionAggregationApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4491eaeb, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/Users/aniamritapc, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-07-16, java.home=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, apple.awt.application.name=PositionAggregationApplication, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=21.0.4+8-LTS-274, user.name=aniamritapc, stdout.encoding=US-ASCII, path.separator=:, os.version=10.15.7, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/, catalina.home=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.11037114448853842926, java.version=21.0.4, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/Users/aniamritapc/IdeaProjects/positonAggregation, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=30065, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.11037114448853842926, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@71262020, native.encoding=US-ASCII, java.library.path=/Users/aniamritapc/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=US-ASCII, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.4+8-LTS-274, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=65.0}
2024-08-25 19:21:48 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4b50c21] under count; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6fa3def8] under every; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1c3d9e28] under any; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68c4db77] under sinh; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@775c4054] under cosh; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b2e931] under tanh; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305881b8] under pi; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e89eba7] under log; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@407f2029] under position; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@b339a08] under overlay; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@59a5bb61] under trim; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@45dc7be] under cast; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d459bda] under collate; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2676d96a] under extract; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3a48c398] under ifnull; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3dded90a] under pad; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3c743d40] under str; prior registration was null
2024-08-25 19:21:48 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@38848217] under format; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@792e8181] under timestampadd; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1e95f584] under timestampdiff; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@189633f2] under current_date; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@76b05c0] under current_time; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b974137] under current_timestamp; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7402c49f] under local_date; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d22604e] under local_time; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2382b2f] under local_datetime; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13374ca6] under offset_datetime; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@71734463] under instant; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3eff6846] under sql; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e89eba7
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5f1f0ee6] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@326706d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76fc5687] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@407f2029
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1b317e7d] under trunc; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bb4c431] under bitand; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4fd3b20a] under bitor; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@295d54d6] under bitxor; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@398f0516] under bitnot; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4a7db5a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@38848217
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5d22604e
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2382b2f
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56b66a26] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305881b8
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@158e6fc2] under chr; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54687fd0] under sysdate; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@543da15] under rank; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@69d7bc1a] under dense_rank; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@cb318ac] under percent_rank; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6e668322] under cume_dist; prior registration was null
2024-08-25 19:21:49 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6f4adaab] under listagg; prior registration was null
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double avg(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - basicType@6(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-08-25 19:21:49 DEBUG org.hibernate.orm.query.plan.cache - Starting QueryPlanCache(2048)
2024-08-25 19:21:49 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Position] is safe
2024-08-25 19:21:49 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Position
2024-08-25 19:21:49 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Position]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:49 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Product] is safe
2024-08-25 19:21:49 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Product
2024-08-25 19:21:49 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [productDesc]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:49 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Account] is safe
2024-08-25 19:21:49 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Account
2024-08-25 19:21:49 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Account]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountDesc]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:49 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.positionAggregation.entity.Transaction] is safe
2024-08-25 19:21:49 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.positionAggregation.entity.Transaction
2024-08-25 19:21:49 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.positionAggregation.entity.Transaction]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:49 DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-08-25 19:21:49 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Position) `staticFetchableList` generator
2024-08-25 19:21:49 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Product) `staticFetchableList` generator
2024-08-25 19:21:49 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Account) `staticFetchableList` generator
2024-08-25 19:21:49 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.positionAggregation.entity.Transaction) `staticFetchableList` generator
2024-08-25 19:21:49 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Position
2024-08-25 19:21:49 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from position where id=?
2024-08-25 19:21:49 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into position (account_id,bd,from_dt,product_id,quantity,to_dt) values (?,?,?,?,?,?)
2024-08-25 19:21:49 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update position set account_id=?,bd=?,from_dt=?,product_id=?,quantity=?,to_dt=? where id=?
2024-08-25 19:21:49 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from position where id=?
2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Position)] with identifierForTableGroup [org.positionAggregation.entity.Position] for NavigablePath [org.positionAggregation.entity.Position] 
2024-08-25 19:21:50 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Position]
 |  +-BasicFetch [org.positionAggregation.entity.Position.accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Position.bd]
 |  +-BasicFetch [org.positionAggregation.entity.Position.fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Position.productId]
 |  +-BasicFetch [org.positionAggregation.entity.Position.quantity]
 |  \-BasicFetch [org.positionAggregation.entity.Position.toDt]

2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.positionAggregation.entity.Position) {
          primaryTableReference : position as p1_0
        }
      }
    }

2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Product
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select product_id from product where product_id=?
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into product (product_desc,product_id) values (?,?)
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update product set product_desc=? where product_id=?
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from product where product_id=?
2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Product)] with identifierForTableGroup [org.positionAggregation.entity.Product] for NavigablePath [org.positionAggregation.entity.Product] 
2024-08-25 19:21:50 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Product]
 |  \-BasicFetch [org.positionAggregation.entity.Product.productDesc]

2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.positionAggregation.entity.Product) {
          primaryTableReference : product as p1_0
        }
      }
    }

2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Account
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select account_id from account where account_id=?
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into account (account_desc,account_id) values (?,?)
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update account set account_desc=? where account_id=?
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from account where account_id=?
2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Account)] with identifierForTableGroup [org.positionAggregation.entity.Account] for NavigablePath [org.positionAggregation.entity.Account] 
2024-08-25 19:21:50 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Account]
 |  \-BasicFetch [org.positionAggregation.entity.Account.accountDesc]

2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.positionAggregation.entity.Account) {
          primaryTableReference : account as a1_0
        }
      }
    }

2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.positionAggregation.entity.Transaction
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select id from transaction where id=?
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into transaction (account_id,aggregation_status,direction,from_dt,product_id,quantity,source,status,to_dt,trade_dt) values (?,?,?,?,?,?,?,?,?,?)
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update transaction set account_id=?,aggregation_status=?,direction=?,from_dt=?,product_id=?,quantity=?,source=?,status=?,to_dt=?,trade_dt=? where id=?
2024-08-25 19:21:50 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from transaction where id=?
2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction)] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:21:50 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction.toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction.tradeDt]

2024-08-25 19:21:50 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:21:50 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-08-25 19:21:50 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-08-25 19:21:50 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-08-25 19:21:50 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7df4709e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@346330b6]
2024-08-25 19:21:50 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-08-25 19:21:50 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-08-25 19:21:51 DEBUG org.hibernate.SQL - drop table if exists account
2024-08-25 19:21:51 DEBUG org.hibernate.SQL - drop table if exists position
2024-08-25 19:21:51 DEBUG org.hibernate.SQL - drop table if exists product
2024-08-25 19:21:51 DEBUG org.hibernate.SQL - drop table if exists transaction
2024-08-25 19:21:51 DEBUG org.hibernate.SQL - create table account (account_id integer not null, account_desc varchar(255), primary key (account_id)) engine=InnoDB
2024-08-25 19:21:51 DEBUG org.hibernate.SQL - create table position (account_id integer, product_id integer, quantity integer, bd datetime(6), from_dt datetime(6), id bigint not null auto_increment, to_dt datetime(6), primary key (id)) engine=InnoDB
2024-08-25 19:21:51 DEBUG org.hibernate.SQL - create table product (product_id integer not null, product_desc varchar(255), primary key (product_id)) engine=InnoDB
2024-08-25 19:21:51 DEBUG org.hibernate.SQL - create table transaction (account_id integer, aggregation_status tinyint check (aggregation_status between 0 and 1), product_id integer, quantity integer, source tinyint check (source between 0 and 1), status tinyint check (status between 0 and 2), from_dt datetime(6), id bigint not null auto_increment, to_dt datetime(6), trade_dt datetime(6), direction varchar(255), primary key (id)) engine=InnoDB
2024-08-25 19:21:51 DEBUG o.h.t.s.i.e.GenerationTargetToDatabase - HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
2024-08-25 19:21:51 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2a0ce342
2024-08-25 19:21:51 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 09c9dcf3-57c7-4dc8-97d6-412e98c6f56d (<unnamed>)
2024-08-25 19:21:51 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-08-25 19:21:51 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@346330b6] for TypeConfiguration
2024-08-25 19:21:51 DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2024-08-25 19:21:51 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:21:51 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-08-25 19:21:52 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:52 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:52 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:52 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:52 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:52 DEBUG o.h.r.t.b.j.i.JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1021)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:899)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:120)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy100.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:113)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:711)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:694)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.positionAggregation.PositionAggregationApplication.main(PositionAggregationApplication.java:13)
2024-08-25 19:21:53 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-25 19:21:53 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-25 19:21:53 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-08-25 19:21:53 INFO  o.p.PositionAggregationApplication - Started PositionAggregationApplication in 11.517 seconds (process running for 12.369)
2024-08-25 19:21:53 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:21:53 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:21:53 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@39aed160
2024-08-25 19:21:53 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:21:53 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:21:53 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:21:53 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:21:53 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:21:53 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1123555835 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:21:53 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:21:54 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:21:54 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:21:54 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:21:54 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c05e9e8
2024-08-25 19:21:54 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:21:54 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:21:54 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:21:54 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:21:54 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:21:54 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@917467398 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:21:54 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:21:54 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:21:55 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:21:55 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:21:55 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f8b7c66
2024-08-25 19:21:55 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:21:55 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:21:55 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:21:55 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:21:55 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:21:55 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1942552789 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:21:55 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:21:55 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:21:56 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:21:56 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:21:56 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52018afc
2024-08-25 19:21:56 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:21:56 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:21:56 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:21:56 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:21:56 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:21:56 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@2143438628 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:21:56 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:21:56 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:21:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:21:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:21:57 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a8b9c6f
2024-08-25 19:21:57 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:21:57 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:21:57 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:21:57 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:21:57 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:21:57 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@2104944284 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:21:57 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:21:57 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:21:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:21:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:21:58 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7548e67a
2024-08-25 19:21:58 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:21:58 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:21:58 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:21:58 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:21:58 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:21:58 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1565496529 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:21:58 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:21:58 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:21:59 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:21:59 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:21:59 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6cee727b
2024-08-25 19:21:59 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:21:59 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:21:59 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:21:59 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:21:59 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:21:59 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@254445599 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:21:59 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:21:59 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:00 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:00 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:00 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@439b6033
2024-08-25 19:22:00 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:00 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:00 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:00 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:00 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:00 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1839443209 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:00 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:00 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:01 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:01 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:01 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a480072
2024-08-25 19:22:01 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:01 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:01 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:01 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:01 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:01 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@721930421 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:01 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:01 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:02 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:02 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:02 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@65998dbe
2024-08-25 19:22:02 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:02 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:02 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:02 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:02 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:02 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@915519134 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:02 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:02 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:03 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:03 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:03 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@310ed357
2024-08-25 19:22:03 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:03 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:03 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:03 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:03 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:03 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1756016065 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:03 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:03 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:04 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:04 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:04 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bf8dc8e
2024-08-25 19:22:04 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:04 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:04 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:04 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:04 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:04 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1834215646 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:04 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:04 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:05 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:05 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:05 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68b3eba0
2024-08-25 19:22:05 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:05 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:05 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:05 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:05 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:05 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@771185881 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:05 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:05 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:06 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:06 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:06 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7bdef29d
2024-08-25 19:22:06 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:06 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:06 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:06 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:06 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:06 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@263526520 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:06 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:06 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:07 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:07 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:07 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7687f345
2024-08-25 19:22:07 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:07 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:07 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:07 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:07 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:07 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1931647296 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:07 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:07 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:08 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:08 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:08 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7916b6b8
2024-08-25 19:22:08 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:08 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:08 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:08 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:08 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:08 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@621133771 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:08 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:08 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:09 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:09 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:09 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5054850e
2024-08-25 19:22:09 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:09 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:09 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:09 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:09 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:09 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@212426796 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:09 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:09 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:10 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:10 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:10 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4e49f68c
2024-08-25 19:22:10 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:10 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:10 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:10 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:10 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:10 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@621108067 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:10 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:10 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:11 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d4d2f19
2024-08-25 19:22:11 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:11 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:11 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:11 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:11 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:11 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1713433210 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:11 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:11 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:12 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:12 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:12 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1cb07bd9
2024-08-25 19:22:12 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:12 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:12 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:12 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:12 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:12 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@78708078 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:12 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:12 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:13 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:13 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:13 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6bcfd391
2024-08-25 19:22:13 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:13 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:13 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:13 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:13 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:13 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@281040921 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:13 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:13 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:14 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:14 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:14 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5b79921c
2024-08-25 19:22:14 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:14 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:14 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:14 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:14 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:14 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@267649669 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:14 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:14 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:15 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:15 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:15 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@644e2e32
2024-08-25 19:22:15 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:15 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:15 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:15 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:15 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:15 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@657623609 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:15 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:15 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:16 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:16 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:16 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@68c31d09
2024-08-25 19:22:16 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:16 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:16 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:16 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:16 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:16 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@293634749 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:16 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:16 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:17 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:17 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:17 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f5e1747
2024-08-25 19:22:17 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:17 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:17 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:17 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:17 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:17 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1271790842 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:17 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:17 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:18 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:18 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:18 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22d5fd92
2024-08-25 19:22:18 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:18 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:18 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:18 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:18 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:18 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1641629114 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:18 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:18 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:19 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:19 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:19 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3520757c
2024-08-25 19:22:19 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:19 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:19 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:19 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:19 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:19 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@645068262 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:19 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:19 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:20 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:20 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:20 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@54affa30
2024-08-25 19:22:20 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:20 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:20 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:20 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:20 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:20 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@408240901 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:20 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:20 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:21 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:21 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:21 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@645e9a68
2024-08-25 19:22:21 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:21 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:21 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:21 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:21 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:21 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@473373221 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:21 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:21 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:22 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:22 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:22 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@723a4f7a
2024-08-25 19:22:22 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:22 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:22 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:22 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:22 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:22 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1999903608 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:22 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:22 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:23 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:23 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:23 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2f9c7441
2024-08-25 19:22:23 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:23 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:23 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:23 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:23 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:23 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@565041138 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:23 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:23 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:24 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:24 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:24 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22ea8f6d
2024-08-25 19:22:24 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:24 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:24 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:24 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:24 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:24 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@556144804 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:24 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:24 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:25 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:25 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:25 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43e0aa68
2024-08-25 19:22:25 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:25 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:25 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:25 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:25 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:25 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@818818666 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:25 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:25 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:26 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:26 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:26 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@d70e329
2024-08-25 19:22:26 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:26 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:26 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:26 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:26 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:26 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@861168142 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:26 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:26 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:27 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:27 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:27 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1769d8f2
2024-08-25 19:22:27 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:27 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:27 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:27 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:27 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:27 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@224717775 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:27 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:27 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:28 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:28 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:28 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61c14116
2024-08-25 19:22:28 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:28 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:28 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:28 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:28 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:28 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1036090395 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:28 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:28 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:29 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:29 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:29 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@22623609
2024-08-25 19:22:29 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:29 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:29 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:29 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:29 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:29 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@994446360 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:29 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:29 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:30 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:30 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:30 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7593cfe0
2024-08-25 19:22:30 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:30 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:30 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:30 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:30 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:30 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@39511260 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:30 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:30 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:31 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:31 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:31 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3eaee37b
2024-08-25 19:22:31 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:31 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:31 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:31 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:31 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:31 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1739576533 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:31 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:31 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:32 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:32 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:32 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c254e9
2024-08-25 19:22:32 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:32 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:32 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:32 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:32 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:32 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1006947161 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:32 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:32 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:33 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:33 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:33 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56c686dd
2024-08-25 19:22:33 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:33 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:33 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:33 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:33 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:33 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@2002771632 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:33 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:33 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:34 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:34 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:34 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@67a80306
2024-08-25 19:22:34 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:34 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:34 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:34 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:34 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:34 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1138126771 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:34 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:34 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:35 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:35 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:35 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@610f827f
2024-08-25 19:22:35 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:35 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:35 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:35 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:35 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:35 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@995218336 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:35 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:35 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:36 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:36 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:36 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14669e2d
2024-08-25 19:22:36 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:36 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:36 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:36 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:36 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:36 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1721509297 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:36 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:36 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:37 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:37 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:37 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@48880675
2024-08-25 19:22:37 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:37 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:37 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:37 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:37 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:37 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@774313198 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:37 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:37 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:38 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:38 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:38 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@344ee47e
2024-08-25 19:22:38 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:38 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:38 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:38 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:38 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:38 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@2078037130 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:38 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:38 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:39 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:39 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:39 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1784b813
2024-08-25 19:22:39 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:39 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:39 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:39 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:39 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:39 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@2019270525 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:39 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:39 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:40 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:40 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:40 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@85e516f
2024-08-25 19:22:40 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:40 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:40 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:40 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:40 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:40 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1592987957 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:40 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:40 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:41 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:41 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:41 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64975241
2024-08-25 19:22:41 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:41 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:41 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:41 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:41 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:41 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@271909331 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:41 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:41 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:42 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:42 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:42 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fe86e72
2024-08-25 19:22:42 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:42 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:42 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:42 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:42 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:42 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1813756224 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:42 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:42 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:43 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:43 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:43 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@231b5138
2024-08-25 19:22:43 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:43 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:43 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:43 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:43 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:43 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@929492420 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:43 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:43 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:44 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:44 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:44 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a8096cd
2024-08-25 19:22:44 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:44 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:44 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:44 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:44 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:44 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1638037898 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:44 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:44 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:45 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:45 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:45 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31c6a54d
2024-08-25 19:22:45 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:45 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:45 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:45 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:45 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:45 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@343104107 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:45 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:45 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:46 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:46 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:46 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2818e05c
2024-08-25 19:22:46 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:46 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:46 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:46 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:46 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:46 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1974515827 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:46 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:46 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:47 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:47 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:47 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7ead2bff
2024-08-25 19:22:47 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:47 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:47 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:47 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:47 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:47 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@394110710 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:47 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:47 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:48 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:48 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:48 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7be52e41
2024-08-25 19:22:48 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:48 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:48 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:48 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:48 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:48 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@155899570 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:48 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:48 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:49 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:49 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:49 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@30b24b6c
2024-08-25 19:22:49 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:49 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:49 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:49 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:49 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:49 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1492872499 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:49 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:49 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:50 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:50 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:50 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1bd9fa67
2024-08-25 19:22:50 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:50 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:50 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:50 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:50 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:50 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1904331264 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:50 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:50 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:51 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:51 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:51 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5a892cdf
2024-08-25 19:22:51 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:51 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:51 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:51 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:51 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:51 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1753777703 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:51 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:51 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:52 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:52 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:52 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@194b7506
2024-08-25 19:22:52 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:52 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:52 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:52 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:52 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:52 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@663341982 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:52 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:52 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:53 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:53 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:53 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@197b974a
2024-08-25 19:22:53 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:53 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:53 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:53 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:53 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:53 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1097437624 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:53 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:53 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:54 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:54 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:54 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@26fd71d6
2024-08-25 19:22:54 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:54 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:54 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:54 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:54 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:54 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@56853659 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:54 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:54 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:55 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:55 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:55 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@631f52e8
2024-08-25 19:22:55 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:55 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:55 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:55 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:55 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:55 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1394787075 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:55 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:55 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:56 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:56 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:56 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1288e4b0
2024-08-25 19:22:56 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:56 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:56 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:56 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:56 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:56 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1981037473 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:56 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:56 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:57 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@64bed850
2024-08-25 19:22:57 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:57 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:57 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:57 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:57 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:57 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@194692682 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:57 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:57 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:58 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2dc1c17f
2024-08-25 19:22:58 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:58 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:58 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:58 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:58 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:58 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@955779053 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:58 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:58 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:22:59 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:22:59 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:22:59 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d31baf1
2024-08-25 19:22:59 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:22:59 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:22:59 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:22:59 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:22:59 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:22:59 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1251259800 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:22:59 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:22:59 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:00 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:00 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:00 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7076a16d
2024-08-25 19:23:00 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:00 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:00 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:00 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:00 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:00 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@301961271 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:00 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:00 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:01 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:01 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:01 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1eb5ade0
2024-08-25 19:23:01 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:01 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:01 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:01 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:01 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:01 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@763665704 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:01 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:01 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:02 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:02 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:02 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5f524854
2024-08-25 19:23:02 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:02 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:02 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:02 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:02 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:02 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@2141972767 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:02 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:02 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:03 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:03 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:03 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7c6fe999
2024-08-25 19:23:03 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:03 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:03 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:03 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:03 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:03 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@944957275 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:03 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:03 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:04 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:04 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:04 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ac0bbea
2024-08-25 19:23:04 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:04 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:04 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:04 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:04 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:04 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@146677192 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:04 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:04 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:05 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:05 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:05 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@669bb69e
2024-08-25 19:23:05 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:05 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:05 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:05 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:05 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:05 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@135229109 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:05 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:05 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:06 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:06 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:06 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@76e56e04
2024-08-25 19:23:06 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:06 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:06 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:06 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:06 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:06 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@270627798 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:06 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:06 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:07 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:07 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:07 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@438fdab5
2024-08-25 19:23:07 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:07 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:07 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:07 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:07 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:07 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@940563878 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:07 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:07 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:08 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:08 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:08 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@34de53f3
2024-08-25 19:23:08 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:08 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:08 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:08 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:08 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:08 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@81439709 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:08 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:08 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:09 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:09 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:09 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@240e6b38
2024-08-25 19:23:09 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:09 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:09 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:09 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:09 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:09 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@429674880 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:09 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:09 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:10 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:10 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:10 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5176c578
2024-08-25 19:23:10 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:10 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:10 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:10 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:10 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:10 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1031827943 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:10 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:10 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:11 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6dacbf29
2024-08-25 19:23:11 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:11 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:11 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:11 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:11 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:11 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@539573174 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:11 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:11 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:12 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:12 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:12 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@42cf3d17
2024-08-25 19:23:12 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:12 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:12 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:12 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:12 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:12 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@865892868 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:12 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:12 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:13 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:13 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:13 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@12f6463e
2024-08-25 19:23:13 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:13 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:13 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:13 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:13 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:13 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1268499599 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:13 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:13 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:14 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:14 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:14 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5164a8dd
2024-08-25 19:23:14 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:14 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:14 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:14 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:14 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:14 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1506573563 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:14 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:14 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:15 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:15 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:15 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@369e0f4e
2024-08-25 19:23:15 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:15 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:15 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:15 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:15 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:15 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1742488284 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:15 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:15 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:16 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:16 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:16 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47e256d9
2024-08-25 19:23:16 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:16 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:16 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:16 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:16 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:16 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1772630824 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:16 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:16 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:17 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:17 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:17 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@46b6220f
2024-08-25 19:23:17 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:17 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:17 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:17 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:17 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:17 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@201962907 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:17 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:17 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:18 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:18 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:18 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1b73f1d4
2024-08-25 19:23:18 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:18 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:18 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:18 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:18 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:18 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@964061800 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:18 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:18 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:19 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:19 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:19 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@32edf6b6
2024-08-25 19:23:19 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:19 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:19 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:19 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:19 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:19 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1188079494 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:19 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:19 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:20 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:20 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:20 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d2c88e4
2024-08-25 19:23:20 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:20 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:20 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:20 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:20 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:20 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1274383579 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:20 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:20 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:21 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:21 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:21 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3aa12671
2024-08-25 19:23:21 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:21 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:21 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:21 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:21 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:21 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1778646509 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:21 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:21 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:22 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:22 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:22 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@748a232e
2024-08-25 19:23:22 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:22 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:22 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:22 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:22 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:22 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@1129795699 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:22 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:22 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:23 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : t1_0
2024-08-25 19:23:23 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.positionAggregation.entity.Transaction(156680755570204))] with identifierForTableGroup [org.positionAggregation.entity.Transaction] for NavigablePath [org.positionAggregation.entity.Transaction] 
2024-08-25 19:23:23 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2adba986
2024-08-25 19:23:23 DEBUG o.h.q.s.sql.BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus) 
2024-08-25 19:23:23 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.positionAggregation.entity.Transaction(156680755570204)]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).accountId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).aggregationStatus]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).direction]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).fromDt]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).productId]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).quantity]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).source]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).status]
 |  +-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).toDt]
 |  \-BasicFetch [org.positionAggregation.entity.Transaction(156680755570204).tradeDt]

2024-08-25 19:23:23 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : org.positionAggregation.entity.Transaction(156680755570204)) {
          primaryTableReference : transaction as t1_0
        }
      }
    }

2024-08-25 19:23:23 DEBUG org.hibernate.orm.sql.exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-08-25 19:23:23 DEBUG org.hibernate.orm.results - Initializer list
2024-08-25 19:23:23 DEBUG org.hibernate.orm.results -     org.positionAggregation.entity.Transaction(156680755570204) -> EntityResultInitializer(org.positionAggregation.entity.Transaction(156680755570204))@2147090061 (SingleTableEntityPersister(org.positionAggregation.entity.Transaction))
2024-08-25 19:23:23 DEBUG org.hibernate.SQL - select t1_0.id,t1_0.account_id,t1_0.aggregation_status,t1_0.direction,t1_0.from_dt,t1_0.product_id,t1_0.quantity,t1_0.source,t1_0.status,t1_0.to_dt,t1_0.trade_dt from transaction t1_0 where t1_0.aggregation_status!=? order by t1_0.trade_dt limit ?
2024-08-25 19:23:23 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-08-25 19:23:24 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-25 19:23:24 DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-08-25 19:23:24 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@346330b6] for TypeConfiguration
2024-08-25 19:23:24 DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@307be528] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@346330b6]
2024-08-25 19:23:24 DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-08-25 19:23:24 DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-08-25 19:23:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-25 19:23:24 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-02 22:23:01 INFO  IntegrationTest - Starting IntegrationTest using Java 21.0.4 with PID 6409 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/positonAggregation)
2024-09-02 22:23:01 INFO  IntegrationTest - No active profile set, falling back to 1 default profile: "default"
2024-09-02 22:23:02 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-02 22:23:02 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 4 JPA repository interfaces.
2024-09-02 22:23:03 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-02 22:23:03 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-09-02 22:23:03 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-09-02 22:23:03 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-02 22:23:03 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-02 22:23:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-02 22:23:04 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@54275b5d
2024-09-02 22:23:04 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-02 22:23:05 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-02 22:23:06 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-09-02 22:23:06 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-02 22:23:07 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-02 22:23:07 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-09-02 22:23:07 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-09-02 22:23:07 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
2024-09-02 22:23:07 INFO  IntegrationTest - Started IntegrationTest in 6.013 seconds (process running for 7.946)
2024-09-02 22:23:07 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-09-02 22:23:08 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-09-02 22:23:09 INFO  o.p.service.AggregationService - New transactions not yet processed = [Transaction{id=1, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=123, source=PLANNING, aggregationStatus=PENDING, status=PM_DECISION, fromDt=2024-09-02T22:23:08.760601, toDt=null}, Transaction{id=2, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=234, source=PLANNING, aggregationStatus=PENDING, status=PM_DECISION, fromDt=2024-09-02T22:23:08.760601, toDt=null}]
2024-09-02 22:23:09 INFO  o.p.c.TransactionControllerTest - transaction = Transaction{id=3, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=123, source=PLANNING, aggregationStatus=PENDING, status=PM_DECISION, fromDt=2024-09-02T22:23:09.842017, toDt=null}
2024-09-02 22:23:09 INFO  o.p.c.TransactionControllerTest - transaction = Transaction{id=4, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=456, source=PLANNING, aggregationStatus=PENDING, status=PM_DECISION, fromDt=2024-09-02T22:23:09.842017, toDt=null}
2024-09-02 22:23:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-02 22:23:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-02 22:23:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-06 11:39:51 INFO  IntegrationTest - Starting IntegrationTest using Java 21.0.4 with PID 49073 (started by aniamritapc in /Users/aniamritapc/IdeaProjects/OMS)
2024-09-06 11:39:51 INFO  IntegrationTest - No active profile set, falling back to 1 default profile: "default"
2024-09-06 11:39:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-06 11:39:53 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 118 ms. Found 4 JPA repository interfaces.
2024-09-06 11:39:54 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-06 11:39:55 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-09-06 11:39:55 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-09-06 11:39:55 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-06 11:39:56 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-06 11:39:56 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-06 11:39:57 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6851b296
2024-09-06 11:39:57 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-06 11:39:58 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-06 11:39:59 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-09-06 11:40:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-06 11:40:02 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-06 11:40:03 INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2024-09-06 11:40:03 INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2024-09-06 11:40:03 INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2024-09-06 11:40:03 INFO  IntegrationTest - Started IntegrationTest in 13.307 seconds (process running for 19.728)
2024-09-06 11:40:03 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-09-06 11:40:04 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-09-06 11:40:05 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-09-06 11:40:06 INFO  o.p.service.AggregationService - New transactions not yet processed = []
2024-09-06 11:40:07 INFO  o.p.service.AggregationService - New transactions not yet processed = [Transaction{id=1, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=123, source=PLANNING, aggregationStatus=PENDING, status=PM_DECISION, fromDt=2024-09-06T11:40:05.469288, toDt=null}, Transaction{id=2, accountId=1, productId=1, tradeDt=2024-01-01 05:30:00.0, direction='BUY', quantity=234, source=PLANNING, aggregationStatus=PENDING, status=PM_DECISION, fromDt=2024-09-06T11:40:05.469288, toDt=null}]
2024-09-06 11:40:07 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-06 11:40:07 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-06 11:40:07 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-06 12:13:48 INFO  o.o.OmsApplication - Starting OmsApplication using Java 21.0.4 with PID 50030 (/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/OMS)
2024-09-06 12:13:48 INFO  o.o.OmsApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-06 12:13:49 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-06 12:13:49 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 5 JPA repository interfaces.
2024-09-06 12:13:50 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-09-06 12:13:50 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-09-06 12:13:50 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-06 12:13:50 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-09-06 12:13:50 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-06 12:13:50 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2036 ms
2024-09-06 12:13:50 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.orderManagementSystem.entity.Account
		org.orderManagementSystem.entity.Allocation
		org.orderManagementSystem.entity.Fill
		org.orderManagementSystem.entity.Order
		org.orderManagementSystem.entity.Product]
	Mapping files names []
	Properties []
2024-09-06 12:13:51 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-09-06 12:13:51 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-09-06 12:13:51 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-09-06 12:13:51 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-09-06 12:13:51 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-06 12:13:51 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-09-06 12:13:51 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-09-06 12:13:51 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5fdfe8cf
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5fdfe8cf
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5fdfe8cf
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2a8b33ba
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2a8b33ba
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e8b357d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e8b357d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2e1eb85f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2e1eb85f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ea7a4c3
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ea7a4c3
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@ea7a4c3
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@31723307
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2401856
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2401856
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@39b626e5
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2e71240b
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@196624bf
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@50085d9c
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@50085d9c
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@63a9c661
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b425577
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5934153e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3bb9ca38
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@160e99e0
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4f3e9fbb
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@365afe87
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@365afe87
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@43471a7e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@43471a7e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1a1ccaaf
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1a1ccaaf
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7b53b1ad
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7b53b1ad
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3cc053
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@388c519
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7fbd3e75
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7fbd3e75
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@198536f6
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fdd43cd
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a38f122
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ce03e86
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ce03e86
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c628f6a
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@9b47400
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@747835f5
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@747835f5
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@594131f2
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@594131f2
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4e0cc334
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1e12a5a6
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6f9ab79d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@64ae105d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@10a18e3e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@10a18e3e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5bde57ab
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5bde57ab
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@52f6900a
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@52f6900a
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7bbcf6f0
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2de6f1bc
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2de6f1bc
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@481b2f10
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2b6c7012
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@31acfd4e
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5f726750
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e80a001
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@624b523
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@50b46e24
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1c30cb85
2024-09-06 12:13:51 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@577bf0aa
2024-09-06 12:13:51 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1953bc95] into BootstrapContext; was [null]
2024-09-06 12:13:51 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1953bc95) [was null]
2024-09-06 12:13:51 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5a622fe8] into BootstrapContext; was [null]
2024-09-06 12:13:51 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@58f31629] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@124d26ba]
2024-09-06 12:13:51 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-06 12:13:51 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-06 12:13:51 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1953bc95]
2024-09-06 12:13:51 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1953bc95]
2024-09-06 12:13:51 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-06 12:13:53 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'ordermanagementsystem'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:13:53 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'ordermanagementsystem'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:13:53 DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2024-09-06 12:13:53 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-09-06 12:13:53 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-09-06 12:13:53 INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-09-06 12:13:53 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-09-06 12:13:53 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 16 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 31 common frames omitted
2024-09-06 12:19:43 INFO  o.o.OmsApplication - Starting OmsApplication using Java 21.0.4 with PID 50161 (/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/OMS)
2024-09-06 12:19:43 INFO  o.o.OmsApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-06 12:19:44 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-06 12:19:44 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114 ms. Found 5 JPA repository interfaces.
2024-09-06 12:19:45 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-09-06 12:19:45 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-09-06 12:19:45 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-06 12:19:45 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-09-06 12:19:46 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-06 12:19:46 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2728 ms
2024-09-06 12:19:46 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.orderManagementSystem.entity.Account
		org.orderManagementSystem.entity.Allocation
		org.orderManagementSystem.entity.Fill
		org.orderManagementSystem.entity.Order
		org.orderManagementSystem.entity.Product]
	Mapping files names []
	Properties []
2024-09-06 12:19:46 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-09-06 12:19:46 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-09-06 12:19:46 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-09-06 12:19:46 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-09-06 12:19:46 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-06 12:19:46 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-09-06 12:19:46 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-09-06 12:19:46 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e8b357d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e8b357d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4e8b357d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2e1eb85f
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2e1eb85f
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea7a4c3
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea7a4c3
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@31723307
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@31723307
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@31723307
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2401856
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2401856
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@39b626e5
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@39b626e5
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2e71240b
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@196624bf
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@50085d9c
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@63a9c661
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@63a9c661
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4b425577
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4b425577
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5934153e
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3bb9ca38
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@160e99e0
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4f3e9fbb
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@365afe87
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@43471a7e
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1a1ccaaf
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1a1ccaaf
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7b53b1ad
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7b53b1ad
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3cc053
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3cc053
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@388c519
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@388c519
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fbd3e75
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@198536f6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7fdd43cd
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7fdd43cd
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3a38f122
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ce03e86
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c628f6a
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@9b47400
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@9b47400
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@747835f5
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@594131f2
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4e0cc334
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4e0cc334
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4e0cc334
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1e12a5a6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1e12a5a6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1e12a5a6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6f9ab79d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6f9ab79d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@64ae105d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@64ae105d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@64ae105d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@10a18e3e
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@53aa2fc9
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@53aa2fc9
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@52f6900a
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@52f6900a
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7bbcf6f0
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7bbcf6f0
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2b80e5a9
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2b80e5a9
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4cc01c7f
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@29d405e6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@29d405e6
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@31acfd4e
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5f726750
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4e80a001
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@624b523
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@50b46e24
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1c30cb85
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@577bf0aa
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7455dacb
2024-09-06 12:19:46 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7634f2b
2024-09-06 12:19:46 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@549ac12c] into BootstrapContext; was [null]
2024-09-06 12:19:46 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@549ac12c) [was null]
2024-09-06 12:19:46 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@124d26ba] into BootstrapContext; was [null]
2024-09-06 12:19:46 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@415d88de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@a0bf272]
2024-09-06 12:19:46 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-06 12:19:47 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-06 12:19:47 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@549ac12c]
2024-09-06 12:19:47 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@549ac12c]
2024-09-06 12:19:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-06 12:19:48 ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'ordermanagementsystem'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:19:48 WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLSyntaxErrorException: Unknown database 'ordermanagementsystem'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:19:48 DEBUG o.h.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2024-09-06 12:19:48 ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-09-06 12:19:48 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
2024-09-06 12:19:48 INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-09-06 12:19:48 INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-09-06 12:19:48 ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:277)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:230)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:198)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 16 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'javax.persistence.jdbc.url', 'hibernate.connection.url', or 'hibernate.dialect')
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:188)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:274)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	... 31 common frames omitted
2024-09-06 12:20:52 INFO  o.o.OmsApplication - Starting OmsApplication using Java 21.0.4 with PID 50202 (/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/OMS)
2024-09-06 12:20:52 INFO  o.o.OmsApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-06 12:20:53 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-06 12:20:53 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 5 JPA repository interfaces.
2024-09-06 12:20:54 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-09-06 12:20:54 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-09-06 12:20:54 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-06 12:20:54 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-09-06 12:20:54 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-06 12:20:54 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1925 ms
2024-09-06 12:20:54 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.orderManagementSystem.entity.Account
		org.orderManagementSystem.entity.Allocation
		org.orderManagementSystem.entity.Fill
		org.orderManagementSystem.entity.Order
		org.orderManagementSystem.entity.Product]
	Mapping files names []
	Properties []
2024-09-06 12:20:54 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-09-06 12:20:54 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-09-06 12:20:54 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-09-06 12:20:54 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-09-06 12:20:54 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-06 12:20:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-09-06 12:20:54 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-09-06 12:20:54 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5fdfe8cf
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5fdfe8cf
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5fdfe8cf
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2a8b33ba
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2a8b33ba
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e8b357d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e8b357d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2e1eb85f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2e1eb85f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ea7a4c3
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@ea7a4c3
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@ea7a4c3
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@31723307
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2401856
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2401856
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@39b626e5
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2e71240b
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@196624bf
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@50085d9c
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@50085d9c
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@63a9c661
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b425577
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5934153e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3bb9ca38
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@160e99e0
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4f3e9fbb
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@365afe87
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@365afe87
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@43471a7e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@43471a7e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1a1ccaaf
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1a1ccaaf
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7b53b1ad
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7b53b1ad
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3cc053
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@388c519
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7fbd3e75
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7fbd3e75
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@198536f6
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7fdd43cd
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a38f122
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ce03e86
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ce03e86
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c628f6a
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@9b47400
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@747835f5
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@747835f5
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@594131f2
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@594131f2
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4e0cc334
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1e12a5a6
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6f9ab79d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@64ae105d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@10a18e3e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@10a18e3e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5bde57ab
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5bde57ab
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@52f6900a
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@52f6900a
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7bbcf6f0
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2de6f1bc
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2de6f1bc
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@481b2f10
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2b6c7012
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@31acfd4e
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5f726750
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e80a001
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@624b523
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@50b46e24
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1c30cb85
2024-09-06 12:20:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@577bf0aa
2024-09-06 12:20:54 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1953bc95] into BootstrapContext; was [null]
2024-09-06 12:20:54 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1953bc95) [was null]
2024-09-06 12:20:54 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5a622fe8] into BootstrapContext; was [null]
2024-09-06 12:20:54 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@58f31629] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@124d26ba]
2024-09-06 12:20:54 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-06 12:20:55 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-06 12:20:55 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1953bc95]
2024-09-06 12:20:55 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1953bc95]
2024-09-06 12:20:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-06 12:20:55 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1999149e
2024-09-06 12:20:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-06 12:20:55 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
2024-09-06 12:20:55 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2024-09-06 12:20:55 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-09-06 12:20:56 DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.16
2024-09-06 12:20:56 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-09-06 12:20:56 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@586728e8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3316527e)
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@786ff0ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@15186ce0)
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@745926c3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75dd0f94)
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72324965) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@249b54af)
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@194911c1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4751cd3)
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64ec1459) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1aac0a47)
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b3ad7ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6785c9fa)
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63cf578f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@194b9783)
2024-09-06 12:20:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45297e7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dd1548e)
2024-09-06 12:20:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-09-06 12:20:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-09-06 12:20:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-09-06 12:20:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-09-06 12:20:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4005e485
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@481b2f10`
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-09-06 12:20:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-09-06 12:20:56 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dda8a2e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c0de229]
2024-09-06 12:20:56 DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Account
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Account
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Account on table accounts
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Account] is safe
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Account
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Account:accountId]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: accounts.account_id
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(account_id)]), accountId, assigned, , ...)
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountName with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Account:accountName]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountName
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: accounts.account_name
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountName
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Allocation
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Allocation
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Allocation on table allocations
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Allocation] is safe
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Allocation
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationId with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationId]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationId
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocations.allocation_id
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationId
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(allocation_id)]), allocationId, identity, , ...)
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:accountId]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocations.account_id
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocatedQuantity with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocatedQuantity]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocatedQuantity
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocations.allocated_quantity
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocatedQuantity
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationCcy with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationCcy]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationCcy
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocations.allocation_ccy
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationCcy
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationCost with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationCost]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationCost
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocations.allocation_cost
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationCost
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:fromDt]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocations.from_dt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='order_id')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property order
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property pendingQuantity with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:pendingQuantity]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for pendingQuantity
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocations.pending_quantity
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property pendingQuantity
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:thruDt]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocations.thru_dt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Fill
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Fill
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Fill on table fills
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Fill] is safe
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Fill
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fillId with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fillId]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fillId
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fills.fill_id
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property fillId
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(fill_id)]), fillId, identity, , ...)
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='allocation_id')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocation
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fillQuantity with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fillQuantity]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fillQuantity
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fills.fill_quantity
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property fillQuantity
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fromDt]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fills.from_dt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:thruDt]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fills.thru_dt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Order
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Order
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Order on table orders
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Order] is safe
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Order
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property orderId with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:orderId]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for orderId
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: orders.order_id
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property orderId
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(order_id)]), orderId, identity, , ...)
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='allocations_ORDER')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='allocations_KEY')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='allocations_KEY')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.CollectionBinder - Collection role: org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocations
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property ccy with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:ccy]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for ccy
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: orders.ccy
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property ccy
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property direction with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:direction]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for direction
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: orders.direction
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property direction
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:fromDt]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: orders.from_dt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:productId]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: orders.product_id
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:quantity]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: orders.quantity
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property sourceId with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:sourceId]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for sourceId
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: orders.source_id
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property sourceId
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:thruDt]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: orders.thru_dt
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Product
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Product
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Product on table products
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Product] is safe
2024-09-06 12:20:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Product
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Product:productId]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: products.product_id
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(product_id)]), productId, assigned, , ...)
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productName with lazy=false
2024-09-06 12:20:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Product:productName]
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productName
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: products.product_name
2024-09-06 12:20:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property productName
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountName
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationId
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocatedQuantity
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationCcy
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationCost
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for pendingQuantity
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fillId
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fillQuantity
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for orderId
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for ccy
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for direction
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sourceId
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productName
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [accounts]
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [allocation_id] to be non-null as it is part of the primary key for table [allocations]
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [fill_id] to be non-null as it is part of the primary key for table [fills]
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [order_id] to be non-null as it is part of the primary key for table [orders]
2024-09-06 12:20:56 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [products]
2024-09-06 12:20:56 DEBUG o.h.b.m.i.CollectionSecondPass - Second pass for collection: org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.CollectionBinder - Binding a OneToMany: org.orderManagementSystem.entity.Order.allocations through a foreign key
2024-09-06 12:20:56 DEBUG o.h.b.m.internal.CollectionBinder - Mapping collection: org.orderManagementSystem.entity.Order.allocations -> allocations
2024-09-06 12:20:56 DEBUG o.h.boot.model.internal.TableBinder - Retrieving property org.orderManagementSystem.entity.Allocation.order
2024-09-06 12:20:56 DEBUG o.h.b.m.i.CollectionSecondPass - Mapped collection key: order_id, one-to-many: org.orderManagementSystem.entity.Allocation
2024-09-06 12:20:56 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Order
2024-09-06 12:20:56 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Allocation
2024-09-06 12:20:56 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Order
2024-09-06 12:20:56 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Allocation
2024-09-06 12:20:56 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-06 12:20:56 DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-09-06 12:20:56 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-09-06 12:20:56 DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@681311a7, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main:/Users/aniamritapc/IdeaProjects/OMS/build/resources/main:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/3.1.1/f2c2d9e35430e4b4a98ad91780bb9b2d1deec08/spring-boot-starter-web-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-data-jpa/3.1.1/f129ea070d7d7152c984189301dc751be45f9a38/spring-boot-starter-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.kafka/spring-kafka/3.0.8/5414e0e12541429e19cb8f120bb7479d0b79f4e9/spring-kafka-3.0.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/3.1.1/8dc99860536a6a858de6caaeb67f84d7af8a30a3/spring-boot-starter-json-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.15.2/30d16ec2aef6d8094c5e2dce1d95034ca8b6cb42/jackson-datatype-jsr310-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.15.2/75f8d2788db20f6c587c7a19e94fb6248c314241/jackson-module-parameter-names-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.15.2/4724a65ac8e8d156a24898d50fd5dbd3642870b8/jackson-annotations-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.15.2/a6fe1836469a69b3ff66037c324d75fc66ef137c/jackson-core-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.15.2/66a50e089cfd2f93896b9b6f7a734cea7bcf2f31/jackson-datatype-jdk8-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.15.0/d41caa3a4e9f85382702a059a65c512f85ac230/jackson-databind-2.15.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.mysql/mysql-connector-j/8.0.33/9e64d997873abc4318620264703d3fdb6b02dd5a/mysql-connector-j-8.0.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-aop/3.1.1/f72362878ded668b8c3a12f8465ced98ef3fb188/spring-boot-starter-aop-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-jdbc/3.1.1/8e6bdc511fc9ade17c09fcc20a0f6a44fa39a876/spring-boot-starter-jdbc-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/3.1.1/cf74eeaef5a265c75dd89fea829391bf08efdb6c/spring-boot-starter-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/3.1.1/927f80fb9d8816209420223d1a1a09e730ea78e6/spring-boot-starter-tomcat-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/6.0.10/af3f040747f4bfbcdb96140f8c9d252d3a6a4ef1/spring-webmvc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/6.0.10/e61defa7908bf7a499f000dab8ef7691c2aa75c1/spring-web-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.orm/hibernate-core/6.2.5.Final/3c0d24dd2f66920aeeee666779ca7391f20bc69c/hibernate-core-6.2.5.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/3.1.1/815665072b1cfa83aa3175228539e3e468db15e0/spring-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/6.0.10/4a6a423ce6fdc474a327f7b7a7818dedc33c504f/spring-aspects-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/3.1.1/618ec717eef4ba2ff347c7713150aac8e73fe233/spring-boot-autoconfigure-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.1.1/f8f80c1453c8fe0e08a6235f983d8daf571d3e3/spring-boot-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/6.0.10/e2bd59f05c95647a274b7719d419cf8fde6f25a0/spring-context-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-messaging/6.0.10/4854409bad759c2e65456b421604acf97e0237fc/spring-messaging-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/6.0.10/321d8f382fad673d8b4d4047b4370176561c5a60/spring-orm-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/6.0.10/5179c98c5eba511cdd31852d1f74063aa17bf3da/spring-jdbc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/6.0.10/459698d22aadc881afe425934cca79cc1f6bce91/spring-tx-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.retry/spring-retry/2.0.2/bd0d8859447e4311c0e0e4bfb5d571d57d9011cf/spring-retry-2.0.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.4.1/a2f55251deb3d31a21903a0cfbd4d1fa6b7463ca/kafka-clients-3.4.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-observation/1.11.1/9027a35892c7e08ea8affce87b3662b6ceca122c/micrometer-observation-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/3.1.1/53bb456e4bf8f751de5a6ce154707b052946fd43/spring-boot-starter-logging-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/2.1.1/48b9bda22b091b1f48b13af03fe36db3be6e1ae3/jakarta.annotation-api-2.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/6.0.10/cc309a306fa759018b107dea9a208c758af0297/spring-aop-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/3.1.1/cfc10ccc41910b7b6e83cf27debaac73229572e0/spring-data-commons-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/6.0.10/8fc0684773cc1598edd810660f57d9e9c8ae6055/spring-beans-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/6.0.10/bd8c93e473e713fe9150a772487507a8e600d5f1/spring-expression-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/6.0.10/889aa214b6607763ddeb6bd391d682cd71681b36/spring-core-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.33/2cd0a87ff7df953f810c344bdf2fe3340b954c69/snakeyaml-1.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/10.1.10/10604119402bcaa8490b638698ad177f8df4c50c/tomcat-embed-websocket-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/10.1.10/7423236b34aa78d6f36592b2aa294d7c8469f219/tomcat-embed-core-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/10.1.10/717033c0417fdc7e794b382c066b7e78f6029268/tomcat-embed-el-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.19/afbffb1210239fbba5cad73093c5b216d515838f/aspectjweaver-1.9.19.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/5.0.1/a74c7f0a37046846e88d54f7cb6ea6d565c65f9c/HikariCP-5.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.1.0/66901fa1c373c6aff65c13791cc11da72060a8d6/jakarta.persistence-api-3.1.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/2.0.1/51a520e3fae406abb84e2e1148e6746ce3f80a1a/jakarta.transaction-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.5.1.Final/a5c340a92c6efeaa0d495047ee9aab38a86bb107/jboss-logging-3.5.1.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/6.0.6.Final/77a5f94b56d49508e0ee334751db5b78e5ccd50c/hibernate-commons-annotations-6.0.6.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.smallrye/jandex/3.0.5/c548a4871b552292dbdd65409d3fda145c8925c1/jandex-3.0.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.14.5/28a424c0c4f362568e904d992c239c996cf7adc7/byte-buddy-1.14.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/4.0.3/93af25be25b2c92c83e0ce61cb8b3ed23568f316/jaxb-runtime-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-core/4.0.3/e9093b4a82069a1d78ee9a3233ca387bca88861f/jaxb-core-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/4.0.0/bbb399208d288b15ec101fa4fcfc4bd77cedc97a/jakarta.xml.bind-api-4.0.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.inject/jakarta.inject-api/2.0.1/4c28afe1991a941d7702fe1362c365f0a8641d1e/jakarta.inject-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.10.1/10839f875928f59c622d675091d51a43ea0dc5f7/antlr4-runtime-4.10.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.4.8/f00ba91d993e4d14301b11968d3cacc3be7ef3e1/logback-classic-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.20.0/d37f81f8978e2672bc32c82712ab4b3f66624adc/log4j-to-slf4j-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/2.0.7/a48f44aeaa8a5ddc347007298a28173ac1fbbd8b/jul-to-slf4j-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.7/41eb7184ea9d556f23e18b5cb99cad1f8581fc00/slf4j-api-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.github.luben/zstd-jni/1.5.2-1/fad786abc1d1b81570e8d9a2fc8a1ef479bc27b6/zstd-jni-1.5.2-1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.lz4/lz4-java/1.8.0/4b986a99445e49ea5fbf5d149c4b63f6ed6c6780/lz4-java-1.8.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.xerial.snappy/snappy-java/1.1.8.4/66f0d56454509f6e36175f2331572e250e04a6cc/snappy-java-1.1.8.4.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-commons/1.11.1/45bc0f2aa4d6180f1a783f1930f307a4efbb12e8/micrometer-commons-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/6.0.10/cba44e98dab40a506c50978a0e5f11ceaa90b3ff/spring-jcl-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.eclipse.angus/angus-activation/2.0.1/eaafaf4eb71b400e4136fc3a286f50e34a68ecb7/angus-activation-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/2.1.2/640c0d5aff45dbff1e1a1bc09673ff3a02b1ba12/jakarta.activation-api-2.1.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.4.8/3fba9c105e0efc5ffdcda701379687917d5286f7/logback-core-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.20.0/1fe6082e660daf07c689a89c94dc0f49c26b44bb/log4j-api-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/4.0.3/47b8fe31c6d1a3382203af919400527389e01e9c/txw2-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/4.1.2/18ec117c85f3ba0ac65409136afa8e42bc74e739/istack-commons-runtime-4.1.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=21, os.name=Mac OS X, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=SG, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/lib, sun.java.command=org.orderManagementSystem.OmsApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2c7375da, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/Users/aniamritapc, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-07-16, java.home=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, apple.awt.application.name=OmsApplication, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=21.0.4+8-LTS-274, user.name=aniamritapc, stdout.encoding=US-ASCII, path.separator=:, os.version=10.15.7, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/, catalina.home=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.290206842177401554, java.version=21.0.4, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/Users/aniamritapc/IdeaProjects/OMS, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=50202, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.290206842177401554, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@68c4db77, native.encoding=US-ASCII, java.library.path=/Users/aniamritapc/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=US-ASCII, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.4+8-LTS-274, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=65.0}
2024-09-06 12:20:56 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@67e4928c] under count; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@647ff23e] under every; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a04d2a4] under any; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9cc0505] under sinh; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@645d4639] under cosh; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8ee03f5] under tanh; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ad40184] under pi; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3359c3f6] under log; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@16949dfa] under position; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@144440f5] under overlay; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@56499781] under trim; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7598d675] under cast; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4946485c] under collate; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@340fc1aa] under extract; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@fd69983] under ifnull; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1c788d08] under pad; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1df06ecd] under str; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2de7c84a] under format; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@55682482] under timestampadd; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@299cab08] under timestampdiff; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ffc6ea7] under current_date; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c5708e7] under current_time; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4ffa078d] under current_timestamp; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4e26564d] under local_date; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42238078] under local_time; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5627b8eb] under local_datetime; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49fe0bcd] under offset_datetime; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3516b881] under instant; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@39a865c1] under sql; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3359c3f6
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@19924f15] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@621392ea] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35524549] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@16949dfa
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5034681f] under trunc; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dfe5dd1] under bitand; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fe05fff] under bitor; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e017950] under bitxor; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d06801f] under bitnot; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@727956bb] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2de7c84a
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@42238078
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5627b8eb
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ffbf0ac] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ad40184
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ad5cffa] under chr; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@237aa0c7] under sysdate; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2b1d1a5] under rank; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@41e7a544] under dense_rank; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3b66ac74] under percent_rank; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@573870cb] under cume_dist; prior registration was null
2024-09-06 12:20:56 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3d98729a] under listagg; prior registration was null
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double avg(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - basicType@5(java.lang.Long,-5)|basicType@7(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-09-06 12:20:56 DEBUG org.hibernate.orm.query.plan.cache - Starting QueryPlanCache(2048)
2024-09-06 12:20:57 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:20:57 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Allocation] is safe
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Allocation
2024-09-06 12:20:57 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Allocation]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:20:57 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Product] is safe
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Product
2024-09-06 12:20:57 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [productName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Account] is safe
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Account
2024-09-06 12:20:57 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Account]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Order] is safe
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Order
2024-09-06 12:20:57 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Order]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [allocations]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:20:57 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:20:57 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Fill] is safe
2024-09-06 12:20:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Fill
2024-09-06 12:20:57 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Fill]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [allocation]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:20:57 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:20:57 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection (re)creation - org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:20:57 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection row deletions - org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:20:57 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection removals - org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.orderManagementSystem.entity.Allocation.order]
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Allocation) `staticFetchableList` generator
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Product) `staticFetchableList` generator
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Account) `staticFetchableList` generator
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.orderManagementSystem.entity.Order.allocations#{element}]) - element descriptor
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.orderManagementSystem.entity.Order.allocations)#finishInitialization
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.orderManagementSystem.entity.Order.allocations) - key descriptor
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Order) `staticFetchableList` generator
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.orderManagementSystem.entity.Fill.allocation]
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Fill) `staticFetchableList` generator
2024-09-06 12:20:57 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.orderManagementSystem.entity.Order.allocations#{element}]) - element descriptor
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Allocation
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select allocation_id from allocations where allocation_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into allocations (account_id,allocated_quantity,allocation_ccy,allocation_cost,from_dt,order_id,pending_quantity,thru_dt) values (?,?,?,?,?,?,?,?)
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update allocations set account_id=?,allocated_quantity=?,allocation_ccy=?,allocation_cost=?,from_dt=?,order_id=?,pending_quantity=?,thru_dt=? where allocation_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from allocations where allocation_id=?
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Allocation)] with identifierForTableGroup [org.orderManagementSystem.entity.Allocation] for NavigablePath [org.orderManagementSystem.entity.Allocation] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@fe38c0e] with identifierForTableGroup [org.orderManagementSystem.entity.Allocation.order] for NavigablePath [org.orderManagementSystem.entity.Allocation.order] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Allocation]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.accountId]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocatedQuantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocationCcy]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocationCost]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.fromDt]
 |  +-EntityFetchJoinedImpl [org.orderManagementSystem.entity.Allocation.order]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.pendingQuantity]
 |  \-BasicFetch [org.orderManagementSystem.entity.Allocation.thruDt]

2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.orderManagementSystem.entity.Allocation) {
          primaryTableReference : allocations as a1_0
          TableGroupJoins {
             join LazyTableGroup (o1 : org.orderManagementSystem.entity.Allocation.order) {
              primaryTableReference : orders as o1_0
            }
          }
        }
      }
    }

2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Product
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select product_id from products where product_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into products (product_name,product_id) values (?,?)
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update products set product_name=? where product_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from products where product_id=?
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Product)] with identifierForTableGroup [org.orderManagementSystem.entity.Product] for NavigablePath [org.orderManagementSystem.entity.Product] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Product]
 |  \-BasicFetch [org.orderManagementSystem.entity.Product.productName]

2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.orderManagementSystem.entity.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Account
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select account_id from accounts where account_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into accounts (account_name,account_id) values (?,?)
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update accounts set account_name=? where account_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from accounts where account_id=?
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Account)] with identifierForTableGroup [org.orderManagementSystem.entity.Account] for NavigablePath [org.orderManagementSystem.entity.Account] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Account]
 |  \-BasicFetch [org.orderManagementSystem.entity.Account.accountName]

2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.orderManagementSystem.entity.Account) {
          primaryTableReference : accounts as a1_0
        }
      }
    }

2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Order
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select order_id from orders where order_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into orders (ccy,direction,from_dt,product_id,quantity,source_id,thru_dt) values (?,?,?,?,?,?,?)
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update orders set ccy=?,direction=?,from_dt=?,product_id=?,quantity=?,source_id=?,thru_dt=? where order_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from orders where order_id=?
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Order)] with identifierForTableGroup [org.orderManagementSystem.entity.Order] for NavigablePath [org.orderManagementSystem.entity.Order] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Order]
 |  +-DelayedCollectionFetch [org.orderManagementSystem.entity.Order.allocations]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.ccy]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.direction]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.fromDt]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.productId]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.quantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.sourceId]
 |  \-BasicFetch [org.orderManagementSystem.entity.Order.thruDt]

2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (o1 : org.orderManagementSystem.entity.Order) {
          primaryTableReference : orders as o1_0
        }
      }
    }

2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Fill
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select fill_id from fills where fill_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into fills (allocation_id,fill_quantity,from_dt,thru_dt) values (?,?,?,?)
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update fills set allocation_id=?,fill_quantity=?,from_dt=?,thru_dt=? where fill_id=?
2024-09-06 12:20:57 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from fills where fill_id=?
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Fill)] with identifierForTableGroup [org.orderManagementSystem.entity.Fill] for NavigablePath [org.orderManagementSystem.entity.Fill] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@dbcf7c3] with identifierForTableGroup [org.orderManagementSystem.entity.Fill.allocation] for NavigablePath [org.orderManagementSystem.entity.Fill.allocation] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e466d] with identifierForTableGroup [org.orderManagementSystem.entity.Fill.allocation.order] for NavigablePath [org.orderManagementSystem.entity.Fill.allocation.order] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Fill]
 |  +-EntityFetchJoinedImpl [org.orderManagementSystem.entity.Fill.allocation]
 |  +-BasicFetch [org.orderManagementSystem.entity.Fill.fillQuantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Fill.fromDt]
 |  \-BasicFetch [org.orderManagementSystem.entity.Fill.thruDt]

2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : org.orderManagementSystem.entity.Fill) {
          primaryTableReference : fills as f1_0
          TableGroupJoins {
             join LazyTableGroup (a1 : org.orderManagementSystem.entity.Fill.allocation) {
              primaryTableReference : allocations as a1_0
              TableGroupJoins {
                left  join LazyTableGroup (o1 : org.orderManagementSystem.entity.Fill.allocation.order) {
                  primaryTableReference : orders as o1_0
                }
              }
            }
          }
        }
      }
    }

2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@50b624da] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations] for NavigablePath [org.orderManagementSystem.entity.Order.allocations] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Order.allocations.{element})] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations.{element}] for NavigablePath [org.orderManagementSystem.entity.Order.allocations.{element}] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e288c76] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations.{element}.order] for NavigablePath [org.orderManagementSystem.entity.Order.allocations.{element}.order] 
2024-09-06 12:20:57 DEBUG org.hibernate.orm.jdbc.mutation - Static SQL for collection: org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:20:57 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-09-06 12:20:57 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-09-06 12:20:57 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-09-06 12:20:57 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dda8a2e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@11a7840f]
2024-09-06 12:20:57 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-09-06 12:20:57 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-09-06 12:20:57 DEBUG org.hibernate.SQL - alter table allocations drop foreign key FK6w41urlw3xfdnn3ykcu06y1xv
2024-09-06 12:20:58 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table allocations drop foreign key FK6w41urlw3xfdnn3ykcu06y1xv" via JDBC [Table 'ordermanagementsystem.allocations' doesn't exist]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table allocations drop foreign key FK6w41urlw3xfdnn3ykcu06y1xv" via JDBC [Table 'ordermanagementsystem.allocations' doesn't exist]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:455)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: Table 'ordermanagementsystem.allocations' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - alter table fills drop foreign key FK5s6d8p0fyogkv5ypxeqjys21b
2024-09-06 12:20:58 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table fills drop foreign key FK5s6d8p0fyogkv5ypxeqjys21b" via JDBC [Table 'ordermanagementsystem.fills' doesn't exist]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table fills drop foreign key FK5s6d8p0fyogkv5ypxeqjys21b" via JDBC [Table 'ordermanagementsystem.fills' doesn't exist]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:455)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: Table 'ordermanagementsystem.fills' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - drop table if exists accounts
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - drop table if exists allocations
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - drop table if exists fills
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - drop table if exists orders
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - drop table if exists products
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - create table accounts (account_id varchar(255) not null, account_name varchar(255), primary key (account_id)) engine=InnoDB
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - create table allocations (allocated_quantity integer not null, allocation_cost float(53) not null, from_dt date not null, pending_quantity integer not null, thru_dt date not null, allocation_id bigint not null auto_increment, order_id bigint not null, account_id varchar(255) not null, allocation_ccy varchar(255) not null, primary key (allocation_id)) engine=InnoDB
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - create table fills (fill_quantity integer not null, from_dt date not null, thru_dt date not null, allocation_id bigint not null, fill_id bigint not null auto_increment, primary key (fill_id)) engine=InnoDB
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - create table orders (from_dt date not null, quantity integer not null, thru_dt date not null, order_id bigint not null auto_increment, ccy varchar(255) not null, direction varchar(255) not null, product_id varchar(255) not null, source_id varchar(255) not null, primary key (order_id)) engine=InnoDB
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - create table products (product_id varchar(255) not null, product_name varchar(255), primary key (product_id)) engine=InnoDB
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - alter table allocations add constraint FK6w41urlw3xfdnn3ykcu06y1xv foreign key (order_id) references orders (order_id)
2024-09-06 12:20:58 DEBUG org.hibernate.SQL - alter table fills add constraint FK5s6d8p0fyogkv5ypxeqjys21b foreign key (allocation_id) references allocations (allocation_id)
2024-09-06 12:20:58 DEBUG o.h.t.s.i.e.GenerationTargetToDatabase - HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
2024-09-06 12:20:58 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b1d2f65
2024-09-06 12:20:58 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 489f9b4b-9a76-4184-b9e2-d720bcac5887 (<unnamed>)
2024-09-06 12:20:58 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-09-06 12:20:58 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@11a7840f] for TypeConfiguration
2024-09-06 12:20:58 DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2024-09-06 12:20:58 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-06 12:20:58 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-09-06 12:20:59 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-06 12:20:59 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-09-06 12:21:00 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-09-06 12:21:00 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-oms-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = oms-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-06 12:21:00 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2024-09-06 12:21:00 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2024-09-06 12:21:00 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725605460743
2024-09-06 12:21:00 INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Subscribed to topic(s): orders_topic
2024-09-06 12:21:00 INFO  o.o.OmsApplication - Started OmsApplication in 8.988 seconds (process running for 10.028)
2024-09-06 12:21:01 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:01 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:01 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:01 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:01 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:02 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:02 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:02 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:03 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:03 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:03 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:05 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:05 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:05 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:06 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:06 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:06 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:07 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:07 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:07 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:08 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:08 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:08 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:09 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:09 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:09 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:10 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:10 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:10 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:11 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:11 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:11 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:12 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:12 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:12 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:13 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:14 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:14 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:14 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:15 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:15 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:15 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:16 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:16 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:16 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:17 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:17 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:17 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:18 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:18 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:18 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:20 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:20 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:20 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:21 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:21 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:21 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:22 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:22 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:22 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:23 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:23 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:23 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:24 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:24 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:24 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:25 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:25 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:25 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:26 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:26 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:26 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:27 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:27 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:27 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:28 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:28 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:28 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:29 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:29 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:29 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:30 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:30 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:30 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:31 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:31 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:31 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:32 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:32 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:32 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:33 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:33 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:33 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:35 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:35 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:35 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:35 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:35 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:35 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:36 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:36 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:36 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:37 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:37 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:37 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:38 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:38 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:38 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:39 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:39 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:39 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:41 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:41 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:41 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:42 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:42 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:42 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:42 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:42 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:42 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:43 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:43 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:43 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:44 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:44 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:44 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:46 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:46 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:46 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:47 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:47 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:47 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:48 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:48 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:48 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:49 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:49 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:49 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:50 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:50 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:50 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:51 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:51 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:51 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:52 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:52 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:52 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:53 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:53 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:53 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:54 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:54 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:54 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:55 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:21:55 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:21:55 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:21:55 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-06 12:21:55 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Request joining group due to: consumer pro-actively leaving the group
2024-09-06 12:21:55 INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Unsubscribed all topics or patterns and assigned partitions
2024-09-06 12:21:55 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-06 12:21:55 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Request joining group due to: consumer pro-actively leaving the group
2024-09-06 12:21:55 INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-06 12:21:55 INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-06 12:21:55 INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-06 12:21:55 INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-oms-group-1 unregistered
2024-09-06 12:21:55 INFO  o.s.k.l.KafkaMessageListenerContainer - oms-group: Consumer stopped
2024-09-06 12:21:55 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-06 12:21:55 DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-09-06 12:21:55 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@11a7840f] for TypeConfiguration
2024-09-06 12:21:55 DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4d4432fd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@11a7840f]
2024-09-06 12:21:55 DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-09-06 12:21:55 DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-09-06 12:21:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-06 12:21:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-06 12:22:06 INFO  o.o.OmsApplication - Starting OmsApplication using Java 21.0.4 with PID 50235 (/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/OMS)
2024-09-06 12:22:06 INFO  o.o.OmsApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-06 12:22:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-06 12:22:07 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 5 JPA repository interfaces.
2024-09-06 12:22:07 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-09-06 12:22:07 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-09-06 12:22:07 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-06 12:22:07 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-09-06 12:22:07 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-06 12:22:07 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1665 ms
2024-09-06 12:22:08 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.orderManagementSystem.entity.Account
		org.orderManagementSystem.entity.Allocation
		org.orderManagementSystem.entity.Fill
		org.orderManagementSystem.entity.Order
		org.orderManagementSystem.entity.Product]
	Mapping files names []
	Properties []
2024-09-06 12:22:08 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-09-06 12:22:08 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-09-06 12:22:08 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-09-06 12:22:08 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-09-06 12:22:08 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-06 12:22:08 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-09-06 12:22:08 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-09-06 12:22:08 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@39b626e5
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2e71240b
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2e71240b
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2e71240b
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@196624bf
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@196624bf
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@50085d9c
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@50085d9c
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@63a9c661
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4b425577
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4b425577
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5934153e
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3bb9ca38
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3bb9ca38
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3bb9ca38
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@160e99e0
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4f3e9fbb
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@365afe87
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@43471a7e
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@43471a7e
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1a1ccaaf
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7b53b1ad
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3cc053
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@388c519
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7fbd3e75
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@198536f6
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7fdd43cd
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7fdd43cd
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3a38f122
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3a38f122
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2ce03e86
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2ce03e86
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1c628f6a
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1c628f6a
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@9b47400
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@9b47400
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@747835f5
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@594131f2
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e0cc334
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1e12a5a6
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f9ab79d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@64ae105d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@64ae105d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@10a18e3e
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@10a18e3e
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@53aa2fc9
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@53aa2fc9
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@53aa2fc9
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5bde57ab
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@52f6900a
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7bbcf6f0
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2b80e5a9
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2b80e5a9
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4cc01c7f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4cc01c7f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4cc01c7f
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@36c7cbe1
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@36c7cbe1
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1ac6dd3d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1ac6dd3d
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@562919fe
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@562919fe
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@794f11cd
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@794f11cd
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@715f45c6
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@715f45c6
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5d5c41e5
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@740dcae3
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@740dcae3
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7455dacb
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7634f2b
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1d15c0a1
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@15639d09
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4fba8eec
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@52bd9a27
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@611e5819
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@681c0ae6
2024-09-06 12:22:08 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@73ca34e7
2024-09-06 12:22:08 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@a0bf272] into BootstrapContext; was [null]
2024-09-06 12:22:08 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@a0bf272) [was null]
2024-09-06 12:22:08 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4c07d1fc] into BootstrapContext; was [null]
2024-09-06 12:22:08 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2eada095] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@52831a73]
2024-09-06 12:22:08 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-06 12:22:08 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-06 12:22:08 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@a0bf272]
2024-09-06 12:22:08 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@a0bf272]
2024-09-06 12:22:08 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-06 12:22:09 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@69ba3f4e
2024-09-06 12:22:09 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-06 12:22:09 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
2024-09-06 12:22:09 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2024-09-06 12:22:09 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-09-06 12:22:09 DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.16
2024-09-06 12:22:09 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-09-06 12:22:09 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4751cd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64ec1459)
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1aac0a47) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b3ad7ca)
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6785c9fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63cf578f)
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@194b9783) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45297e7)
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dd1548e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54bb1194)
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1109730f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f42366)
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46c662f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4afdfc0f)
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10b67f54) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30798137)
2024-09-06 12:22:09 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@455da438) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@60652518)
2024-09-06 12:22:09 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-09-06 12:22:09 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-09-06 12:22:09 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-09-06 12:22:09 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-09-06 12:22:09 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4bdb04c8
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7455dacb`
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-09-06 12:22:09 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-09-06 12:22:09 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7657d90b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3f0c6b3c]
2024-09-06 12:22:09 DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-09-06 12:22:09 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Account
2024-09-06 12:22:09 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Account
2024-09-06 12:22:09 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Account on table account
2024-09-06 12:22:09 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:22:09 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:09 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Account] is safe
2024-09-06 12:22:09 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Account
2024-09-06 12:22:09 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-09-06 12:22:09 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Account:accountId]
2024-09-06 12:22:09 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-09-06 12:22:09 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_id
2024-09-06 12:22:09 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-09-06 12:22:09 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(account_id)]), accountId, assigned, , ...)
2024-09-06 12:22:09 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:09 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountName with lazy=false
2024-09-06 12:22:09 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Account:accountName]
2024-09-06 12:22:09 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountName
2024-09-06 12:22:09 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_name
2024-09-06 12:22:09 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountName
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Allocation
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Allocation
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Allocation on table allocation
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Allocation] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Allocation
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationId with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationId]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationId
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.allocation_id
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationId
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(allocation_id)]), allocationId, identity, , ...)
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:accountId]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.account_id
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocatedQuantity with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocatedQuantity]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocatedQuantity
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.allocated_quantity
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocatedQuantity
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationCcy with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationCcy]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationCcy
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.allocation_ccy
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationCcy
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationCost with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationCost]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationCost
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.allocation_cost
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationCost
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:fromDt]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.from_dt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='order_id')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property order
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property pendingQuantity with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:pendingQuantity]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for pendingQuantity
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.pending_quantity
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property pendingQuantity
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:thruDt]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.thru_dt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Fill
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Fill
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Fill on table fill
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Fill] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Fill
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fillId with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fillId]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fillId
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fill.fill_id
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property fillId
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(fill_id)]), fillId, identity, , ...)
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='allocation_id')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocation
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fillQuantity with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fillQuantity]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fillQuantity
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fill.fill_quantity
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property fillQuantity
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fromDt]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fill.from_dt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:thruDt]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fill.thru_dt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Order
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Order
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Order on table order
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Order] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Order
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property orderId with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:orderId]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for orderId
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.order_id
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property orderId
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(order_id)]), orderId, identity, , ...)
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='allocations_ORDER')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='allocations_KEY')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='allocations_KEY')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.CollectionBinder - Collection role: org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocations
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property ccy with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:ccy]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for ccy
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.ccy
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property ccy
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property direction with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:direction]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for direction
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.direction
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property direction
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:fromDt]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.from_dt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:productId]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.product_id
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:quantity]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.quantity
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property sourceId with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:sourceId]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for sourceId
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.source_id
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property sourceId
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:thruDt]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.thru_dt
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Product
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Product
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Product on table product
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Product] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Product
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Product:productId]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_id
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(product_id)]), productId, assigned, , ...)
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productName with lazy=false
2024-09-06 12:22:10 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Product:productName]
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productName
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_name
2024-09-06 12:22:10 DEBUG o.h.b.model.internal.PropertyBinder - Building property productName
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountName
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationId
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocatedQuantity
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationCcy
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationCost
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for pendingQuantity
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fillId
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fillQuantity
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for orderId
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for ccy
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for direction
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sourceId
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productName
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [account]
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [allocation_id] to be non-null as it is part of the primary key for table [allocation]
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [fill_id] to be non-null as it is part of the primary key for table [fill]
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [order_id] to be non-null as it is part of the primary key for table [order]
2024-09-06 12:22:10 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
2024-09-06 12:22:10 DEBUG o.h.b.m.i.CollectionSecondPass - Second pass for collection: org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.CollectionBinder - Binding a OneToMany: org.orderManagementSystem.entity.Order.allocations through a foreign key
2024-09-06 12:22:10 DEBUG o.h.b.m.internal.CollectionBinder - Mapping collection: org.orderManagementSystem.entity.Order.allocations -> allocation
2024-09-06 12:22:10 DEBUG o.h.boot.model.internal.TableBinder - Retrieving property org.orderManagementSystem.entity.Allocation.order
2024-09-06 12:22:10 DEBUG o.h.b.m.i.CollectionSecondPass - Mapped collection key: order_id, one-to-many: org.orderManagementSystem.entity.Allocation
2024-09-06 12:22:10 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Order
2024-09-06 12:22:10 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Allocation
2024-09-06 12:22:10 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Order
2024-09-06 12:22:10 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Allocation
2024-09-06 12:22:10 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-06 12:22:10 DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-09-06 12:22:10 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-09-06 12:22:10 DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@f08d676, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main:/Users/aniamritapc/IdeaProjects/OMS/build/resources/main:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/3.1.1/f2c2d9e35430e4b4a98ad91780bb9b2d1deec08/spring-boot-starter-web-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-data-jpa/3.1.1/f129ea070d7d7152c984189301dc751be45f9a38/spring-boot-starter-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.kafka/spring-kafka/3.0.8/5414e0e12541429e19cb8f120bb7479d0b79f4e9/spring-kafka-3.0.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/3.1.1/8dc99860536a6a858de6caaeb67f84d7af8a30a3/spring-boot-starter-json-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.15.2/30d16ec2aef6d8094c5e2dce1d95034ca8b6cb42/jackson-datatype-jsr310-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.15.2/75f8d2788db20f6c587c7a19e94fb6248c314241/jackson-module-parameter-names-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.15.2/4724a65ac8e8d156a24898d50fd5dbd3642870b8/jackson-annotations-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.15.2/a6fe1836469a69b3ff66037c324d75fc66ef137c/jackson-core-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.15.2/66a50e089cfd2f93896b9b6f7a734cea7bcf2f31/jackson-datatype-jdk8-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.15.0/d41caa3a4e9f85382702a059a65c512f85ac230/jackson-databind-2.15.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.mysql/mysql-connector-j/8.0.33/9e64d997873abc4318620264703d3fdb6b02dd5a/mysql-connector-j-8.0.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-aop/3.1.1/f72362878ded668b8c3a12f8465ced98ef3fb188/spring-boot-starter-aop-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-jdbc/3.1.1/8e6bdc511fc9ade17c09fcc20a0f6a44fa39a876/spring-boot-starter-jdbc-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/3.1.1/cf74eeaef5a265c75dd89fea829391bf08efdb6c/spring-boot-starter-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/3.1.1/927f80fb9d8816209420223d1a1a09e730ea78e6/spring-boot-starter-tomcat-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/6.0.10/af3f040747f4bfbcdb96140f8c9d252d3a6a4ef1/spring-webmvc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/6.0.10/e61defa7908bf7a499f000dab8ef7691c2aa75c1/spring-web-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.orm/hibernate-core/6.2.5.Final/3c0d24dd2f66920aeeee666779ca7391f20bc69c/hibernate-core-6.2.5.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/3.1.1/815665072b1cfa83aa3175228539e3e468db15e0/spring-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/6.0.10/4a6a423ce6fdc474a327f7b7a7818dedc33c504f/spring-aspects-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/3.1.1/618ec717eef4ba2ff347c7713150aac8e73fe233/spring-boot-autoconfigure-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.1.1/f8f80c1453c8fe0e08a6235f983d8daf571d3e3/spring-boot-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/6.0.10/e2bd59f05c95647a274b7719d419cf8fde6f25a0/spring-context-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-messaging/6.0.10/4854409bad759c2e65456b421604acf97e0237fc/spring-messaging-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/6.0.10/321d8f382fad673d8b4d4047b4370176561c5a60/spring-orm-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/6.0.10/5179c98c5eba511cdd31852d1f74063aa17bf3da/spring-jdbc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/6.0.10/459698d22aadc881afe425934cca79cc1f6bce91/spring-tx-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.retry/spring-retry/2.0.2/bd0d8859447e4311c0e0e4bfb5d571d57d9011cf/spring-retry-2.0.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.4.1/a2f55251deb3d31a21903a0cfbd4d1fa6b7463ca/kafka-clients-3.4.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-observation/1.11.1/9027a35892c7e08ea8affce87b3662b6ceca122c/micrometer-observation-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/3.1.1/53bb456e4bf8f751de5a6ce154707b052946fd43/spring-boot-starter-logging-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/2.1.1/48b9bda22b091b1f48b13af03fe36db3be6e1ae3/jakarta.annotation-api-2.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/6.0.10/cc309a306fa759018b107dea9a208c758af0297/spring-aop-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/3.1.1/cfc10ccc41910b7b6e83cf27debaac73229572e0/spring-data-commons-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/6.0.10/8fc0684773cc1598edd810660f57d9e9c8ae6055/spring-beans-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/6.0.10/bd8c93e473e713fe9150a772487507a8e600d5f1/spring-expression-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/6.0.10/889aa214b6607763ddeb6bd391d682cd71681b36/spring-core-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.33/2cd0a87ff7df953f810c344bdf2fe3340b954c69/snakeyaml-1.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/10.1.10/10604119402bcaa8490b638698ad177f8df4c50c/tomcat-embed-websocket-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/10.1.10/7423236b34aa78d6f36592b2aa294d7c8469f219/tomcat-embed-core-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/10.1.10/717033c0417fdc7e794b382c066b7e78f6029268/tomcat-embed-el-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.19/afbffb1210239fbba5cad73093c5b216d515838f/aspectjweaver-1.9.19.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/5.0.1/a74c7f0a37046846e88d54f7cb6ea6d565c65f9c/HikariCP-5.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.1.0/66901fa1c373c6aff65c13791cc11da72060a8d6/jakarta.persistence-api-3.1.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/2.0.1/51a520e3fae406abb84e2e1148e6746ce3f80a1a/jakarta.transaction-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.5.1.Final/a5c340a92c6efeaa0d495047ee9aab38a86bb107/jboss-logging-3.5.1.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/6.0.6.Final/77a5f94b56d49508e0ee334751db5b78e5ccd50c/hibernate-commons-annotations-6.0.6.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.smallrye/jandex/3.0.5/c548a4871b552292dbdd65409d3fda145c8925c1/jandex-3.0.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.14.5/28a424c0c4f362568e904d992c239c996cf7adc7/byte-buddy-1.14.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/4.0.3/93af25be25b2c92c83e0ce61cb8b3ed23568f316/jaxb-runtime-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-core/4.0.3/e9093b4a82069a1d78ee9a3233ca387bca88861f/jaxb-core-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/4.0.0/bbb399208d288b15ec101fa4fcfc4bd77cedc97a/jakarta.xml.bind-api-4.0.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.inject/jakarta.inject-api/2.0.1/4c28afe1991a941d7702fe1362c365f0a8641d1e/jakarta.inject-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.10.1/10839f875928f59c622d675091d51a43ea0dc5f7/antlr4-runtime-4.10.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.4.8/f00ba91d993e4d14301b11968d3cacc3be7ef3e1/logback-classic-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.20.0/d37f81f8978e2672bc32c82712ab4b3f66624adc/log4j-to-slf4j-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/2.0.7/a48f44aeaa8a5ddc347007298a28173ac1fbbd8b/jul-to-slf4j-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.7/41eb7184ea9d556f23e18b5cb99cad1f8581fc00/slf4j-api-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.github.luben/zstd-jni/1.5.2-1/fad786abc1d1b81570e8d9a2fc8a1ef479bc27b6/zstd-jni-1.5.2-1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.lz4/lz4-java/1.8.0/4b986a99445e49ea5fbf5d149c4b63f6ed6c6780/lz4-java-1.8.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.xerial.snappy/snappy-java/1.1.8.4/66f0d56454509f6e36175f2331572e250e04a6cc/snappy-java-1.1.8.4.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-commons/1.11.1/45bc0f2aa4d6180f1a783f1930f307a4efbb12e8/micrometer-commons-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/6.0.10/cba44e98dab40a506c50978a0e5f11ceaa90b3ff/spring-jcl-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.eclipse.angus/angus-activation/2.0.1/eaafaf4eb71b400e4136fc3a286f50e34a68ecb7/angus-activation-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/2.1.2/640c0d5aff45dbff1e1a1bc09673ff3a02b1ba12/jakarta.activation-api-2.1.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.4.8/3fba9c105e0efc5ffdcda701379687917d5286f7/logback-core-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.20.0/1fe6082e660daf07c689a89c94dc0f49c26b44bb/log4j-api-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/4.0.3/47b8fe31c6d1a3382203af919400527389e01e9c/txw2-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/4.1.2/18ec117c85f3ba0ac65409136afa8e42bc74e739/istack-commons-runtime-4.1.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=21, os.name=Mac OS X, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=SG, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/lib, sun.java.command=org.orderManagementSystem.OmsApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3eedd0e3, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/Users/aniamritapc, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-07-16, java.home=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, apple.awt.application.name=OmsApplication, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=21.0.4+8-LTS-274, user.name=aniamritapc, stdout.encoding=US-ASCII, path.separator=:, os.version=10.15.7, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/, catalina.home=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.13135242805305421370, java.version=21.0.4, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/Users/aniamritapc/IdeaProjects/OMS, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=50235, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.13135242805305421370, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@478089b6, native.encoding=US-ASCII, java.library.path=/Users/aniamritapc/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=US-ASCII, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.4+8-LTS-274, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=65.0}
2024-09-06 12:22:10 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6a04d2a4] under count; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@556aed22] under every; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57a982f9] under any; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26cdd4af] under sinh; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@707f4647] under cosh; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b8a0d03] under tanh; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54f373d4] under pi; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c53bd49] under log; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6785df10] under position; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3ec7ad61] under overlay; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4ae958b0] under trim; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@fd69983] under cast; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22429a11] under collate; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2adc1e84] under extract; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@57927bc9] under ifnull; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@684b26b7] under pad; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@46de118b] under str; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3f4964f2] under format; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@186f7434] under timestampadd; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5627b8eb] under timestampdiff; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e3c36d] under current_date; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@397a10df] under current_time; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39a865c1] under current_timestamp; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@141dfcf9] under local_date; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a7bbdbc] under local_time; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63eea8c4] under local_datetime; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@19924f15] under offset_datetime; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@621392ea] under instant; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@56f72909] under sql; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c53bd49
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1dd64243] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2ef913a4] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@520c3dcb] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6785df10
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1b8ee69d] under trunc; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b400bd0] under bitand; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fceab5d] under bitor; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79445efb] under bitxor; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1592e540] under bitnot; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3e2772a9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3f4964f2
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@a7bbdbc
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@63eea8c4
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4449b273] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54f373d4
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fa18f87] under chr; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d9bd1d6] under sysdate; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4bc21e34] under rank; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7544260a] under dense_rank; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@bb6869a] under percent_rank; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@506b083] under cume_dist; prior registration was null
2024-09-06 12:22:10 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5c1dd18] under listagg; prior registration was null
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double avg(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - basicType@5(java.lang.Long,-5)|basicType@7(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-09-06 12:22:10 DEBUG org.hibernate.orm.query.plan.cache - Starting QueryPlanCache(2048)
2024-09-06 12:22:10 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:22:10 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Allocation] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Allocation
2024-09-06 12:22:10 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Allocation]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:22:10 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Product] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Product
2024-09-06 12:22:10 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [productName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Account] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Account
2024-09-06 12:22:10 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Account]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Order] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Order
2024-09-06 12:22:10 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Order]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [allocations]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:22:10 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:22:10 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Fill] is safe
2024-09-06 12:22:10 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Fill
2024-09-06 12:22:11 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Fill]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [allocation]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-06 12:22:11 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-06 12:22:11 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection (re)creation - org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:22:11 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection row deletions - org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:22:11 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection removals - org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.orderManagementSystem.entity.Allocation.order]
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Allocation) `staticFetchableList` generator
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Product) `staticFetchableList` generator
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Account) `staticFetchableList` generator
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.orderManagementSystem.entity.Order.allocations#{element}]) - element descriptor
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.orderManagementSystem.entity.Order.allocations)#finishInitialization
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.orderManagementSystem.entity.Order.allocations) - key descriptor
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Order) `staticFetchableList` generator
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.orderManagementSystem.entity.Fill.allocation]
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Fill) `staticFetchableList` generator
2024-09-06 12:22:11 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.orderManagementSystem.entity.Order.allocations#{element}]) - element descriptor
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Allocation
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select allocation_id from allocation where allocation_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into allocation (account_id,allocated_quantity,allocation_ccy,allocation_cost,from_dt,order_id,pending_quantity,thru_dt) values (?,?,?,?,?,?,?,?)
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update allocation set account_id=?,allocated_quantity=?,allocation_ccy=?,allocation_cost=?,from_dt=?,order_id=?,pending_quantity=?,thru_dt=? where allocation_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from allocation where allocation_id=?
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Allocation)] with identifierForTableGroup [org.orderManagementSystem.entity.Allocation] for NavigablePath [org.orderManagementSystem.entity.Allocation] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d946eee] with identifierForTableGroup [org.orderManagementSystem.entity.Allocation.order] for NavigablePath [org.orderManagementSystem.entity.Allocation.order] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Allocation]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.accountId]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocatedQuantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocationCcy]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocationCost]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.fromDt]
 |  +-EntityFetchJoinedImpl [org.orderManagementSystem.entity.Allocation.order]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.pendingQuantity]
 |  \-BasicFetch [org.orderManagementSystem.entity.Allocation.thruDt]

2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.orderManagementSystem.entity.Allocation) {
          primaryTableReference : allocation as a1_0
          TableGroupJoins {
             join LazyTableGroup (o1 : org.orderManagementSystem.entity.Allocation.order) {
              primaryTableReference : order as o1_0
            }
          }
        }
      }
    }

2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Product
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select product_id from product where product_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into product (product_name,product_id) values (?,?)
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update product set product_name=? where product_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from product where product_id=?
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Product)] with identifierForTableGroup [org.orderManagementSystem.entity.Product] for NavigablePath [org.orderManagementSystem.entity.Product] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Product]
 |  \-BasicFetch [org.orderManagementSystem.entity.Product.productName]

2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.orderManagementSystem.entity.Product) {
          primaryTableReference : product as p1_0
        }
      }
    }

2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Account
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select account_id from account where account_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into account (account_name,account_id) values (?,?)
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update account set account_name=? where account_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from account where account_id=?
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Account)] with identifierForTableGroup [org.orderManagementSystem.entity.Account] for NavigablePath [org.orderManagementSystem.entity.Account] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Account]
 |  \-BasicFetch [org.orderManagementSystem.entity.Account.accountName]

2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.orderManagementSystem.entity.Account) {
          primaryTableReference : account as a1_0
        }
      }
    }

2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Order
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select order_id from order where order_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into order (ccy,direction,from_dt,product_id,quantity,source_id,thru_dt) values (?,?,?,?,?,?,?)
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update order set ccy=?,direction=?,from_dt=?,product_id=?,quantity=?,source_id=?,thru_dt=? where order_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from order where order_id=?
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Order)] with identifierForTableGroup [org.orderManagementSystem.entity.Order] for NavigablePath [org.orderManagementSystem.entity.Order] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Order]
 |  +-DelayedCollectionFetch [org.orderManagementSystem.entity.Order.allocations]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.ccy]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.direction]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.fromDt]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.productId]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.quantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.sourceId]
 |  \-BasicFetch [org.orderManagementSystem.entity.Order.thruDt]

2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (o1 : org.orderManagementSystem.entity.Order) {
          primaryTableReference : order as o1_0
        }
      }
    }

2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Fill
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select fill_id from fill where fill_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into fill (allocation_id,fill_quantity,from_dt,thru_dt) values (?,?,?,?)
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update fill set allocation_id=?,fill_quantity=?,from_dt=?,thru_dt=? where fill_id=?
2024-09-06 12:22:11 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from fill where fill_id=?
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Fill)] with identifierForTableGroup [org.orderManagementSystem.entity.Fill] for NavigablePath [org.orderManagementSystem.entity.Fill] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4d90d91f] with identifierForTableGroup [org.orderManagementSystem.entity.Fill.allocation] for NavigablePath [org.orderManagementSystem.entity.Fill.allocation] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c478e4e] with identifierForTableGroup [org.orderManagementSystem.entity.Fill.allocation.order] for NavigablePath [org.orderManagementSystem.entity.Fill.allocation.order] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Fill]
 |  +-EntityFetchJoinedImpl [org.orderManagementSystem.entity.Fill.allocation]
 |  +-BasicFetch [org.orderManagementSystem.entity.Fill.fillQuantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Fill.fromDt]
 |  \-BasicFetch [org.orderManagementSystem.entity.Fill.thruDt]

2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : org.orderManagementSystem.entity.Fill) {
          primaryTableReference : fill as f1_0
          TableGroupJoins {
             join LazyTableGroup (a1 : org.orderManagementSystem.entity.Fill.allocation) {
              primaryTableReference : allocation as a1_0
              TableGroupJoins {
                left  join LazyTableGroup (o1 : org.orderManagementSystem.entity.Fill.allocation.order) {
                  primaryTableReference : order as o1_0
                }
              }
            }
          }
        }
      }
    }

2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@71de1091] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations] for NavigablePath [org.orderManagementSystem.entity.Order.allocations] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Order.allocations.{element})] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations.{element}] for NavigablePath [org.orderManagementSystem.entity.Order.allocations.{element}] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68f264bf] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations.{element}.order] for NavigablePath [org.orderManagementSystem.entity.Order.allocations.{element}.order] 
2024-09-06 12:22:11 DEBUG org.hibernate.orm.jdbc.mutation - Static SQL for collection: org.orderManagementSystem.entity.Order.allocations
2024-09-06 12:22:11 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-09-06 12:22:11 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-09-06 12:22:11 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-09-06 12:22:11 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7657d90b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1c0fe6c5]
2024-09-06 12:22:11 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-09-06 12:22:11 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - alter table allocation drop foreign key FK14upafay5btx2ciwy07xm5nvd
2024-09-06 12:22:11 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table allocation drop foreign key FK14upafay5btx2ciwy07xm5nvd" via JDBC [Table 'ordermanagementsystem.allocation' doesn't exist]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table allocation drop foreign key FK14upafay5btx2ciwy07xm5nvd" via JDBC [Table 'ordermanagementsystem.allocation' doesn't exist]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:455)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: Table 'ordermanagementsystem.allocation' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - alter table fill drop foreign key FKn19uwov77ltfanaulkivsr6e7
2024-09-06 12:22:11 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table fill drop foreign key FKn19uwov77ltfanaulkivsr6e7" via JDBC [Table 'ordermanagementsystem.fill' doesn't exist]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table fill drop foreign key FKn19uwov77ltfanaulkivsr6e7" via JDBC [Table 'ordermanagementsystem.fill' doesn't exist]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:455)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: Table 'ordermanagementsystem.fill' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - drop table if exists account
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - drop table if exists allocation
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - drop table if exists fill
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - drop table if exists order
2024-09-06 12:22:11 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists order" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists order" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:362)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - drop table if exists product
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - create table account (account_id varchar(255) not null, account_name varchar(255), primary key (account_id)) engine=InnoDB
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - create table allocation (allocated_quantity integer not null, allocation_cost float(53) not null, from_dt date not null, pending_quantity integer not null, thru_dt date not null, allocation_id bigint not null auto_increment, order_id bigint not null, account_id varchar(255) not null, allocation_ccy varchar(255) not null, primary key (allocation_id)) engine=InnoDB
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - create table fill (fill_quantity integer not null, from_dt date not null, thru_dt date not null, allocation_id bigint not null, fill_id bigint not null auto_increment, primary key (fill_id)) engine=InnoDB
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - create table order (from_dt date not null, quantity integer not null, thru_dt date not null, order_id bigint not null auto_increment, ccy varchar(255) not null, direction varchar(255) not null, product_id varchar(255) not null, source_id varchar(255) not null, primary key (order_id)) engine=InnoDB
2024-09-06 12:22:11 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create table order (from_dt date not null, quantity integer not null, thru_dt date not null, order_id bigint not null auto_increment, ccy varchar(255) not null, direction varchar(255) not null, product_id varchar(255) not null, source_id varchar(255) not null, primary key (order_id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (from_dt date not null, quantity integer not null, thru_dt date not null, ' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table order (from_dt date not null, quantity integer not null, thru_dt date not null, order_id bigint not null auto_increment, ccy varchar(255) not null, direction varchar(255) not null, product_id varchar(255) not null, source_id varchar(255) not null, primary key (order_id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (from_dt date not null, quantity integer not null, thru_dt date not null, ' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:419)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:254)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (from_dt date not null, quantity integer not null, thru_dt date not null, ' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - create table product (product_id varchar(255) not null, product_name varchar(255), primary key (product_id)) engine=InnoDB
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - alter table allocation add constraint FK14upafay5btx2ciwy07xm5nvd foreign key (order_id) references order (order_id)
2024-09-06 12:22:11 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table allocation add constraint FK14upafay5btx2ciwy07xm5nvd foreign key (order_id) references order (order_id)" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (order_id)' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table allocation add constraint FK14upafay5btx2ciwy07xm5nvd foreign key (order_id) references order (order_id)" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (order_id)' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:254)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (order_id)' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 39 common frames omitted
2024-09-06 12:22:11 DEBUG org.hibernate.SQL - alter table fill add constraint FKn19uwov77ltfanaulkivsr6e7 foreign key (allocation_id) references allocation (allocation_id)
2024-09-06 12:22:11 DEBUG o.h.t.s.i.e.GenerationTargetToDatabase - HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
2024-09-06 12:22:11 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16cbba0f
2024-09-06 12:22:11 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: e0fb1ef0-4e01-441d-b8ac-93cf3bb9e033 (<unnamed>)
2024-09-06 12:22:11 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-09-06 12:22:11 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1c0fe6c5] for TypeConfiguration
2024-09-06 12:22:11 DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2024-09-06 12:22:11 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-06 12:22:11 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-09-06 12:22:12 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-06 12:22:12 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-09-06 12:22:12 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-09-06 12:22:12 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-oms-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = oms-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-06 12:22:12 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2024-09-06 12:22:12 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2024-09-06 12:22:12 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725605532894
2024-09-06 12:22:12 INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Subscribed to topic(s): orders_topic
2024-09-06 12:22:12 INFO  o.o.OmsApplication - Started OmsApplication in 7.416 seconds (process running for 8.431)
2024-09-06 12:22:13 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:13 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:13 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:13 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:13 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:14 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:14 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:14 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:15 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:15 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:15 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:15 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:15 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:15 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:16 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:16 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:16 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:17 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:17 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:17 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:18 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:18 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:18 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:20 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:20 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:20 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:21 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:21 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:21 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:22 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:22 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:22 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:23 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:23 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:23 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:24 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:24 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:24 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:24 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:24 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:24 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:25 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:25 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:25 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:27 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:27 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:27 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:28 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:28 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:28 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:29 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:29 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:29 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:30 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:30 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:30 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:31 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:31 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:31 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:32 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:32 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:32 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:33 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:33 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:33 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:34 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:34 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:34 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:35 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:35 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:35 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:36 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:36 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:36 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:37 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:37 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:37 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:38 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:38 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:38 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:39 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:39 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:39 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:40 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:40 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:40 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:42 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:42 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:42 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:42 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:42 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:42 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:44 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:44 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:44 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:45 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:45 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:45 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:46 INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Node -1 disconnected.
2024-09-06 12:22:46 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
2024-09-06 12:22:46 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-09-06 12:22:47 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-06 12:22:47 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Request joining group due to: consumer pro-actively leaving the group
2024-09-06 12:22:47 INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Unsubscribed all topics or patterns and assigned partitions
2024-09-06 12:22:47 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-06 12:22:47 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Request joining group due to: consumer pro-actively leaving the group
2024-09-06 12:22:47 INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-06 12:22:47 INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-06 12:22:47 INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-06 12:22:47 INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-oms-group-1 unregistered
2024-09-06 12:22:47 INFO  o.s.k.l.KafkaMessageListenerContainer - oms-group: Consumer stopped
2024-09-06 12:22:47 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-06 12:22:47 DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-09-06 12:22:47 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1c0fe6c5] for TypeConfiguration
2024-09-06 12:22:47 DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4a76f198] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1c0fe6c5]
2024-09-06 12:22:47 DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-09-06 12:22:47 DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-09-06 12:22:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-06 12:22:47 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-07 11:39:51 INFO  o.o.OmsApplication - Starting OmsApplication using Java 21.0.4 with PID 9231 (/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main started by aniamritapc in /Users/aniamritapc/IdeaProjects/OMS)
2024-09-07 11:39:51 INFO  o.o.OmsApplication - No active profile set, falling back to 1 default profile: "default"
2024-09-07 11:39:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-07 11:39:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 5 JPA repository interfaces.
2024-09-07 11:39:54 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2024-09-07 11:39:54 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-09-07 11:39:54 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-07 11:39:54 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.10]
2024-09-07 11:39:54 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-07 11:39:54 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2806 ms
2024-09-07 11:39:54 DEBUG o.h.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1cf4f579
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		org.orderManagementSystem.entity.Account
		org.orderManagementSystem.entity.Allocation
		org.orderManagementSystem.entity.Fill
		org.orderManagementSystem.entity.Order
		org.orderManagementSystem.entity.Product]
	Mapping files names []
	Properties []
2024-09-07 11:39:54 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-09-07 11:39:54 DEBUG o.h.i.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-09-07 11:39:54 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.5.Final
2024-09-07 11:39:54 DEBUG org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
2024-09-07 11:39:54 INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-09-07 11:39:54 DEBUG org.hibernate.orm.idgen.factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-09-07 11:39:54 DEBUG o.h.c.i.RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-09-07 11:39:54 DEBUG o.h.c.i.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2024-09-07 11:39:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-07 11:39:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-07 11:39:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7d42404e
2024-09-07 11:39:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-07 11:39:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6af5b246
2024-09-07 11:39:54 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@31723307
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@31723307
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2401856
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2401856
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6d6f6860
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2a4f8009
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@a85644c
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@8054fe2
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1e3f0aea
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@48268eec
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@69a024a0
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4bf80c29
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2d7637e6
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@515b9d4a
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@39b626e5
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@39b626e5
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@39b626e5
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@32a4ecbe
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2e71240b
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2e71240b
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@23cd5d42
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2b44d6d0
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e900e1a
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@196624bf
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@196624bf
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@50085d9c
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5df7e31b
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@63a9c661
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4b425577
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5934153e
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3bb9ca38
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3bb9ca38
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@160e99e0
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@160e99e0
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4f3e9fbb
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@365afe87
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@43471a7e
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@21e45a6f
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1a1ccaaf
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7b53b1ad
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3cc053
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3cc053
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@388c519
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@388c519
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7fbd3e75
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7fbd3e75
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@198536f6
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@198536f6
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7fdd43cd
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7fdd43cd
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a38f122
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2ce03e86
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1c628f6a
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1c628f6a
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@9b47400
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@747835f5
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@594131f2
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@51d0ec6f
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7bee8621
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e0cc334
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1e12a5a6
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1e12a5a6
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4877919f
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@47a7c93e
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6f9ab79d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6f9ab79d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6f9ab79d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@64ae105d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@10a18e3e
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@69364b2d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@53aa2fc9
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@53aa2fc9
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@53aa2fc9
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4792f119
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5bde57ab
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@ea00de
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23ca36d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7bbcf6f0
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7bbcf6f0
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2b80e5a9
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2b80e5a9
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4cc01c7f
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4cc01c7f
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2a50b32d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2a50b32d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@36c7cbe1
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@36c7cbe1
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ac6dd3d
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@49cd946c
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@49cd946c
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@624b523
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@50b46e24
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1c30cb85
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@577bf0aa
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7455dacb
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7634f2b
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1d15c0a1
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@15639d09
2024-09-07 11:39:55 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4fba8eec
2024-09-07 11:39:55 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5a622fe8] into BootstrapContext; was [null]
2024-09-07 11:39:55 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5a622fe8) [was null]
2024-09-07 11:39:55 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4a89ef44] into BootstrapContext; was [null]
2024-09-07 11:39:55 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@310a7859] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1cbc1dde]
2024-09-07 11:39:55 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-07 11:39:55 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-07 11:39:55 DEBUG o.h.b.internal.BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5a622fe8]
2024-09-07 11:39:55 DEBUG o.h.b.internal.ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5a622fe8]
2024-09-07 11:39:55 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-07 11:39:56 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2964511
2024-09-07 11:39:56 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-07 11:39:56 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
2024-09-07 11:39:56 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2024-09-07 11:39:56 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator - JDBC version : 4.2
2024-09-07 11:39:56 DEBUG org.hibernate.orm.dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.16
2024-09-07 11:39:56 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-09-07 11:39:56 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75dd0f94) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72324965)
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@249b54af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@194911c1)
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4751cd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64ec1459)
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1aac0a47) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b3ad7ca)
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6785c9fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63cf578f)
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@194b9783) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45297e7)
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4dd1548e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54bb1194)
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1109730f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f42366)
2024-09-07 11:39:56 DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46c662f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4afdfc0f)
2024-09-07 11:39:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-09-07 11:39:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-09-07 11:39:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-09-07 11:39:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-09-07 11:39:56 DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@8f6b4ab
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@624b523`
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-09-07 11:39:56 DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2024-09-07 11:39:56 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dbb3fb7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@68a426c3]
2024-09-07 11:39:56 DEBUG o.h.boot.model.relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-09-07 11:39:56 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Account
2024-09-07 11:39:56 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Account
2024-09-07 11:39:56 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Account on table account
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Account] is safe
2024-09-07 11:39:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Account
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-09-07 11:39:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Account:accountId]
2024-09-07 11:39:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-09-07 11:39:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_id
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-09-07 11:39:56 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(account_id)]), accountId, assigned, , ...)
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountName with lazy=false
2024-09-07 11:39:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Account:accountName]
2024-09-07 11:39:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountName
2024-09-07 11:39:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: account.account_name
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountName
2024-09-07 11:39:56 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Allocation
2024-09-07 11:39:56 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Allocation
2024-09-07 11:39:56 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Allocation on table allocation
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Allocation] is safe
2024-09-07 11:39:56 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Allocation
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationId with lazy=false
2024-09-07 11:39:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationId]
2024-09-07 11:39:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationId
2024-09-07 11:39:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.allocation_id
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationId
2024-09-07 11:39:56 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(allocation_id)]), allocationId, identity, , ...)
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property accountId with lazy=false
2024-09-07 11:39:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:accountId]
2024-09-07 11:39:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for accountId
2024-09-07 11:39:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.account_id
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property accountId
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocatedQuantity with lazy=false
2024-09-07 11:39:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocatedQuantity]
2024-09-07 11:39:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocatedQuantity
2024-09-07 11:39:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.allocated_quantity
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocatedQuantity
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationCcy with lazy=false
2024-09-07 11:39:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationCcy]
2024-09-07 11:39:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationCcy
2024-09-07 11:39:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.allocation_ccy
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationCcy
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property allocationCost with lazy=false
2024-09-07 11:39:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:allocationCost]
2024-09-07 11:39:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for allocationCost
2024-09-07 11:39:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.allocation_cost
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocationCost
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-07 11:39:56 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:fromDt]
2024-09-07 11:39:56 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-07 11:39:56 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.from_dt
2024-09-07 11:39:56 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='order_id')
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property order
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property pendingQuantity with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:pendingQuantity]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for pendingQuantity
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.pending_quantity
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property pendingQuantity
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Allocation:thruDt]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: allocation.thru_dt
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Fill
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Fill
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Fill on table fill
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Fill] is safe
2024-09-07 11:39:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Fill
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fillId with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fillId]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fillId
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fill.fill_id
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property fillId
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(fill_id)]), fillId, identity, , ...)
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='allocation_id')
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocation
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fillQuantity with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fillQuantity]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fillQuantity
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fill.fill_quantity
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property fillQuantity
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:fromDt]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fill.from_dt
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Fill:thruDt]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: fill.thru_dt
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Order
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Order
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Order on table order
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Order] is safe
2024-09-07 11:39:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Order
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property orderId with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:orderId]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for orderId
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.order_id
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property orderId
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(order_id)]), orderId, identity, , ...)
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: IndexColumn(column='allocations_ORDER')
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn(column='allocations_KEY')
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='allocations_KEY')
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedJoinColumn()
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.CollectionBinder - Collection role: org.orderManagementSystem.entity.Order.allocations
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property allocations
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property ccy with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:ccy]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for ccy
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.ccy
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property ccy
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property direction with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:direction]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for direction
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.direction
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property direction
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property fromDt with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:fromDt]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for fromDt
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.from_dt
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property fromDt
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:productId]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.product_id
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:quantity]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for quantity
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.quantity
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property quantity
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property sourceId with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:sourceId]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for sourceId
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.source_id
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property sourceId
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property thruDt with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Order:thruDt]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for thruDt
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: order.thru_dt
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property thruDt
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Binding entity from annotated class: org.orderManagementSystem.entity.Product
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Import with entity name Product
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.EntityBinder - Bind entity org.orderManagementSystem.entity.Product on table product
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Product] is safe
2024-09-07 11:39:57 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Product
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productId with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Product:productId]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productId
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_id
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property productId
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.BinderHelper - #makeIdGenerator(BasicValue([Column(product_id)]), productId, assigned, , ...)
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.AnnotatedColumn - Binding column: AnnotatedColumn()
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - MetadataSourceProcessor property productName with lazy=false
2024-09-07 11:39:57 DEBUG o.h.b.m.i.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.orderManagementSystem.entity.Product:productName]
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - building BasicValue for productName
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.BasicValue - Skipping column re-registration: product.product_name
2024-09-07 11:39:57 DEBUG o.h.b.model.internal.PropertyBinder - Building property productName
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountName
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationId
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for accountId
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocatedQuantity
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationCcy
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for allocationCost
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for pendingQuantity
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fillId
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fillQuantity
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for orderId
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for ccy
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for direction
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for fromDt
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for quantity
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for sourceId
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for thruDt
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productId
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for productName
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [account]
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [allocation_id] to be non-null as it is part of the primary key for table [allocation]
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [fill_id] to be non-null as it is part of the primary key for table [fill]
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [order_id] to be non-null as it is part of the primary key for table [order]
2024-09-07 11:39:57 DEBUG org.hibernate.mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
2024-09-07 11:39:57 DEBUG o.h.b.m.i.CollectionSecondPass - Second pass for collection: org.orderManagementSystem.entity.Order.allocations
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.CollectionBinder - Binding a OneToMany: org.orderManagementSystem.entity.Order.allocations through a foreign key
2024-09-07 11:39:57 DEBUG o.h.b.m.internal.CollectionBinder - Mapping collection: org.orderManagementSystem.entity.Order.allocations -> allocation
2024-09-07 11:39:57 DEBUG o.h.boot.model.internal.TableBinder - Retrieving property org.orderManagementSystem.entity.Allocation.order
2024-09-07 11:39:57 DEBUG o.h.b.m.i.CollectionSecondPass - Mapped collection key: order_id, one-to-many: org.orderManagementSystem.entity.Allocation
2024-09-07 11:39:57 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Order
2024-09-07 11:39:57 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Allocation
2024-09-07 11:39:57 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Order
2024-09-07 11:39:57 DEBUG o.h.b.i.InFlightMetadataCollectorImpl - Resolving reference to class: org.orderManagementSystem.entity.Allocation
2024-09-07 11:39:57 INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2024-09-07 11:39:57 DEBUG o.h.internal.SessionFactoryImpl - Building session factory
2024-09-07 11:39:57 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-09-07 11:39:57 DEBUG o.h.internal.SessionFactoryImpl - Instantiating SessionFactory with settings: {java.specification.version=21, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@305881b8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/aniamritapc/IdeaProjects/OMS/build/classes/java/main:/Users/aniamritapc/IdeaProjects/OMS/build/resources/main:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-web/3.1.1/f2c2d9e35430e4b4a98ad91780bb9b2d1deec08/spring-boot-starter-web-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-data-jpa/3.1.1/f129ea070d7d7152c984189301dc751be45f9a38/spring-boot-starter-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.kafka/spring-kafka/3.0.8/5414e0e12541429e19cb8f120bb7479d0b79f4e9/spring-kafka-3.0.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-json/3.1.1/8dc99860536a6a858de6caaeb67f84d7af8a30a3/spring-boot-starter-json-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.15.2/30d16ec2aef6d8094c5e2dce1d95034ca8b6cb42/jackson-datatype-jsr310-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.15.2/75f8d2788db20f6c587c7a19e94fb6248c314241/jackson-module-parameter-names-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.15.2/4724a65ac8e8d156a24898d50fd5dbd3642870b8/jackson-annotations-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.15.2/a6fe1836469a69b3ff66037c324d75fc66ef137c/jackson-core-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.15.2/66a50e089cfd2f93896b9b6f7a734cea7bcf2f31/jackson-datatype-jdk8-2.15.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.15.0/d41caa3a4e9f85382702a059a65c512f85ac230/jackson-databind-2.15.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.mysql/mysql-connector-j/8.0.33/9e64d997873abc4318620264703d3fdb6b02dd5a/mysql-connector-j-8.0.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-aop/3.1.1/f72362878ded668b8c3a12f8465ced98ef3fb188/spring-boot-starter-aop-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-jdbc/3.1.1/8e6bdc511fc9ade17c09fcc20a0f6a44fa39a876/spring-boot-starter-jdbc-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter/3.1.1/cf74eeaef5a265c75dd89fea829391bf08efdb6c/spring-boot-starter-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-tomcat/3.1.1/927f80fb9d8816209420223d1a1a09e730ea78e6/spring-boot-starter-tomcat-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/6.0.10/af3f040747f4bfbcdb96140f8c9d252d3a6a4ef1/spring-webmvc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/6.0.10/e61defa7908bf7a499f000dab8ef7691c2aa75c1/spring-web-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.orm/hibernate-core/6.2.5.Final/3c0d24dd2f66920aeeee666779ca7391f20bc69c/hibernate-core-6.2.5.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/3.1.1/815665072b1cfa83aa3175228539e3e468db15e0/spring-data-jpa-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/6.0.10/4a6a423ce6fdc474a327f7b7a7818dedc33c504f/spring-aspects-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/3.1.1/618ec717eef4ba2ff347c7713150aac8e73fe233/spring-boot-autoconfigure-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/3.1.1/f8f80c1453c8fe0e08a6235f983d8daf571d3e3/spring-boot-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/6.0.10/e2bd59f05c95647a274b7719d419cf8fde6f25a0/spring-context-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-messaging/6.0.10/4854409bad759c2e65456b421604acf97e0237fc/spring-messaging-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/6.0.10/321d8f382fad673d8b4d4047b4370176561c5a60/spring-orm-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/6.0.10/5179c98c5eba511cdd31852d1f74063aa17bf3da/spring-jdbc-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/6.0.10/459698d22aadc881afe425934cca79cc1f6bce91/spring-tx-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.retry/spring-retry/2.0.2/bd0d8859447e4311c0e0e4bfb5d571d57d9011cf/spring-retry-2.0.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.4.1/a2f55251deb3d31a21903a0cfbd4d1fa6b7463ca/kafka-clients-3.4.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-observation/1.11.1/9027a35892c7e08ea8affce87b3662b6ceca122c/micrometer-observation-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-starter-logging/3.1.1/53bb456e4bf8f751de5a6ce154707b052946fd43/spring-boot-starter-logging-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/2.1.1/48b9bda22b091b1f48b13af03fe36db3be6e1ae3/jakarta.annotation-api-2.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/6.0.10/cc309a306fa759018b107dea9a208c758af0297/spring-aop-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/3.1.1/cfc10ccc41910b7b6e83cf27debaac73229572e0/spring-data-commons-3.1.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/6.0.10/8fc0684773cc1598edd810660f57d9e9c8ae6055/spring-beans-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/6.0.10/bd8c93e473e713fe9150a772487507a8e600d5f1/spring-expression-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/6.0.10/889aa214b6607763ddeb6bd391d682cd71681b36/spring-core-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/1.33/2cd0a87ff7df953f810c344bdf2fe3340b954c69/snakeyaml-1.33.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/10.1.10/10604119402bcaa8490b638698ad177f8df4c50c/tomcat-embed-websocket-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/10.1.10/7423236b34aa78d6f36592b2aa294d7c8469f219/tomcat-embed-core-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/10.1.10/717033c0417fdc7e794b382c066b7e78f6029268/tomcat-embed-el-10.1.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.19/afbffb1210239fbba5cad73093c5b216d515838f/aspectjweaver-1.9.19.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/5.0.1/a74c7f0a37046846e88d54f7cb6ea6d565c65f9c/HikariCP-5.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.1.0/66901fa1c373c6aff65c13791cc11da72060a8d6/jakarta.persistence-api-3.1.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/2.0.1/51a520e3fae406abb84e2e1148e6746ce3f80a1a/jakarta.transaction-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.5.1.Final/a5c340a92c6efeaa0d495047ee9aab38a86bb107/jboss-logging-3.5.1.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/6.0.6.Final/77a5f94b56d49508e0ee334751db5b78e5ccd50c/hibernate-commons-annotations-6.0.6.Final.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.smallrye/jandex/3.0.5/c548a4871b552292dbdd65409d3fda145c8925c1/jandex-3.0.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.14.5/28a424c0c4f362568e904d992c239c996cf7adc7/byte-buddy-1.14.5.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/4.0.3/93af25be25b2c92c83e0ce61cb8b3ed23568f316/jaxb-runtime-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-core/4.0.3/e9093b4a82069a1d78ee9a3233ca387bca88861f/jaxb-core-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/4.0.0/bbb399208d288b15ec101fa4fcfc4bd77cedc97a/jakarta.xml.bind-api-4.0.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.inject/jakarta.inject-api/2.0.1/4c28afe1991a941d7702fe1362c365f0a8641d1e/jakarta.inject-api-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.10.1/10839f875928f59c622d675091d51a43ea0dc5f7/antlr4-runtime-4.10.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.4.8/f00ba91d993e4d14301b11968d3cacc3be7ef3e1/logback-classic-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.20.0/d37f81f8978e2672bc32c82712ab4b3f66624adc/log4j-to-slf4j-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/2.0.7/a48f44aeaa8a5ddc347007298a28173ac1fbbd8b/jul-to-slf4j-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.7/41eb7184ea9d556f23e18b5cb99cad1f8581fc00/slf4j-api-2.0.7.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.github.luben/zstd-jni/1.5.2-1/fad786abc1d1b81570e8d9a2fc8a1ef479bc27b6/zstd-jni-1.5.2-1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.lz4/lz4-java/1.8.0/4b986a99445e49ea5fbf5d149c4b63f6ed6c6780/lz4-java-1.8.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.xerial.snappy/snappy-java/1.1.8.4/66f0d56454509f6e36175f2331572e250e04a6cc/snappy-java-1.1.8.4.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-commons/1.11.1/45bc0f2aa4d6180f1a783f1930f307a4efbb12e8/micrometer-commons-1.11.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jcl/6.0.10/cba44e98dab40a506c50978a0e5f11ceaa90b3ff/spring-jcl-6.0.10.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.eclipse.angus/angus-activation/2.0.1/eaafaf4eb71b400e4136fc3a286f50e34a68ecb7/angus-activation-2.0.1.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/2.1.2/640c0d5aff45dbff1e1a1bc09673ff3a02b1ba12/jakarta.activation-api-2.1.2.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.4.8/3fba9c105e0efc5ffdcda701379687917d5286f7/logback-core-1.4.8.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.20.0/1fe6082e660daf07c689a89c94dc0f49c26b44bb/log4j-api-2.20.0.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/4.0.3/47b8fe31c6d1a3382203af919400527389e01e9c/txw2-4.0.3.jar:/Users/aniamritapc/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/4.1.2/18ec117c85f3ba0ac65409136afa8e42bc74e739/istack-commons-runtime-4.1.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Kolkata, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=21, os.name=Mac OS X, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=SG, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/lib, sun.java.command=org.orderManagementSystem.OmsApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7e89eba7, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/Users/aniamritapc, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-07-16, java.home=/Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, apple.awt.application.name=OmsApplication, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=21.0.4+8-LTS-274, user.name=aniamritapc, stdout.encoding=US-ASCII, path.separator=:, os.version=10.15.7, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/, catalina.home=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.12441427826164032178, java.version=21.0.4, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=/Users/aniamritapc/IdeaProjects/OMS, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=9231, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/1r/lv5qxrlj5fg1t09xn9jd7kh40000gn/T/tomcat.8080.12441427826164032178, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6bc25ac2, native.encoding=US-ASCII, java.library.path=/Users/aniamritapc/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=US-ASCII, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.4+8-LTS-274, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=65.0}
2024-09-07 11:39:57 DEBUG o.h.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@733fa95c] under count; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@61836cd9] under every; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1b632442] under any; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3d3b272a] under sinh; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45b27ad3] under cosh; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f908bc0] under tanh; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@422ba9b7] under pi; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26cdd4af] under log; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : length -> character_length
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@17f41739] under position; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@43f99817] under overlay; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3ec7ad61] under trim; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@340fc1aa] under cast; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34a33343] under collate; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@22429a11] under extract; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2adc1e84] under ifnull; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@57927bc9] under pad; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@684b26b7] under str; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@10cb050] under format; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3f4964f2] under timestampadd; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2c5708e7] under timestampdiff; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5627b8eb] under current_date; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49fe0bcd] under current_time; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3516b881] under current_timestamp; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current date -> current_date
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current time -> current_time
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6be8ce1b] under local_date; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e3c36d] under local_time; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@397a10df] under local_datetime; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39a865c1] under offset_datetime; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local date -> local_date
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local time -> local_time
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@141dfcf9] under instant; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@621392ea] under sql; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26cdd4af
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@56f72909] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@71285693] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3199a202] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@17f41739
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@727956bb] under trunc; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : truncate -> trunc
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ffbf0ac] under bitand; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ad5cffa] under bitor; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@237aa0c7] under bitxor; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b8ee69d] under bitnot; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2b400bd0] under format; prior registration was org.hibernate.dialect.function.FormatFunction@10cb050
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@e3c36d
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@397a10df
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@fceab5d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@422ba9b7
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79445efb] under chr; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registering alternate key : char -> chr
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1592e540] under sysdate; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2739ecc0] under rank; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2932e15f] under dense_rank; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3d98729a] under percent_rank; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2375a976] under cume_dist; prior registration was null
2024-09-07 11:39:57 DEBUG o.h.q.s.function.SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@506b083] under listagg; prior registration was null
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - abs(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double acos(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer ascii(STRING arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double asin(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double avg(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - bit_and(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - bit_or(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - bitand(arg0, arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - bitnot(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - bitor(arg0, arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - bitxor(arg0, arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - cast(arg as Type)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - ceiling(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Character char(INTEGER arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Character chr(INTEGER arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double cos(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double cosh(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double cot(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer crc32(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Date curdate()
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Date current date
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Time current time
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current timestamp
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Date current_date
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Instant current_instant
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Time current_time
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp current_timestamp
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Time curtime()
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Date date(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer day(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String dayname(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofweek(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer dayofyear(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double exp(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - first_valueANY value
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - floor(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer hour(TIME arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - ifnull(arg0, arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Instant instant
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Date last_day(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - last_valueANY value
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double ln(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local date
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local datetime
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local time
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDate local_date
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - LocalDateTime local_datetime
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - LocalTime local_time
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtime
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp localtimestamp
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double log10(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double log2(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String lower(STRING string)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String lpad(string, length[, padding])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - max(COMPARABLE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String md5(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer microsecond(TIME arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - min(COMPARABLE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer minute(TIME arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer month(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String monthname(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp now()
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - nullif(arg0, arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset datetime
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - OffsetDateTime offset_datetime
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double pi
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer quarter(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double radians(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double rand([INTEGER seed])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Long rank([arg0[, ...]])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String reverse(STRING arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Long row_number()
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String rpad(string, length[, padding])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer second(TIME arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String sha(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String sha1(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String sha2(arg0, arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double sin(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double sinh(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String soundex(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String space(INTEGER arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Object sql
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String str(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - sum(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp sysdate()
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double tan(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double tanh(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String time(arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - basicType@5(java.lang.Long,-5)|basicType@7(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - trunc( ... )
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - truncate( ... )
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - String upper(STRING string)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Date utc_date
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Time utc_time
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Timestamp utc_timestamp
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Double variance(NUMERIC arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer week(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.HQL_FUNCTIONS - Integer year(DATE arg)
2024-09-07 11:39:57 DEBUG org.hibernate.orm.query.plan.cache - Starting QueryPlanCache(2048)
2024-09-07 11:39:58 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-07 11:39:58 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Allocation] is safe
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Allocation
2024-09-07 11:39:58 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Allocation]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountId]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-07 11:39:58 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Allocation#order` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Product] is safe
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Product
2024-09-07 11:39:58 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [productName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Account] is safe
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Account
2024-09-07 11:39:58 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Account]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [accountName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Order] is safe
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Order
2024-09-07 11:39:58 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Order]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [allocations]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-07 11:39:58 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-07 11:39:58 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - Not known whether passed class name [org.orderManagementSystem.entity.Fill] is safe
2024-09-07 11:39:58 DEBUG o.h.b.internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.orderManagementSystem.entity.Fill
2024-09-07 11:39:58 DEBUG o.h.b.i.b.BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.orderManagementSystem.entity.Fill]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [allocation]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:508)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
2024-09-07 11:39:58 DEBUG o.hibernate.ormbytecode.interceptor - To-one property `org.orderManagementSystem.entity.Fill#allocation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2024-09-07 11:39:58 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection (re)creation - org.orderManagementSystem.entity.Order.allocations
2024-09-07 11:39:58 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection row deletions - org.orderManagementSystem.entity.Order.allocations
2024-09-07 11:39:58 DEBUG org.hibernate.orm.jdbc.mutation - Skipping collection removals - org.orderManagementSystem.entity.Order.allocations
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting post-init callbacks
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.orderManagementSystem.entity.Allocation.order]
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Allocation) `staticFetchableList` generator
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Product) `staticFetchableList` generator
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Account) `staticFetchableList` generator
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.orderManagementSystem.entity.Order.allocations#{element}]) - element descriptor
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.orderManagementSystem.entity.Order.allocations)#finishInitialization
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.orderManagementSystem.entity.Order.allocations) - key descriptor
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Order) `staticFetchableList` generator
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.orderManagementSystem.entity.Fill.allocation]
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : Entity(org.orderManagementSystem.entity.Fill) `staticFetchableList` generator
2024-09-07 11:39:58 DEBUG o.h.orm.model.mapping.creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.orderManagementSystem.entity.Order.allocations#{element}]) - element descriptor
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Allocation
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select allocation_id from allocation where allocation_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into allocation (account_id,allocated_quantity,allocation_ccy,allocation_cost,from_dt,order_id,pending_quantity,thru_dt) values (?,?,?,?,?,?,?,?)
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update allocation set account_id=?,allocated_quantity=?,allocation_ccy=?,allocation_cost=?,from_dt=?,order_id=?,pending_quantity=?,thru_dt=? where allocation_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from allocation where allocation_id=?
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Allocation)] with identifierForTableGroup [org.orderManagementSystem.entity.Allocation] for NavigablePath [org.orderManagementSystem.entity.Allocation] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a86be01] with identifierForTableGroup [org.orderManagementSystem.entity.Allocation.order] for NavigablePath [org.orderManagementSystem.entity.Allocation.order] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Allocation]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.accountId]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocatedQuantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocationCcy]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.allocationCost]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.fromDt]
 |  +-EntityFetchJoinedImpl [org.orderManagementSystem.entity.Allocation.order]
 |  +-BasicFetch [org.orderManagementSystem.entity.Allocation.pendingQuantity]
 |  \-BasicFetch [org.orderManagementSystem.entity.Allocation.thruDt]

2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.orderManagementSystem.entity.Allocation) {
          primaryTableReference : allocation as a1_0
          TableGroupJoins {
             join LazyTableGroup (o1 : org.orderManagementSystem.entity.Allocation.order) {
              primaryTableReference : order as o1_0
            }
          }
        }
      }
    }

2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Product
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select product_id from product where product_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into product (product_name,product_id) values (?,?)
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update product set product_name=? where product_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from product where product_id=?
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : p1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Product)] with identifierForTableGroup [org.orderManagementSystem.entity.Product] for NavigablePath [org.orderManagementSystem.entity.Product] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Product]
 |  \-BasicFetch [org.orderManagementSystem.entity.Product.productName]

2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.orderManagementSystem.entity.Product) {
          primaryTableReference : product as p1_0
        }
      }
    }

2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Account
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select account_id from account where account_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into account (account_name,account_id) values (?,?)
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update account set account_name=? where account_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from account where account_id=?
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Account)] with identifierForTableGroup [org.orderManagementSystem.entity.Account] for NavigablePath [org.orderManagementSystem.entity.Account] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Account]
 |  \-BasicFetch [org.orderManagementSystem.entity.Account.accountName]

2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : org.orderManagementSystem.entity.Account) {
          primaryTableReference : account as a1_0
        }
      }
    }

2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Order
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select order_id from order where order_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into order (ccy,direction,from_dt,product_id,quantity,source_id,thru_dt) values (?,?,?,?,?,?,?)
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update order set ccy=?,direction=?,from_dt=?,product_id=?,quantity=?,source_id=?,thru_dt=? where order_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from order where order_id=?
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Order)] with identifierForTableGroup [org.orderManagementSystem.entity.Order] for NavigablePath [org.orderManagementSystem.entity.Order] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Order]
 |  +-DelayedCollectionFetch [org.orderManagementSystem.entity.Order.allocations]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.ccy]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.direction]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.fromDt]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.productId]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.quantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Order.sourceId]
 |  \-BasicFetch [org.orderManagementSystem.entity.Order.thruDt]

2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (o1 : org.orderManagementSystem.entity.Order) {
          primaryTableReference : order as o1_0
        }
      }
    }

2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister - Static SQL for entity: org.orderManagementSystem.entity.Fill
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Version select: select fill_id from fill where fill_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Insert (0): insert into fill (allocation_id,fill_quantity,from_dt,thru_dt) values (?,?,?,?)
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Update (0): update fill set allocation_id=?,fill_quantity=?,from_dt=?,thru_dt=? where fill_id=?
2024-09-07 11:39:58 DEBUG o.h.p.entity.AbstractEntityPersister -  Delete (0): delete from fill where fill_id=?
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : f1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Fill)] with identifierForTableGroup [org.orderManagementSystem.entity.Fill] for NavigablePath [org.orderManagementSystem.entity.Fill] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d07e04e] with identifierForTableGroup [org.orderManagementSystem.entity.Fill.allocation] for NavigablePath [org.orderManagementSystem.entity.Fill.allocation] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@599310ab] with identifierForTableGroup [org.orderManagementSystem.entity.Fill.allocation.order] for NavigablePath [org.orderManagementSystem.entity.Fill.allocation.order] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : o1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.results.graph.AST - DomainResult Graph:
 \-EntityResultImpl [org.orderManagementSystem.entity.Fill]
 |  +-EntityFetchJoinedImpl [org.orderManagementSystem.entity.Fill.allocation]
 |  +-BasicFetch [org.orderManagementSystem.entity.Fill.fillQuantity]
 |  +-BasicFetch [org.orderManagementSystem.entity.Fill.fromDt]
 |  \-BasicFetch [org.orderManagementSystem.entity.Fill.thruDt]

2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (f1 : org.orderManagementSystem.entity.Fill) {
          primaryTableReference : fill as f1_0
          TableGroupJoins {
             join LazyTableGroup (a1 : org.orderManagementSystem.entity.Fill.allocation) {
              primaryTableReference : allocation as a1_0
              TableGroupJoins {
                left  join LazyTableGroup (o1 : org.orderManagementSystem.entity.Fill.allocation.order) {
                  primaryTableReference : order as o1_0
                }
              }
            }
          }
        }
      }
    }

2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Created new SQL alias : a1_0
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@50b4e7b2] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations] for NavigablePath [org.orderManagementSystem.entity.Order.allocations] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [StandardTableGroup(org.orderManagementSystem.entity.Order.allocations.{element})] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations.{element}] for NavigablePath [org.orderManagementSystem.entity.Order.allocations.{element}] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.sql.ast.create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c45191e] with identifierForTableGroup [org.orderManagementSystem.entity.Order.allocations.{element}.order] for NavigablePath [org.orderManagementSystem.entity.Order.allocations.{element}.order] 
2024-09-07 11:39:58 DEBUG org.hibernate.orm.jdbc.mutation - Static SQL for collection: org.orderManagementSystem.entity.Order.allocations
2024-09-07 11:39:58 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-09-07 11:39:58 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2024-09-07 11:39:58 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-09-07 11:39:58 DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dbb3fb7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1896299b]
2024-09-07 11:39:58 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named HQL queries
2024-09-07 11:39:58 DEBUG o.h.q.named.NamedObjectRepository - Checking 0 named SQL queries
2024-09-07 11:39:58 DEBUG org.hibernate.SQL - alter table allocation drop foreign key FK14upafay5btx2ciwy07xm5nvd
2024-09-07 11:39:58 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table allocation drop foreign key FK14upafay5btx2ciwy07xm5nvd" via JDBC [Can't DROP 'FK14upafay5btx2ciwy07xm5nvd'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table allocation drop foreign key FK14upafay5btx2ciwy07xm5nvd" via JDBC [Can't DROP 'FK14upafay5btx2ciwy07xm5nvd'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:455)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FK14upafay5btx2ciwy07xm5nvd'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-07 11:39:58 DEBUG org.hibernate.SQL - alter table fill drop foreign key FKn19uwov77ltfanaulkivsr6e7
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - drop table if exists account
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - drop table if exists allocation
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - drop table if exists fill
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - drop table if exists order
2024-09-07 11:39:59 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists order" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists order" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:362)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:242)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - drop table if exists product
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - create table account (account_id varchar(255) not null, account_name varchar(255), primary key (account_id)) engine=InnoDB
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - create table allocation (allocated_quantity integer not null, allocation_cost float(53) not null, from_dt date not null, pending_quantity integer not null, thru_dt date not null, allocation_id bigint not null auto_increment, order_id bigint not null, account_id varchar(255) not null, allocation_ccy varchar(255) not null, primary key (allocation_id)) engine=InnoDB
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - create table fill (fill_quantity integer not null, from_dt date not null, thru_dt date not null, allocation_id bigint not null, fill_id bigint not null auto_increment, primary key (fill_id)) engine=InnoDB
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - create table order (from_dt date not null, quantity integer not null, thru_dt date not null, order_id bigint not null auto_increment, ccy varchar(255) not null, direction varchar(255) not null, product_id varchar(255) not null, source_id varchar(255) not null, primary key (order_id)) engine=InnoDB
2024-09-07 11:39:59 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create table order (from_dt date not null, quantity integer not null, thru_dt date not null, order_id bigint not null auto_increment, ccy varchar(255) not null, direction varchar(255) not null, product_id varchar(255) not null, source_id varchar(255) not null, primary key (order_id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (from_dt date not null, quantity integer not null, thru_dt date not null, ' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table order (from_dt date not null, quantity integer not null, thru_dt date not null, order_id bigint not null auto_increment, ccy varchar(255) not null, direction varchar(255) not null, product_id varchar(255) not null, source_id varchar(255) not null, primary key (order_id)) engine=InnoDB" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (from_dt date not null, quantity integer not null, thru_dt date not null, ' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:419)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:254)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (from_dt date not null, quantity integer not null, thru_dt date not null, ' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 40 common frames omitted
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - create table product (product_id varchar(255) not null, product_name varchar(255), primary key (product_id)) engine=InnoDB
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - alter table allocation add constraint FK14upafay5btx2ciwy07xm5nvd foreign key (order_id) references order (order_id)
2024-09-07 11:39:59 WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "alter table allocation add constraint FK14upafay5btx2ciwy07xm5nvd foreign key (order_id) references order (order_id)" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (order_id)' at line 1]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table allocation add constraint FK14upafay5btx2ciwy07xm5nvd foreign key (order_id) references order (order_id)" via JDBC [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (order_id)' at line 1]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:92)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:235)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:219)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:254)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:292)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at org.orderManagementSystem.OmsApplication.main(OmsApplication.java:9)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order (order_id)' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:78)
	... 39 common frames omitted
2024-09-07 11:39:59 DEBUG org.hibernate.SQL - alter table fill add constraint FKn19uwov77ltfanaulkivsr6e7 foreign key (allocation_id) references allocation (allocation_id)
2024-09-07 11:39:59 DEBUG o.h.t.s.i.e.GenerationTargetToDatabase - HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
2024-09-07 11:39:59 DEBUG o.h.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1cda75be
2024-09-07 11:39:59 DEBUG o.h.internal.SessionFactoryRegistry - Registering SessionFactory: 72fe4fe1-be42-4a58-adc6-08a45248e991 (<unnamed>)
2024-09-07 11:39:59 DEBUG o.h.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2024-09-07 11:39:59 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1896299b] for TypeConfiguration
2024-09-07 11:39:59 DEBUG o.h.internal.SessionFactoryImpl - Instantiated SessionFactory
2024-09-07 11:39:59 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-07 11:39:59 DEBUG o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2024-09-07 11:39:59 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-07 11:40:00 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-09-07 11:40:00 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2024-09-07 11:40:00 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-oms-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = oms-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-09-07 11:40:01 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.4.1
2024-09-07 11:40:01 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 8a516edc2755df89
2024-09-07 11:40:01 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1725689401089
2024-09-07 11:40:01 INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Subscribed to topic(s): orders_topic
2024-09-07 11:40:01 INFO  o.o.OmsApplication - Started OmsApplication in 10.261 seconds (process running for 12.197)
2024-09-07 11:40:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Error while fetching metadata with correlation id 2 : {orders_topic=LEADER_NOT_AVAILABLE}
2024-09-07 11:40:01 INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Cluster ID: F76p9uMWS_eNp9T0HSAydQ
2024-09-07 11:40:01 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Error while fetching metadata with correlation id 4 : {orders_topic=LEADER_NOT_AVAILABLE}
2024-09-07 11:40:02 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Error while fetching metadata with correlation id 6 : {orders_topic=LEADER_NOT_AVAILABLE}
2024-09-07 11:40:02 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Error while fetching metadata with correlation id 8 : {orders_topic=LEADER_NOT_AVAILABLE}
2024-09-07 11:40:02 WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Error while fetching metadata with correlation id 10 : {orders_topic=LEADER_NOT_AVAILABLE}
2024-09-07 11:40:02 INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Resetting the last seen epoch of partition orders_topic-0 to 0 since the associated topicId changed from null to DYz7b328R7aKx5rjNii9xQ
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] (Re-)joining group
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Request joining group due to: need to re-join with the given member-id: consumer-oms-group-1-d1cde8dd-8bf5-45b0-83a0-f854e6e10c24
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] (Re-)joining group
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-oms-group-1-d1cde8dd-8bf5-45b0-83a0-f854e6e10c24', protocol='range'}
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Finished assignment for group at generation 1: {consumer-oms-group-1-d1cde8dd-8bf5-45b0-83a0-f854e6e10c24=Assignment(partitions=[orders_topic-0])}
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-oms-group-1-d1cde8dd-8bf5-45b0-83a0-f854e6e10c24', protocol='range'}
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Notifying assignor about the new Assignment(partitions=[orders_topic-0])
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Adding newly assigned partitions: orders_topic-0
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Found no committed offset for partition orders_topic-0
2024-09-07 11:40:04 INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Resetting offset for partition orders_topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}.
2024-09-07 11:40:04 INFO  o.s.k.l.KafkaMessageListenerContainer - oms-group: partitions assigned: [orders_topic-0]
2024-09-07 11:48:00 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Revoke previously assigned partitions orders_topic-0
2024-09-07 11:48:00 INFO  o.s.k.l.KafkaMessageListenerContainer - oms-group: partitions revoked: [orders_topic-0]
2024-09-07 11:48:00 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Member consumer-oms-group-1-d1cde8dd-8bf5-45b0-83a0-f854e6e10c24 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-09-07 11:48:00 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-07 11:48:00 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Request joining group due to: consumer pro-actively leaving the group
2024-09-07 11:48:00 INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Unsubscribed all topics or patterns and assigned partitions
2024-09-07 11:48:00 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-09-07 11:48:00 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-oms-group-1, groupId=oms-group] Request joining group due to: consumer pro-actively leaving the group
2024-09-07 11:48:00 INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-09-07 11:48:00 INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-09-07 11:48:00 INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-09-07 11:48:00 INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-oms-group-1 unregistered
2024-09-07 11:48:00 INFO  o.s.k.l.KafkaMessageListenerContainer - oms-group: Consumer stopped
2024-09-07 11:48:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-07 11:48:00 DEBUG o.h.internal.SessionFactoryImpl - HHH000031: Closing
2024-09-07 11:48:00 TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1896299b] for TypeConfiguration
2024-09-07 11:48:00 DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@74c9c318] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1896299b]
2024-09-07 11:48:00 DEBUG o.h.s.i.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-09-07 11:48:00 DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-09-07 11:48:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-07 11:48:00 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
